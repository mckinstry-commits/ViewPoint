<File version="2">
  <FileID>973c2e22-18b7-44d6-a416-8eaa15bb3778</FileID>
  <Preview>iVBORw0KGgoAAAANSUhEUgAAAgAAAAIACAYAAAD0eNT6AAAAAXNSR0IArs4c6QAAAARnQU1BAACx
jwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAADJeSURBVHhe7d13dNX3nef/mZ3M5Mw5c/afPbPz
O2d/M5ndmc3Z3dlkMjspm2I7E8c2xo4rAYfENjbG2Bg3TBO92XQkg00H0zsIREcF9d577713iWK/
9vP5SgIhlATbeCLyeT7PeRykq/v9fu+9svV5f++9iD8hIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIi
IiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIi
IiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIi
IiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIi
IiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIi
IiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIqKRW6RR
+ud//uel//zP3y6d+NLE0ldemQQAAO4RkydPLn3wwZ+Vfu1rXyv90z/901Kzrhd4K/zv6s/+7M9q
/+7v/k7jxo7TqrV+Co9NVV5pg1GvvJI6AAAwkpk1O6ugXIeO+uull17SN7/5Tf3FX/yF+pf531np
uHHjdCLgghLzahSaWqzQlCIAAHCPuJxcpIS8WkXEJOv111/XX/7lX17tX+N/e//87W+XLl+5Vklm
8b+cXKhQw/4JAADuDXbtDkkqUHJBnY76n9F9P/nJ7x8AXnrppdLQmFRFpJUqzEwRAADg3hScVKj8
8kbNnTvv9w8AkyZNKi2pala4HQBSiwEAwD0qJLlIFY3dn28AsM8AhJuNAQDAvcm+F6CsrkNzfObe
4QBQ2aTI9DIzBJQML7308xluHwAA9IvKKFNMVoVis78adt/2GPZYkWZdis4sH/Z6d4vdvz3Ojfs2
zHXuFnvfBo41lH0WoLy+Uz53PABUNZsb3/dgDa/89s8zqxTZz358w23XBQDgViEJ+drjH64t+wO1
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
922Vn9+H2rT/pEIuxykzN1tZ5jbZ25VbWKT06IvaZY/j+6G2HwtVXnGpCjJj5b/3Y33ot0HHw9NV
Wl6kpJAAbfFbJ7+NBxVtFvS4sGBdDI5VdkGRMmPOmPvmp/U7DysirUAFOX37H2Afv9raWgaAexgD
AAAnDB4A7NPX9k/7bICVkZWj/LwcZXifpykjO897k1thfq53ttv3ckGuWWQzbmxjr5dlhgX7RsKS
Evv6uNne22eW8oqKvWcZCs1lmRnmc7utWTAzsnJVaC4vKSkyZ+yZSjfXv3mZOcPOyVJGZrYK7P7y
ss3XM7wF3X6tqDBPWeaYaWZ/+YV9+y8pKlCu2SY9beA2GebjTHP7C73bZbazt8tsl273W9R3W/PN
sdPM9bJy81Vs91NcqByzqGfnmPuZa/eXpsyc/q+ZY+Rkpivtxv3uk5qaqpqaGgaAexgDAAAnDH4P
gF0Yk5KS8CXYx5H3ANzbGAAAOMEOANu3b9fRo0e9z+3r1/YpbHwx9ncpJCYm8q8B3sMYAAA4wS5Q
9o1rq1ev1qZNm7R79258QXv27NEnn3yiDz74QMHBweZnvf15/7v/nQOMPAwAAJxh//GaoqIixcfH
KzY2VnFxcfgCBh47+zKAfSbAGu7xxsjGAADAKfYfsLEvB+DLswMVZ/73LgYAAAAcxAAAAICDGAAA
AHAQAwAAAA5iAAAAwEEMAAAAOIgBAAAABzEAAADgIAYAAAAcxAAAAICDGAAAAHAQAwAAAA5iAAAA
wEEMAAAAOIgBAAAABzEAAADgIAYAAAAcxAAAAICDGAAAAHAQAwAAAA5iAAAAwEEMAAAAOIgBAAAA
BzEAAADgIAYAAAAc9JUNACVmAOho7zsAAAAYWTrNGl1xtweAbCO/ql3l9W3edAEAAEaWCrNGF1b3
rdl3bQAYGALsVAEAAEamwYt/39p9FwYAAABwb2EAAADAQV9gAOhQbnW3tyEAALg3ZVV2mgHg0zsb
AF5+eWJla8c1NXXKmxoAAMC96lP1firNnu3zWf8y/9t75plnCmb7zLlqrnzVTgwAAODeNHuWz1Wf
OXOvjh07rqt/mSciIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIi
IiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIi
IiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIi
IiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIi
IiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIi
IiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIqI/cH/yJ/8PgsSqDSuJ6uIAAAAASUVO
RK5CYII=</Preview>
  <Object type="System.Windows.Forms.Form, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="MainForm" children="Controls">
    <Property name="ClientSize">590, 392</Property>
    <Property name="Name">MainForm</Property>
    <Property name="StartPosition">CenterScreen</Property>
    <Property name="Text">Main Form</Property>
    <Event name="Load">OnLoadFormEvent</Event>
    <Object type="System.Windows.Forms.Button, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="buttonKillSelectedUsers" children="Controls">
      <Property name="Anchor">Bottom, Right</Property>
      <Property name="Location">352, 336</Property>
      <Property name="Name">buttonKillSelectedUsers</Property>
      <Property name="Size">105, 23</Property>
      <Property name="TabIndex">3</Property>
      <Property name="Text">Kill Selected Users</Property>
      <Property name="UseVisualStyleBackColor">True</Property>
      <Event name="Click">buttonKillSelectedUsers_Click</Event>
    </Object>
    <Object type="System.Windows.Forms.DataGridView, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="datagridview1" children="Controls">
      <Property name="AllowUserToAddRows">False</Property>
      <Property name="AllowUserToDeleteRows">False</Property>
      <Property name="AllowUserToOrderColumns">True</Property>
      <Property name="Anchor">Top, Bottom, Left, Right</Property>
      <Property name="ColumnHeadersHeightSizeMode">AutoSize</Property>
      <Property name="Location">15, 76</Property>
      <Property name="Name">datagridview1</Property>
      <Property name="ReadOnly">True</Property>
      <Property name="Size">556, 226</Property>
      <Property name="TabIndex">2</Property>
    </Object>
    <Object type="System.Windows.Forms.Label, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="labelServer" children="Controls">
      <Property name="Location">12, 9</Property>
      <Property name="Name">labelServer</Property>
      <Property name="Size">53, 21</Property>
      <Property name="TabIndex">1</Property>
      <Property name="Text">Server:</Property>
      <Property name="TextAlign">MiddleCenter</Property>
      <Event name="Click">labelServer_Click</Event>
    </Object>
    <Object type="System.Windows.Forms.ComboBox, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="combobox1" children="Controls">
      <Property name="FormattingEnabled">True</Property>
      <Property name="Location">71, 9</Property>
      <Property name="Name">combobox1</Property>
      <Property name="Size">204, 21</Property>
      <Property name="TabIndex">0</Property>
    </Object>
  </Object>
  <Code><![CDATA[
$OnLoadFormEvent={
#TODO: Initialize Form Controls here

}


#abc


#region Control Helper Functions
function Load-DataGridView
{
	<#
	.SYNOPSIS
		This functions helps you load items into a DataGridView.

	.DESCRIPTION
		Use this function to dynamically load items into the DataGridView control.

	.PARAMETER  DataGridView
		The ComboBox control you want to add items to.

	.PARAMETER  Item
		The object or objects you wish to load into the ComboBox's items collection.
	
	.PARAMETER  DataMember
		Sets the name of the list or table in the data source for which the DataGridView is displaying data.

	#>
	Param (
		[ValidateNotNull()]
		[Parameter(Mandatory=$true)]
		[System.Windows.Forms.DataGridView]$DataGridView,
		[ValidateNotNull()]
		[Parameter(Mandatory=$true)]
		$Item,
	    [Parameter(Mandatory=$false)]
		[string]$DataMember
	)
	$DataGridView.SuspendLayout()
	$DataGridView.DataMember = $DataMember
	
	if ($Item -is [System.ComponentModel.IListSource]`
	-or $Item -is [System.ComponentModel.IBindingList] -or $Item -is [System.ComponentModel.IBindingListView] )
	{
		$DataGridView.DataSource = $Item
	}
	else
	{
		$array = New-Object System.Collections.ArrayList
		
		if ($Item -is [System.Collections.IList])
		{
			$array.AddRange($Item)
		}
		else
		{	
			$array.Add($Item)	
		}
		$DataGridView.DataSource = $array
	}
	
	$DataGridView.ResumeLayout()
}

function Load-ComboBox 
{
<#
	.SYNOPSIS
		This functions helps you load items into a ComboBox.

	.DESCRIPTION
		Use this function to dynamically load items into the ComboBox control.

	.PARAMETER  ComboBox
		The ComboBox control you want to add items to.

	.PARAMETER  Items
		The object or objects you wish to load into the ComboBox's Items collection.

	.PARAMETER  DisplayMember
		Indicates the property to display for the items in this control.
	
	.PARAMETER  Append
		Adds the item(s) to the ComboBox without clearing the Items collection.
	
	.EXAMPLE
		Load-ComboBox $combobox1 "Red", "White", "Blue"
	
	.EXAMPLE
		Load-ComboBox $combobox1 "Red" -Append
		Load-ComboBox $combobox1 "White" -Append
		Load-ComboBox $combobox1 "Blue" -Append
	
	.EXAMPLE
		Load-ComboBox $combobox1 (Get-Process) "ProcessName"
#>
	Param (
		[ValidateNotNull()]
		[Parameter(Mandatory=$true)]
		[System.Windows.Forms.ComboBox]$ComboBox,
		[ValidateNotNull()]
		[Parameter(Mandatory=$true)]
		$Items,
	    [Parameter(Mandatory=$false)]
		[string]$DisplayMember,
		[switch]$Append
	)
	
	if(-not $Append)
	{
		$ComboBox.Items.Clear()	
	}
	
	if($Items -is [Object[]])
	{
		$ComboBox.Items.AddRange($Items)
	}
	elseif ($Items -is [Array])
	{
		$ComboBox.BeginUpdate()
		foreach($obj in $Items)
		{
			$ComboBox.Items.Add($obj)	
		}
		$ComboBox.EndUpdate()
	}
	else
	{
		$ComboBox.Items.Add($Items)	
	}

	$ComboBox.DisplayMember = $DisplayMember	
}
#endregion


$labelServer_Click={
	#TODO: Place custom script here
	
}


$LoadCombo=Load-ComboBox -ComboBox $combobox1 -Append $Servers
#$combobox1.

function Load-Grid
{
	param(
		[string]$SelectedServer
	)
	#$SelectedServer = $combobox1.SelectedItem
	#Write-Host $SelectedServer
	
	$SqlConnectString = "Server="
	$SqlConnectString = $SqlConnectString + $SelectedServer
	$remainingSTR = ";Database=DBAdmin; Integrated Security=SSPI"
	$SqlConnectString = $SqlConnectString + $remainingSTR
	
	Write-Host $SqlConnectString
	
	#	$SqlAdapter = New-Object System.Data.SqlClient.SqlDataAdapter
	#	$SqlAdapter.SelectCommand = $SqlCmd
	#
	#	$DataSet = New-Object System.Data.DataSet
	#	$SqlAdapter.Fill($DataSet)
	#
	[string]$StoredProcedure = "dbo.sp_CheckVPLogons"
	
	# Stored procedure return parameter name
	[string]$StoredProcedureReturnParameter = "@rcode"
	# Stored procedure output parameter name
	[string]$StoredProcedureOutputParameter = "@ReturnMessage"
	
	
	$SqlConnection = New-Object System.Data.SqlClient.SqlConnection
	$SqlConnection.ConnectionString = $SqlConnectString
	
	Write-Host "opening sql connection..."
	$SqlConnection.Open() | Out-Null
	
	$SqlCmd = New-Object System.Data.SqlClient.SqlCommand
	$SqlCmd.Connection = $SqlConnection
	
	$SqlCmd.Parameters.AddWithValue("@ReturnMessage", [string]$ReturnMessage)
	
	$SqlCmd.CommandType = [System.Data.CommandType]'StoredProcedure'
	$SqlCmd.CommandText = $StoredProcedure
	
	$SqlAdapter = New-Object System.Data.SqlClient.SqlDataAdapter
	
	$DataSet = New-Object System.Data.DataSet
	$SqlAdapter.SelectCommand = $SqlCmd
	
	$SqlAdapter.Fill($DataSet)
	
	$OGrid = Load-DataGridView -DataGridView $datagridview1 -Item $DataSet.Tables[0]
	$DataSet.Tables.Count
}

#$combobox1.SelectedText
$combobox1_SelectedIndexChanged =
{
	$SelectedServer = $combobox1.SelectedItem
	#Write-Host $SelectedServer
	Load-Grid $SelectedServer
	<#$SqlConnectString = "Server="
	$SqlConnectString = $SqlConnectString + $SelectedServer
	$remainingSTR=";Database=DBAdmin; Integrated Security=SSPI"
	$SqlConnectString = $SqlConnectString + $remainingSTR
	
	Write-Host $SqlConnectString
	
#	$SqlAdapter = New-Object System.Data.SqlClient.SqlDataAdapter
#	$SqlAdapter.SelectCommand = $SqlCmd
#	
#	$DataSet = New-Object System.Data.DataSet
#	$SqlAdapter.Fill($DataSet)
#	
	[string]$StoredProcedure = "dbo.sp_CheckVPLogons"
	
	# Stored procedure return parameter name
	[string]$StoredProcedureReturnParameter = "@rcode"
	# Stored procedure output parameter name
	[string]$StoredProcedureOutputParameter = "@ReturnMessage"
	
	
	$SqlConnection = New-Object System.Data.SqlClient.SqlConnection
	$SqlConnection.ConnectionString = $SqlConnectString
	
	Write-Host "opening sql connection..."
	$SqlConnection.Open() | Out-Null
	
	$SqlCmd = New-Object System.Data.SqlClient.SqlCommand
	$SqlCmd.Connection = $SqlConnection
	
	$SqlCmd.Parameters.AddWithValue("@ReturnMessage", [string]$ReturnMessage)
	
	$SqlCmd.CommandType = [System.Data.CommandType]'StoredProcedure'
	$SqlCmd.CommandText = $StoredProcedure
	
	$SqlAdapter = New-Object System.Data.SqlClient.SqlDataAdapter
	
	$DataSet = New-Object System.Data.DataSet
	$SqlAdapter.SelectCommand = $SqlCmd
	
	$SqlAdapter.Fill($DataSet)
	
	$OGrid = Load-DataGridView -DataGridView $datagridview1 -Item $DataSet.Tables[0]
	$DataSet.Tables.Count#>
	
}

$combobox1.add_SelectedIndexChanged($combobox1_SelectedIndexChanged)
#adf



$buttonKillSelectedUsers_Click = {
	
	$hostname = New-Object System.Collections.ArrayList
	$username = New-Object System.Collections.ArrayList
	
		
	$gridrow = $datagridview1.SelectedRows
	ForEach ($row in $gridrow)
	{
		$hostname += $row.Cells[1].Value
		$username += $row.Cells[4].Value
		#Write-Host = $hostname $username
	}
		
	#TODO: Place custom script here
	ForEach ($hostA in $hostname)
	{
		#(Get-WmiObject Win32_Process -ComputerName $hostA | ?{ $_.ProcessName -match "vpmenu_host" }).Terminate()
		Get-Process | where{ $_.Name -eq "vpmenu_host.exe" } | foreach{ $_.Kill() }
		Write-Host "kill" $hostA
		taskkill /IM vpmenu_host.exe /F /S $hostA 
		exit
		#Invoke-Command -ComputerName $hostA { Stop-Process -Name "vpmenu-host.exe" }
		
		<#$remote = New-PSSession -ComputerName $hostA
		Write-Host $remote
		Import-PSSession -Session $remote -CommandName *-Process -Prefix remote
		
		$processExists = Get-Process -Name "vpmenu_host"
		Write-Host $processExists
		IF ($processExists)
		{
			Get-Process -Name "vpmenu_host" | Stop-Process
			CONTINUE
		}
		$remote.exit#>
		CONTINUE
	}
	#abc
	Write-Host $hostname
	Write-Host $username
}
]]></Code>
  <Mode>1</Mode>
  <Assemblies>
    <Assembly>System.Management.Automation, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35</Assembly>
    <Assembly>mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</Assembly>
    <Assembly>System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</Assembly>
    <Assembly>System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</Assembly>
    <Assembly>System.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</Assembly>
    <Assembly>System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</Assembly>
    <Assembly>System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</Assembly>
    <Assembly>System.DirectoryServices, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</Assembly>
    <Assembly>System.Core, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</Assembly>
    <Assembly>System.ServiceProcess, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</Assembly>
  </Assemblies>
</File>