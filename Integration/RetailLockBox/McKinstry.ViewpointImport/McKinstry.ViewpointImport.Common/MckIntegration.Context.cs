//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace McKinstry.ViewpointImport.Common
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class MckIntegrationEntities : DbContext
    {
        public MckIntegrationEntities()
            : base("name=MckIntegrationEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<RLBRemoteDownload> RLBRemoteDownloads { get; set; }
        public virtual DbSet<RLBRemoteUpload> RLBRemoteUploads { get; set; }
        public virtual DbSet<RLBAPImportDetail> RLBAPImportDetails { get; set; }
        public virtual DbSet<RLBAPImportRecord> RLBAPImportRecords { get; set; }
        public virtual DbSet<RLBImportBatch> RLBImportBatches { get; set; }
        public virtual DbSet<RLBImportBatchStatu> RLBImportBatchStatus { get; set; }
        public virtual DbSet<RLBImportDetailStatu> RLBImportDetailStatus { get; set; }
        public virtual DbSet<RLBProcessNote> RLBProcessNotes { get; set; }
        public virtual DbSet<RLBARImportDetail> RLBARImportDetails { get; set; }
        public virtual DbSet<RLBARImportRecord> RLBARImportRecords { get; set; }
        public virtual DbSet<mckvwRLBARImportRecord> mckvwRLBARImportRecords { get; set; }
        public virtual DbSet<AttachCompanyMove> AttachCompanyMoves { get; set; }
        public virtual DbSet<APCompanyMove> APCompanyMoves { get; set; }
        public virtual DbSet<RLBDropFolderWatcher> RLBDropFolderWatchers { get; set; }
        public virtual DbSet<CompanyMoveMetric> CompanyMoveMetrics { get; set; }
        public virtual DbSet<mckvwRLBAPImportRecord> mckvwRLBAPImportRecords { get; set; }
        public virtual DbSet<MissingAttachment> MissingAttachments { get; set; }
        public virtual DbSet<ViewpointAttachFile> ViewpointAttachFiles { get; set; }
    
        [DbFunction("MckIntegrationEntities", "mckfnAPCompanyMoveError")]
        public virtual IQueryable<mckfnAPCompanyMoveError_Result> mckfnAPCompanyMoveError(string logFileName)
        {
            var logFileNameParameter = logFileName != null ?
                new ObjectParameter("LogFileName", logFileName) :
                new ObjectParameter("LogFileName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<mckfnAPCompanyMoveError_Result>("[MckIntegrationEntities].[mckfnAPCompanyMoveError](@LogFileName)", logFileNameParameter);
        }
    }
}
