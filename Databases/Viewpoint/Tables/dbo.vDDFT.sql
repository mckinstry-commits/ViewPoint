CREATE TABLE [dbo].[vDDFT]
(
[Form] [varchar] (30) COLLATE Latin1_General_BIN NOT NULL,
[Tab] [tinyint] NOT NULL,
[Title] [varchar] (30) COLLATE Latin1_General_BIN NULL,
[GridForm] [varchar] (30) COLLATE Latin1_General_BIN NULL,
[LoadSeq] [tinyint] NOT NULL,
[TitleID] [int] NULL
) ON [PRIMARY]
CREATE UNIQUE CLUSTERED INDEX [viDDFT] ON [dbo].[vDDFT] ([Form], [Tab]) WITH (FILLFACTOR=90) ON [PRIMARY]

GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO


create trigger [dbo].[vtDDFTd] on [dbo].[vDDFT] for DELETE
/************************************
* Created: GG 07/19/05
* Modified: 
*
* Delete trigger on vDDFT (DD Form Tabs)
*
* Rejects deletion if any of the following conditions exist:
*	Custom Form Tabs exist
*	Standard or User Form Inputs exist
*	Tab Security exists
*
* Adds DD Audit entry
*
************************************/
as



declare @errmsg varchar(255)
  
if @@rowcount = 0 return
set nocount on

-- check for overridden tab info
if exists (select top 1 1 from deleted d join dbo.vDDFTc i with (nolock) on i.Form = d.Form and i.Tab = d.Tab)
	begin
 	select @errmsg = 'Custom or overridden Tab information exists in vDDFTc'
 	goto error
 	end
-- check standard Form Inputs 
if exists (select top 1 1 from deleted d join dbo.vDDFI i with (nolock) on i.Form = d.Form and i.Tab = d.Tab)
	begin
 	select @errmsg = 'Standard inputs exist in vDDFI'
 	goto error
 	end
-- check custom Form Inputs
if exists (select top 1 1 from deleted d join dbo.vDDFIc i with (nolock) on i.Form = d.Form and i.Tab = d.Tab)
	begin
 	select @errmsg = 'Custom or overridden inputs exist in vDDFIc'
 	goto error
 	end
-- check Tab Security
if exists (select top 1 1 from deleted d join dbo.vDDTS i with (nolock) on i.Form = d.Form and i.Tab = d.Tab)
	begin
 	select @errmsg = 'Tab Security entries exist in vDDTS'
 	goto error
 	end
  	
-- DD Audit 
insert dbo.vDDDA (TableName, Action, KeyString, FieldName,
	OldValue, NewValue, RevDate, UserName, HostName)
select 'vDDFT', 'D', 'Form: ' + rtrim(Form) + ' Tab: ' + convert(varchar,Tab), null,
	null, null, getdate(), SUSER_SNAME(), host_name()
from deleted
  
return
  
error:
	select @errmsg = isnull(@errmsg,'') + ' - cannot delete Form Tab!'
    RAISERROR(@errmsg, 11, -1);
    rollback transaction
  
  
  
  
 







GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
CREATE TRIGGER [dbo].[vtDDFTd_Audit] ON [dbo].[vDDFT]
 AFTER DELETE
 NOT FOR REPLICATION AS
 SET NOCOUNT ON 
 -- generated by vspHQCreateAuditTriggers on May 14 2009  9:56AM

 BEGIN TRY 
   INSERT dbo.vDDChangeLog (TableName, KeyString, Action, FieldName, OldValue, NewValue, DateTime, MachineName, CommandText)
   SELECT 'vDDFT' , '<KeyString FormName = "' + REPLACE(CAST(deleted.Form AS VARCHAR(MAX)),'"', '&quot;') + '" Tab = "' + REPLACE(CAST(deleted.Tab AS VARCHAR(MAX)),'"', '&quot;') + '" />' , 'D' , NULL , NULL , NULL , GETDATE() , HOST_NAME() , 'DELETE FROM vDDFT WHERE Form = ''' + CAST(deleted.Form AS VARCHAR(MAX)) + '''' + ' AND Tab = ''' + CAST(deleted.Tab AS VARCHAR(MAX)) + ''''
	FROM deleted
 END TRY 
 BEGIN CATCH 
   RAISERROR('Error in [dbo].[dbo.vtDDFTi_Audit] trigger', 16, 1 ) with log
 END CATCH 
GO
EXEC sp_settriggerorder N'[dbo].[vtDDFTd_Audit]', 'last', 'delete', null
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO







create  trigger [dbo].[vtDDFTi] on [dbo].[vDDFT] for INSERT
/*****************************
* Created: GG 07/19/05
* Modified:
*
* Insert trigger on vDDFT (DD Form Tabs)
*
* Rejects insert if the following conditions exist:
*	Invalid Form 
*	Invalid Grid Form
*	Invalid Load Seq on Grid or Info tab
*
* Adds DD Audit entry
*
*************************************/

as


declare @errmsg varchar(255), @numrows int, @validcnt int, @nullcnt int
  
select @numrows = @@rowcount
if @numrows = 0 return

set nocount on

-- validate Form
select @validcnt = count(*)
from inserted i
join dbo.vDDFH h with (nolock) on i.Form = h.Form
if @validcnt <> @numrows
  	begin
  	select @errmsg = 'Invalid Form - must exist in vDDFH'
  	goto error
  	end
-- validate Grid Form
select @nullcnt = count(*) from inserted where GridForm is null
select @validcnt = count(*)
from inserted i
join dbo.vDDFH h with (nolock) on i.GridForm = h.Form
if @validcnt + @nullcnt <> @numrows
	begin
  	select @errmsg = 'Invalid Grid Form - must exist in vDDFH'
  	goto error
  	end
-- Load Seq of Grid and Info tabs
if exists(select top 1 1 from inserted where Tab = 0 and LoadSeq <> 0)
	begin
	select @errmsg = 'Grid tab must be assigned Load Sequence 0'
	goto error
	end
if exists(select top 1 1 from inserted where Tab = 1 and LoadSeq <> 1)
	begin
	select @errmsg = 'Info tab must be assigned Load Sequence 1'
	goto error
	end
  
-- DD Audit  
insert vDDDA (TableName, Action, KeyString, FieldName, OldValue, 
  	NewValue, RevDate, UserName, HostName)
select 'vDDFT', 'I', 'Form: ' + rtrim(Form) + ' Tab: ' + convert(varchar,Tab), null, null,
	null, getdate(), SUSER_SNAME(), host_name()
from inserted 
  	 	 	 
return

error:
	select @errmsg = isnull(@errmsg,'') + ' - cannot insert Form Tab!'
  	RAISERROR(@errmsg, 11, -1);
  	rollback transaction
  
    








GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
CREATE TRIGGER [dbo].[vtDDFTi_Audit] ON [dbo].[vDDFT]
 AFTER INSERT
 NOT FOR REPLICATION AS
 SET NOCOUNT ON 
 -- generated by vspHQCreateAuditTriggers on May 14 2009  9:56AM

 BEGIN TRY 
   INSERT dbo.vDDChangeLog (TableName, KeyString, Action, FieldName, OldValue, NewValue, DateTime, MachineName, CommandText)
   SELECT 'vDDFT' , '<KeyString FormName = "' + REPLACE(CAST(inserted.Form AS VARCHAR(MAX)),'"', '&quot;') + '" Tab = "' + REPLACE(CAST(inserted.Tab AS VARCHAR(MAX)),'"', '&quot;') + '" />' , 'A' , NULL , NULL , NULL , GETDATE() , HOST_NAME() , 'INSERT INTO dbo.[vDDFT] ([Form], [Tab], [Title], [GridForm], [LoadSeq]) VALUES (' + ISNULL('''' + REPLACE(CAST(Form AS NVARCHAR(MAX)), '''' , '''''') + '''', 'NULL') + ',' + ISNULL(CAST(Tab AS NVARCHAR(MAX)), 'NULL') +  ',' + ISNULL('''' + REPLACE(CAST(Title AS NVARCHAR(MAX)), '''' , '''''') + '''', 'NULL') + ',' + ISNULL('''' + REPLACE(CAST(GridForm AS NVARCHAR(MAX)), '''' , '''''') + '''', 'NULL') + ',' + ISNULL(CAST(LoadSeq AS NVARCHAR(MAX)), 'NULL') + + ')'
	FROM inserted
 END TRY 
 BEGIN CATCH 
   RAISERROR('Error in [dbo].[dbo.vtDDFTi_Audit] trigger', 16, 1 ) with log
 END CATCH 
GO
EXEC sp_settriggerorder N'[dbo].[vtDDFTi_Audit]', 'last', 'insert', null
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO


create  trigger [dbo].[vtDDFTu] on [dbo].[vDDFT] for UPDATE
/************************************
* Created: GG 07/19/05
* Modified: 
*
* Update trigger on vDDFT (DD Form Tabs)
*
* Rejects update if any of the following conditions exist:
*	Change primary key - Form/Tab
*	Invalid Grid Form
*	Invalid Load Seq on Grid or Info tab
*
* Adds DD Audit entries for changed values
*
************************************/

as


declare @errmsg varchar(255), @numrows int, @validcnt int, @nullcnt int 
  
select @numrows = @@rowcount
if @numrows = 0 return
set nocount on
  
-- check for key changes 
if update(Form) or update(Tab)
	begin
	select @validcnt = count(*)
	from inserted i
	join deleted d	on i.Form = d.Form and i.Tab = d.Tab
	if @validcnt <> @numrows
		begin
  		select @errmsg = 'Cannot change Form or Tab #'
  		goto error
  		end
	end
-- validate Grid Form
if update(GridForm)
	begin
	select @nullcnt = count(*) from inserted where GridForm is null
	select @validcnt = count(*)
	from inserted i
	join dbo.vDDFH h with (nolock) on i.GridForm = h.Form
	if @validcnt + @nullcnt <> @numrows
		begin
  		select @errmsg = 'Invalid Grid Form - must exist in vDDFH'
  		goto error
  		end
	end
	
-- Load Seq of Grid and Info tabs
if update (LoadSeq)
	begin
	if exists(select top 1 1 from inserted where Tab = 0 and LoadSeq <> 0)
		begin
		select @errmsg = 'Grid tab must be assigned Load Sequence 0'
		goto error
		end
	if exists(select top 1 1 from inserted where Tab = 1 and LoadSeq <> 1)
		begin
		select @errmsg = 'Info tab must be assigned Load Sequence 1'
		goto error
		end
	end
  
-- DD Audit
if update(Title)
	insert dbo.vDDDA(TableName, Action, KeyString, FieldName,
		OldValue, NewValue, RevDate, UserName, HostName)
	select  'vDDFT', 'U', 'Form: ' + rtrim(i.Form) + ' Tab: ' + convert(varchar,i.Tab), 'Title',
		d.Title, i.Title, getdate(), SUSER_SNAME(), host_name()
  	from inserted i
  	join deleted d on i.Form = d.Form and i.Tab = d.Tab
  	where isnull(i.Title,'') <> isnull(d.Title,'')
if update(GridForm)
	insert dbo.vDDDA(TableName, Action, KeyString, FieldName,
		OldValue, NewValue, RevDate, UserName, HostName)
	select  'vDDFT', 'U', 'Form: ' + rtrim(i.Form) + ' Tab: ' + convert(varchar,i.Tab), 'GridForm',
		d.GridForm, i.GridForm, getdate(), SUSER_SNAME(), host_name()
  	from inserted i
  	join deleted d on i.Form = d.Form and i.Tab = d.Tab
  	where isnull(i.GridForm,'') <> isnull(d.GridForm,'')
if update(LoadSeq)
	insert dbo.vDDDA(TableName, Action, KeyString, FieldName,
		OldValue, NewValue, RevDate, UserName, HostName)
	select  'vDDFT', 'U', 'Form: ' + rtrim(i.Form) + ' Tab: ' + convert(varchar,i.Tab), 'LoadSeq',
		convert(varchar,d.LoadSeq), convert(varchar,i.LoadSeq), getdate(), SUSER_SNAME(), host_name()
  	from inserted i
  	join deleted d on i.Form = d.Form and i.Tab = d.Tab
  	where i.LoadSeq <> d.LoadSeq

return
  
error:
	select @errmsg = isnull(@errmsg,'') + ' - cannot update Form Tabs!'
    RAISERROR(@errmsg, 11, -1);
    rollback transaction
  




GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
CREATE TRIGGER [dbo].[vtDDFTu_Audit] ON [dbo].[vDDFT]
 AFTER UPDATE 
 NOT FOR REPLICATION AS 
 SET NOCOUNT ON 
 -- generated by vspHQCreateAuditTriggers on May 14 2009  9:56AM

 BEGIN TRY 
 IF UPDATE([Form])
   INSERT dbo.vDDChangeLog (TableName, KeyString, Action, FieldName, OldValue, NewValue, DateTime, MachineName, CommandText)
   SELECT 'vDDFT' , '<KeyString FormName = "' + REPLACE(CAST(inserted.Form AS VARCHAR(MAX)),'"', '&quot;') + '" Tab = "' + REPLACE(CAST(inserted.Tab AS VARCHAR(MAX)),'"', '&quot;') + '" />' , 'U' , 'Form' ,  CONVERT(VARCHAR(MAX), deleted.[Form]) ,  Convert(VARCHAR(MAX), inserted.[Form]) , GETDATE() , HOST_NAME() , 'UPDATE vDDFT SET Form = ''' + ISNULL(REPLACE(Convert(VARCHAR(MAX), inserted.[Form]), '''' , ''''''), 'NULL') + ''' WHERE Form = ''' + CAST(inserted.Form AS VARCHAR(MAX)) + '''' + ' AND Tab = ''' + CAST(inserted.Tab AS VARCHAR(MAX)) + ''''
		FROM inserted
			INNER JOIN deleted
         ON  inserted.[Form] = deleted.[Form]  AND  inserted.[Tab] = deleted.[Tab] 
         AND ISNULL(inserted.[Form],'') <> ISNULL(deleted.[Form],'')

 IF UPDATE([Tab])
   INSERT dbo.vDDChangeLog (TableName, KeyString, Action, FieldName, OldValue, NewValue, DateTime, MachineName, CommandText)
   SELECT 'vDDFT' , '<KeyString FormName = "' + REPLACE(CAST(inserted.Form AS VARCHAR(MAX)),'"', '&quot;') + '" Tab = "' + REPLACE(CAST(inserted.Tab AS VARCHAR(MAX)),'"', '&quot;') + '" />' , 'U' , 'Tab' ,  CONVERT(VARCHAR(MAX), deleted.[Tab]) ,  Convert(VARCHAR(MAX), inserted.[Tab]) , GETDATE() , HOST_NAME() , 'UPDATE vDDFT SET Tab = ''' + ISNULL(REPLACE(Convert(VARCHAR(MAX), inserted.[Tab]), '''' , ''''''), 'NULL') + ''' WHERE Form = ''' + CAST(inserted.Form AS VARCHAR(MAX)) + '''' + ' AND Tab = ''' + CAST(inserted.Tab AS VARCHAR(MAX)) + ''''
		FROM inserted
			INNER JOIN deleted
         ON  inserted.[Form] = deleted.[Form]  AND  inserted.[Tab] = deleted.[Tab] 
         AND ISNULL(inserted.[Tab],'') <> ISNULL(deleted.[Tab],'')

 IF UPDATE([Title])
   INSERT dbo.vDDChangeLog (TableName, KeyString, Action, FieldName, OldValue, NewValue, DateTime, MachineName, CommandText)
   SELECT 'vDDFT' , '<KeyString FormName = "' + REPLACE(CAST(inserted.Form AS VARCHAR(MAX)),'"', '&quot;') + '" Tab = "' + REPLACE(CAST(inserted.Tab AS VARCHAR(MAX)),'"', '&quot;') + '" />' , 'U' , 'Title' ,  CONVERT(VARCHAR(MAX), deleted.[Title]) ,  Convert(VARCHAR(MAX), inserted.[Title]) , GETDATE() , HOST_NAME() , 'UPDATE vDDFT SET Title = ''' + ISNULL(REPLACE(Convert(VARCHAR(MAX), inserted.[Title]), '''' , ''''''), 'NULL') + ''' WHERE Form = ''' + CAST(inserted.Form AS VARCHAR(MAX)) + '''' + ' AND Tab = ''' + CAST(inserted.Tab AS VARCHAR(MAX)) + ''''
		FROM inserted
			INNER JOIN deleted
         ON  inserted.[Form] = deleted.[Form]  AND  inserted.[Tab] = deleted.[Tab] 
         AND ISNULL(inserted.[Title],'') <> ISNULL(deleted.[Title],'')

 IF UPDATE([GridForm])
   INSERT dbo.vDDChangeLog (TableName, KeyString, Action, FieldName, OldValue, NewValue, DateTime, MachineName, CommandText)
   SELECT 'vDDFT' , '<KeyString FormName = "' + REPLACE(CAST(inserted.Form AS VARCHAR(MAX)),'"', '&quot;') + '" Tab = "' + REPLACE(CAST(inserted.Tab AS VARCHAR(MAX)),'"', '&quot;') + '" />' , 'U' , 'GridForm' ,  CONVERT(VARCHAR(MAX), deleted.[GridForm]) ,  Convert(VARCHAR(MAX), inserted.[GridForm]) , GETDATE() , HOST_NAME() , 'UPDATE vDDFT SET GridForm = ''' + ISNULL(REPLACE(Convert(VARCHAR(MAX), inserted.[GridForm]), '''' , ''''''), 'NULL') + ''' WHERE Form = ''' + CAST(inserted.Form AS VARCHAR(MAX)) + '''' + ' AND Tab = ''' + CAST(inserted.Tab AS VARCHAR(MAX)) + ''''
		FROM inserted
			INNER JOIN deleted
         ON  inserted.[Form] = deleted.[Form]  AND  inserted.[Tab] = deleted.[Tab] 
         AND ISNULL(inserted.[GridForm],'') <> ISNULL(deleted.[GridForm],'')

 IF UPDATE([LoadSeq])
   INSERT dbo.vDDChangeLog (TableName, KeyString, Action, FieldName, OldValue, NewValue, DateTime, MachineName, CommandText)
   SELECT 'vDDFT' , '<KeyString FormName = "' + REPLACE(CAST(inserted.Form AS VARCHAR(MAX)),'"', '&quot;') + '" Tab = "' + REPLACE(CAST(inserted.Tab AS VARCHAR(MAX)),'"', '&quot;') + '" />' , 'U' , 'LoadSeq' ,  CONVERT(VARCHAR(MAX), deleted.[LoadSeq]) ,  Convert(VARCHAR(MAX), inserted.[LoadSeq]) , GETDATE() , HOST_NAME() , 'UPDATE vDDFT SET LoadSeq = ''' + ISNULL(REPLACE(Convert(VARCHAR(MAX), inserted.[LoadSeq]), '''' , ''''''), 'NULL') + ''' WHERE Form = ''' + CAST(inserted.Form AS VARCHAR(MAX)) + '''' + ' AND Tab = ''' + CAST(inserted.Tab AS VARCHAR(MAX)) + ''''
		FROM inserted
			INNER JOIN deleted
         ON  inserted.[Form] = deleted.[Form]  AND  inserted.[Tab] = deleted.[Tab] 
         AND ISNULL(inserted.[LoadSeq],'') <> ISNULL(deleted.[LoadSeq],'')

 END TRY 
 BEGIN CATCH 
   RAISERROR('Error in [dbo].[dbo.vtDDFTi_Audit] trigger', 16, 1 ) with log
 END CATCH 
GO
EXEC sp_settriggerorder N'[dbo].[vtDDFTu_Audit]', 'last', 'update', null
GO
