CREATE TABLE [dbo].[budJNRFResSys]
(
[Co] [dbo].[bCompany] NOT NULL,
[JNRFNum] [varchar] (10) COLLATE Latin1_General_BIN NOT NULL,
[ResourceSys] [smallint] NULL,
[Sequence] [smallint] NOT NULL,
[UniqueAttchID] [uniqueidentifier] NULL,
[KeyID] [bigint] NOT NULL IDENTITY(1, 1)
) ON [PRIMARY]
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
CREATE TRIGGER dbo.vtbudJNRFResSys_Audit_Delete ON dbo.budJNRFResSys
 AFTER DELETE
 NOT FOR REPLICATION AS
 SET NOCOUNT ON 
 -- generated by vspHQCreateAuditTriggers on Sep 13 2013 10:44AM

 BEGIN TRY 

   INSERT dbo.HQMA (TableName, KeyString, Co, RecType, FieldName, OldValue, NewValue, DateTime, UserName)

   SELECT 'budJNRFResSys' , '<KeyString JNRFNum = "' + REPLACE(CAST(deleted.[JNRFNum] AS VARCHAR(MAX)),'"', '&quot;') + '" Sequence = "' + REPLACE(CAST(deleted.[Sequence] AS VARCHAR(MAX)),'"', '&quot;') + '" />' , deleted.Co , 'D' , NULL , NULL , NULL , GETDATE() , SUSER_SNAME()
	FROM deleted

 END TRY 
 BEGIN CATCH 
   DECLARE	@ErrorMessage	NVARCHAR(4000), 
				@ErrorSeverity	INT; 

   SELECT	@ErrorMessage = 'Error '+ ISNULL(ERROR_MESSAGE(),'') +' in [dbo].[dbo.vtbudJNRFResSys_Audit_Delete] trigger', 
				@ErrorSeverity = ERROR_SEVERITY(); 

   RAISERROR(@ErrorMessage, @ErrorSeverity, 1 ) 
 END CATCH 
GO
EXEC sp_settriggerorder N'[dbo].[vtbudJNRFResSys_Audit_Delete]', 'last', 'delete', null
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
CREATE TRIGGER dbo.vtbudJNRFResSys_Audit_Insert ON dbo.budJNRFResSys
 AFTER INSERT
 NOT FOR REPLICATION AS
 SET NOCOUNT ON 
 -- generated by vspHQCreateAuditTriggers on Sep 13 2013 10:44AM

 BEGIN TRY 

   INSERT dbo.HQMA (TableName, KeyString, Co, RecType, FieldName, OldValue, NewValue, DateTime, UserName)

   SELECT 'budJNRFResSys' , '<KeyString JNRFNum = "' + REPLACE(CAST(inserted.[JNRFNum] AS VARCHAR(MAX)),'"', '&quot;') + '" Sequence = "' + REPLACE(CAST(inserted.[Sequence] AS VARCHAR(MAX)),'"', '&quot;') + '" />' , ISNULL(inserted.Co, '') , 'A' , NULL , NULL , NULL , GETDATE() , SUSER_SNAME()
	FROM inserted

 END TRY 
 BEGIN CATCH 
   DECLARE	@ErrorMessage	NVARCHAR(4000), 
				@ErrorSeverity	INT; 

   SELECT	@ErrorMessage = 'Error '+ ISNULL(ERROR_MESSAGE(),'') +' in [dbo].[dbo.vtbudJNRFResSys_Audit_Insert] trigger', 
				@ErrorSeverity = ERROR_SEVERITY(); 

   RAISERROR(@ErrorMessage, @ErrorSeverity, 1 ) 
 END CATCH 
GO
EXEC sp_settriggerorder N'[dbo].[vtbudJNRFResSys_Audit_Insert]', 'last', 'insert', null
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
CREATE TRIGGER dbo.vtbudJNRFResSys_Audit_Update ON dbo.budJNRFResSys
 AFTER UPDATE 
 NOT FOR REPLICATION AS 
 SET NOCOUNT ON 
 -- generated by vspHQCreateAuditTriggers on Sep 13 2013 10:44AM

 BEGIN TRY 

 IF UPDATE([Co])
 BEGIN   INSERT dbo.HQMA (TableName, KeyString, Co, RecType, FieldName, OldValue, NewValue, DateTime, UserName)

   SELECT 'budJNRFResSys' , '<KeyString JNRFNum = "' + REPLACE(CAST(inserted.[JNRFNum] AS VARCHAR(MAX)),'"', '&quot;') + '" Sequence = "' + REPLACE(CAST(inserted.[Sequence] AS VARCHAR(MAX)),'"', '&quot;') + '" />' , inserted.Co , 'C' , '[Co]' ,  CONVERT(VARCHAR(MAX), deleted.[Co]) ,  CONVERT(VARCHAR(MAX), inserted.[Co]) , GETDATE() , SUSER_SNAME()
		FROM inserted
			INNER JOIN deleted
         ON  inserted.[KeyID] = deleted.[KeyID] 
         AND ((inserted.[Co] <> deleted.[Co]) OR (inserted.[Co] IS NULL AND deleted.[Co] IS NOT NULL) OR (inserted.[Co] IS NOT NULL AND deleted.[Co] IS NULL))



 END 

 IF UPDATE([JNRFNum])
 BEGIN   INSERT dbo.HQMA (TableName, KeyString, Co, RecType, FieldName, OldValue, NewValue, DateTime, UserName)

   SELECT 'budJNRFResSys' , '<KeyString JNRFNum = "' + REPLACE(CAST(inserted.[JNRFNum] AS VARCHAR(MAX)),'"', '&quot;') + '" Sequence = "' + REPLACE(CAST(inserted.[Sequence] AS VARCHAR(MAX)),'"', '&quot;') + '" />' , inserted.Co , 'C' , '[JNRFNum]' ,  CONVERT(VARCHAR(MAX), deleted.[JNRFNum]) ,  CONVERT(VARCHAR(MAX), inserted.[JNRFNum]) , GETDATE() , SUSER_SNAME()
		FROM inserted
			INNER JOIN deleted
         ON  inserted.[KeyID] = deleted.[KeyID] 
         AND ((inserted.[JNRFNum] <> deleted.[JNRFNum]) OR (inserted.[JNRFNum] IS NULL AND deleted.[JNRFNum] IS NOT NULL) OR (inserted.[JNRFNum] IS NOT NULL AND deleted.[JNRFNum] IS NULL))



 END 

 IF UPDATE([ResourceSys])
 BEGIN   INSERT dbo.HQMA (TableName, KeyString, Co, RecType, FieldName, OldValue, NewValue, DateTime, UserName)

   SELECT 'budJNRFResSys' , '<KeyString JNRFNum = "' + REPLACE(CAST(inserted.[JNRFNum] AS VARCHAR(MAX)),'"', '&quot;') + '" Sequence = "' + REPLACE(CAST(inserted.[Sequence] AS VARCHAR(MAX)),'"', '&quot;') + '" />' , inserted.Co , 'C' , '[ResourceSys]' ,  CONVERT(VARCHAR(MAX), deleted.[ResourceSys]) ,  CONVERT(VARCHAR(MAX), inserted.[ResourceSys]) , GETDATE() , SUSER_SNAME()
		FROM inserted
			INNER JOIN deleted
         ON  inserted.[KeyID] = deleted.[KeyID] 
         AND ((inserted.[ResourceSys] <> deleted.[ResourceSys]) OR (inserted.[ResourceSys] IS NULL AND deleted.[ResourceSys] IS NOT NULL) OR (inserted.[ResourceSys] IS NOT NULL AND deleted.[ResourceSys] IS NULL))



 END 

 IF UPDATE([Sequence])
 BEGIN   INSERT dbo.HQMA (TableName, KeyString, Co, RecType, FieldName, OldValue, NewValue, DateTime, UserName)

   SELECT 'budJNRFResSys' , '<KeyString JNRFNum = "' + REPLACE(CAST(inserted.[JNRFNum] AS VARCHAR(MAX)),'"', '&quot;') + '" Sequence = "' + REPLACE(CAST(inserted.[Sequence] AS VARCHAR(MAX)),'"', '&quot;') + '" />' , inserted.Co , 'C' , '[Sequence]' ,  CONVERT(VARCHAR(MAX), deleted.[Sequence]) ,  CONVERT(VARCHAR(MAX), inserted.[Sequence]) , GETDATE() , SUSER_SNAME()
		FROM inserted
			INNER JOIN deleted
         ON  inserted.[KeyID] = deleted.[KeyID] 
         AND ((inserted.[Sequence] <> deleted.[Sequence]) OR (inserted.[Sequence] IS NULL AND deleted.[Sequence] IS NOT NULL) OR (inserted.[Sequence] IS NOT NULL AND deleted.[Sequence] IS NULL))



 END 

 IF UPDATE([UniqueAttchID])
 BEGIN   INSERT dbo.HQMA (TableName, KeyString, Co, RecType, FieldName, OldValue, NewValue, DateTime, UserName)

   SELECT 'budJNRFResSys' , '<KeyString JNRFNum = "' + REPLACE(CAST(inserted.[JNRFNum] AS VARCHAR(MAX)),'"', '&quot;') + '" Sequence = "' + REPLACE(CAST(inserted.[Sequence] AS VARCHAR(MAX)),'"', '&quot;') + '" />' , inserted.Co , 'C' , '[UniqueAttchID]' ,  CONVERT(VARCHAR(MAX), deleted.[UniqueAttchID]) ,  CONVERT(VARCHAR(MAX), inserted.[UniqueAttchID]) , GETDATE() , SUSER_SNAME()
		FROM inserted
			INNER JOIN deleted
         ON  inserted.[KeyID] = deleted.[KeyID] 
         AND ((inserted.[UniqueAttchID] <> deleted.[UniqueAttchID]) OR (inserted.[UniqueAttchID] IS NULL AND deleted.[UniqueAttchID] IS NOT NULL) OR (inserted.[UniqueAttchID] IS NOT NULL AND deleted.[UniqueAttchID] IS NULL))



 END 

 END TRY 
 BEGIN CATCH 
   DECLARE	@ErrorMessage	NVARCHAR(4000), 
				@ErrorSeverity	INT; 

   SELECT	@ErrorMessage = 'Error '+ ISNULL(ERROR_MESSAGE(),'') +' in [dbo].[dbo.vtbudJNRFResSys_Audit_Update] trigger', 
				@ErrorSeverity = ERROR_SEVERITY(); 

   RAISERROR(@ErrorMessage, @ErrorSeverity, 1 ) 
 END CATCH 
GO
EXEC sp_settriggerorder N'[dbo].[vtbudJNRFResSys_Audit_Update]', 'last', 'update', null
GO
CREATE UNIQUE CLUSTERED INDEX [biudJNRFResSys] ON [dbo].[budJNRFResSys] ([Co], [JNRFNum], [Sequence]) ON [PRIMARY]
GO
