CREATE TABLE [dbo].[budMeterHis]
(
[Co] [dbo].[bCompany] NOT NULL,
[Date] [dbo].[bDate] NOT NULL,
[Equipment] [dbo].[bEquip] NOT NULL,
[FuelDate] [dbo].[bDate] NULL,
[FuelUsed] [dbo].[bUnits] NULL,
[HourDate] [dbo].[bDate] NULL,
[HourRead] [dbo].[bUnits] NULL,
[OdoDate] [dbo].[bDate] NULL,
[Seq] [int] NOT NULL,
[UniqueAttchID] [uniqueidentifier] NULL,
[KeyID] [bigint] NOT NULL IDENTITY(1, 1),
[OdoRead] [dbo].[bUnits] NULL
) ON [PRIMARY]
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
CREATE TRIGGER dbo.vtbudMeterHis_Audit_Delete ON dbo.budMeterHis
 AFTER DELETE
 NOT FOR REPLICATION AS
 SET NOCOUNT ON 
 -- generated by vspHQCreateAuditTriggers on Sep 24 2013 12:04PM

 BEGIN TRY 

   INSERT dbo.HQMA (TableName, KeyString, Co, RecType, FieldName, OldValue, NewValue, DateTime, UserName)

   SELECT 'budMeterHis' , '<KeyString Equipment = "' + REPLACE(CAST(deleted.[Equipment] AS VARCHAR(MAX)),'"', '&quot;') + '" Date = "' + REPLACE(CAST(deleted.[Date] AS VARCHAR(MAX)),'"', '&quot;') + '" Sequence = "' + REPLACE(CAST(deleted.[Seq] AS VARCHAR(MAX)),'"', '&quot;') + '" />' , deleted.Co , 'D' , NULL , NULL , NULL , GETDATE() , SUSER_SNAME()
	FROM deleted

 END TRY 
 BEGIN CATCH 
   DECLARE	@ErrorMessage	NVARCHAR(4000), 
				@ErrorSeverity	INT; 

   SELECT	@ErrorMessage = 'Error '+ ISNULL(ERROR_MESSAGE(),'') +' in [dbo].[dbo.vtbudMeterHis_Audit_Delete] trigger', 
				@ErrorSeverity = ERROR_SEVERITY(); 

   RAISERROR(@ErrorMessage, @ErrorSeverity, 1 ) 
 END CATCH 
GO
EXEC sp_settriggerorder N'[dbo].[vtbudMeterHis_Audit_Delete]', 'last', 'delete', null
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
CREATE TRIGGER dbo.vtbudMeterHis_Audit_Insert ON dbo.budMeterHis
 AFTER INSERT
 NOT FOR REPLICATION AS
 SET NOCOUNT ON 
 -- generated by vspHQCreateAuditTriggers on Sep 24 2013 12:04PM

 BEGIN TRY 

   INSERT dbo.HQMA (TableName, KeyString, Co, RecType, FieldName, OldValue, NewValue, DateTime, UserName)

   SELECT 'budMeterHis' , '<KeyString Equipment = "' + REPLACE(CAST(inserted.[Equipment] AS VARCHAR(MAX)),'"', '&quot;') + '" Date = "' + REPLACE(CAST(inserted.[Date] AS VARCHAR(MAX)),'"', '&quot;') + '" Sequence = "' + REPLACE(CAST(inserted.[Seq] AS VARCHAR(MAX)),'"', '&quot;') + '" />' , ISNULL(inserted.Co, '') , 'A' , NULL , NULL , NULL , GETDATE() , SUSER_SNAME()
	FROM inserted

 END TRY 
 BEGIN CATCH 
   DECLARE	@ErrorMessage	NVARCHAR(4000), 
				@ErrorSeverity	INT; 

   SELECT	@ErrorMessage = 'Error '+ ISNULL(ERROR_MESSAGE(),'') +' in [dbo].[dbo.vtbudMeterHis_Audit_Insert] trigger', 
				@ErrorSeverity = ERROR_SEVERITY(); 

   RAISERROR(@ErrorMessage, @ErrorSeverity, 1 ) 
 END CATCH 
GO
EXEC sp_settriggerorder N'[dbo].[vtbudMeterHis_Audit_Insert]', 'last', 'insert', null
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
CREATE TRIGGER dbo.vtbudMeterHis_Audit_Update ON dbo.budMeterHis
 AFTER UPDATE 
 NOT FOR REPLICATION AS 
 SET NOCOUNT ON 
 -- generated by vspHQCreateAuditTriggers on Sep 24 2013 12:04PM

 BEGIN TRY 

 IF UPDATE([Co])
 BEGIN   INSERT dbo.HQMA (TableName, KeyString, Co, RecType, FieldName, OldValue, NewValue, DateTime, UserName)

   SELECT 'budMeterHis' , '<KeyString Equipment = "' + REPLACE(CAST(inserted.[Equipment] AS VARCHAR(MAX)),'"', '&quot;') + '" Date = "' + REPLACE(CAST(inserted.[Date] AS VARCHAR(MAX)),'"', '&quot;') + '" Sequence = "' + REPLACE(CAST(inserted.[Seq] AS VARCHAR(MAX)),'"', '&quot;') + '" />' , inserted.Co , 'C' , '[Co]' ,  CONVERT(VARCHAR(MAX), deleted.[Co]) ,  CONVERT(VARCHAR(MAX), inserted.[Co]) , GETDATE() , SUSER_SNAME()
		FROM inserted
			INNER JOIN deleted
         ON  inserted.[KeyID] = deleted.[KeyID] 
         AND ((inserted.[Co] <> deleted.[Co]) OR (inserted.[Co] IS NULL AND deleted.[Co] IS NOT NULL) OR (inserted.[Co] IS NOT NULL AND deleted.[Co] IS NULL))



 END 

 IF UPDATE([Date])
 BEGIN   INSERT dbo.HQMA (TableName, KeyString, Co, RecType, FieldName, OldValue, NewValue, DateTime, UserName)

   SELECT 'budMeterHis' , '<KeyString Equipment = "' + REPLACE(CAST(inserted.[Equipment] AS VARCHAR(MAX)),'"', '&quot;') + '" Date = "' + REPLACE(CAST(inserted.[Date] AS VARCHAR(MAX)),'"', '&quot;') + '" Sequence = "' + REPLACE(CAST(inserted.[Seq] AS VARCHAR(MAX)),'"', '&quot;') + '" />' , inserted.Co , 'C' , '[Date]' ,  CONVERT(VARCHAR(MAX), deleted.[Date]) ,  CONVERT(VARCHAR(MAX), inserted.[Date]) , GETDATE() , SUSER_SNAME()
		FROM inserted
			INNER JOIN deleted
         ON  inserted.[KeyID] = deleted.[KeyID] 
         AND ((inserted.[Date] <> deleted.[Date]) OR (inserted.[Date] IS NULL AND deleted.[Date] IS NOT NULL) OR (inserted.[Date] IS NOT NULL AND deleted.[Date] IS NULL))



 END 

 IF UPDATE([Equipment])
 BEGIN   INSERT dbo.HQMA (TableName, KeyString, Co, RecType, FieldName, OldValue, NewValue, DateTime, UserName)

   SELECT 'budMeterHis' , '<KeyString Equipment = "' + REPLACE(CAST(inserted.[Equipment] AS VARCHAR(MAX)),'"', '&quot;') + '" Date = "' + REPLACE(CAST(inserted.[Date] AS VARCHAR(MAX)),'"', '&quot;') + '" Sequence = "' + REPLACE(CAST(inserted.[Seq] AS VARCHAR(MAX)),'"', '&quot;') + '" />' , inserted.Co , 'C' , '[Equipment]' ,  CONVERT(VARCHAR(MAX), deleted.[Equipment]) ,  CONVERT(VARCHAR(MAX), inserted.[Equipment]) , GETDATE() , SUSER_SNAME()
		FROM inserted
			INNER JOIN deleted
         ON  inserted.[KeyID] = deleted.[KeyID] 
         AND ((inserted.[Equipment] <> deleted.[Equipment]) OR (inserted.[Equipment] IS NULL AND deleted.[Equipment] IS NOT NULL) OR (inserted.[Equipment] IS NOT NULL AND deleted.[Equipment] IS NULL))



 END 

 IF UPDATE([FuelDate])
 BEGIN   INSERT dbo.HQMA (TableName, KeyString, Co, RecType, FieldName, OldValue, NewValue, DateTime, UserName)

   SELECT 'budMeterHis' , '<KeyString Equipment = "' + REPLACE(CAST(inserted.[Equipment] AS VARCHAR(MAX)),'"', '&quot;') + '" Date = "' + REPLACE(CAST(inserted.[Date] AS VARCHAR(MAX)),'"', '&quot;') + '" Sequence = "' + REPLACE(CAST(inserted.[Seq] AS VARCHAR(MAX)),'"', '&quot;') + '" />' , inserted.Co , 'C' , '[FuelDate]' ,  CONVERT(VARCHAR(MAX), deleted.[FuelDate]) ,  CONVERT(VARCHAR(MAX), inserted.[FuelDate]) , GETDATE() , SUSER_SNAME()
		FROM inserted
			INNER JOIN deleted
         ON  inserted.[KeyID] = deleted.[KeyID] 
         AND ((inserted.[FuelDate] <> deleted.[FuelDate]) OR (inserted.[FuelDate] IS NULL AND deleted.[FuelDate] IS NOT NULL) OR (inserted.[FuelDate] IS NOT NULL AND deleted.[FuelDate] IS NULL))



 END 

 IF UPDATE([FuelUsed])
 BEGIN   INSERT dbo.HQMA (TableName, KeyString, Co, RecType, FieldName, OldValue, NewValue, DateTime, UserName)

   SELECT 'budMeterHis' , '<KeyString Equipment = "' + REPLACE(CAST(inserted.[Equipment] AS VARCHAR(MAX)),'"', '&quot;') + '" Date = "' + REPLACE(CAST(inserted.[Date] AS VARCHAR(MAX)),'"', '&quot;') + '" Sequence = "' + REPLACE(CAST(inserted.[Seq] AS VARCHAR(MAX)),'"', '&quot;') + '" />' , inserted.Co , 'C' , '[FuelUsed]' ,  CONVERT(VARCHAR(MAX), deleted.[FuelUsed]) ,  CONVERT(VARCHAR(MAX), inserted.[FuelUsed]) , GETDATE() , SUSER_SNAME()
		FROM inserted
			INNER JOIN deleted
         ON  inserted.[KeyID] = deleted.[KeyID] 
         AND ((inserted.[FuelUsed] <> deleted.[FuelUsed]) OR (inserted.[FuelUsed] IS NULL AND deleted.[FuelUsed] IS NOT NULL) OR (inserted.[FuelUsed] IS NOT NULL AND deleted.[FuelUsed] IS NULL))



 END 

 IF UPDATE([HourDate])
 BEGIN   INSERT dbo.HQMA (TableName, KeyString, Co, RecType, FieldName, OldValue, NewValue, DateTime, UserName)

   SELECT 'budMeterHis' , '<KeyString Equipment = "' + REPLACE(CAST(inserted.[Equipment] AS VARCHAR(MAX)),'"', '&quot;') + '" Date = "' + REPLACE(CAST(inserted.[Date] AS VARCHAR(MAX)),'"', '&quot;') + '" Sequence = "' + REPLACE(CAST(inserted.[Seq] AS VARCHAR(MAX)),'"', '&quot;') + '" />' , inserted.Co , 'C' , '[HourDate]' ,  CONVERT(VARCHAR(MAX), deleted.[HourDate]) ,  CONVERT(VARCHAR(MAX), inserted.[HourDate]) , GETDATE() , SUSER_SNAME()
		FROM inserted
			INNER JOIN deleted
         ON  inserted.[KeyID] = deleted.[KeyID] 
         AND ((inserted.[HourDate] <> deleted.[HourDate]) OR (inserted.[HourDate] IS NULL AND deleted.[HourDate] IS NOT NULL) OR (inserted.[HourDate] IS NOT NULL AND deleted.[HourDate] IS NULL))



 END 

 IF UPDATE([HourRead])
 BEGIN   INSERT dbo.HQMA (TableName, KeyString, Co, RecType, FieldName, OldValue, NewValue, DateTime, UserName)

   SELECT 'budMeterHis' , '<KeyString Equipment = "' + REPLACE(CAST(inserted.[Equipment] AS VARCHAR(MAX)),'"', '&quot;') + '" Date = "' + REPLACE(CAST(inserted.[Date] AS VARCHAR(MAX)),'"', '&quot;') + '" Sequence = "' + REPLACE(CAST(inserted.[Seq] AS VARCHAR(MAX)),'"', '&quot;') + '" />' , inserted.Co , 'C' , '[HourRead]' ,  CONVERT(VARCHAR(MAX), deleted.[HourRead]) ,  CONVERT(VARCHAR(MAX), inserted.[HourRead]) , GETDATE() , SUSER_SNAME()
		FROM inserted
			INNER JOIN deleted
         ON  inserted.[KeyID] = deleted.[KeyID] 
         AND ((inserted.[HourRead] <> deleted.[HourRead]) OR (inserted.[HourRead] IS NULL AND deleted.[HourRead] IS NOT NULL) OR (inserted.[HourRead] IS NOT NULL AND deleted.[HourRead] IS NULL))



 END 

 IF UPDATE([OdoDate])
 BEGIN   INSERT dbo.HQMA (TableName, KeyString, Co, RecType, FieldName, OldValue, NewValue, DateTime, UserName)

   SELECT 'budMeterHis' , '<KeyString Equipment = "' + REPLACE(CAST(inserted.[Equipment] AS VARCHAR(MAX)),'"', '&quot;') + '" Date = "' + REPLACE(CAST(inserted.[Date] AS VARCHAR(MAX)),'"', '&quot;') + '" Sequence = "' + REPLACE(CAST(inserted.[Seq] AS VARCHAR(MAX)),'"', '&quot;') + '" />' , inserted.Co , 'C' , '[OdoDate]' ,  CONVERT(VARCHAR(MAX), deleted.[OdoDate]) ,  CONVERT(VARCHAR(MAX), inserted.[OdoDate]) , GETDATE() , SUSER_SNAME()
		FROM inserted
			INNER JOIN deleted
         ON  inserted.[KeyID] = deleted.[KeyID] 
         AND ((inserted.[OdoDate] <> deleted.[OdoDate]) OR (inserted.[OdoDate] IS NULL AND deleted.[OdoDate] IS NOT NULL) OR (inserted.[OdoDate] IS NOT NULL AND deleted.[OdoDate] IS NULL))



 END 

 IF UPDATE([Seq])
 BEGIN   INSERT dbo.HQMA (TableName, KeyString, Co, RecType, FieldName, OldValue, NewValue, DateTime, UserName)

   SELECT 'budMeterHis' , '<KeyString Equipment = "' + REPLACE(CAST(inserted.[Equipment] AS VARCHAR(MAX)),'"', '&quot;') + '" Date = "' + REPLACE(CAST(inserted.[Date] AS VARCHAR(MAX)),'"', '&quot;') + '" Sequence = "' + REPLACE(CAST(inserted.[Seq] AS VARCHAR(MAX)),'"', '&quot;') + '" />' , inserted.Co , 'C' , '[Seq]' ,  CONVERT(VARCHAR(MAX), deleted.[Seq]) ,  CONVERT(VARCHAR(MAX), inserted.[Seq]) , GETDATE() , SUSER_SNAME()
		FROM inserted
			INNER JOIN deleted
         ON  inserted.[KeyID] = deleted.[KeyID] 
         AND ((inserted.[Seq] <> deleted.[Seq]) OR (inserted.[Seq] IS NULL AND deleted.[Seq] IS NOT NULL) OR (inserted.[Seq] IS NOT NULL AND deleted.[Seq] IS NULL))



 END 

 IF UPDATE([UniqueAttchID])
 BEGIN   INSERT dbo.HQMA (TableName, KeyString, Co, RecType, FieldName, OldValue, NewValue, DateTime, UserName)

   SELECT 'budMeterHis' , '<KeyString Equipment = "' + REPLACE(CAST(inserted.[Equipment] AS VARCHAR(MAX)),'"', '&quot;') + '" Date = "' + REPLACE(CAST(inserted.[Date] AS VARCHAR(MAX)),'"', '&quot;') + '" Sequence = "' + REPLACE(CAST(inserted.[Seq] AS VARCHAR(MAX)),'"', '&quot;') + '" />' , inserted.Co , 'C' , '[UniqueAttchID]' ,  CONVERT(VARCHAR(MAX), deleted.[UniqueAttchID]) ,  CONVERT(VARCHAR(MAX), inserted.[UniqueAttchID]) , GETDATE() , SUSER_SNAME()
		FROM inserted
			INNER JOIN deleted
         ON  inserted.[KeyID] = deleted.[KeyID] 
         AND ((inserted.[UniqueAttchID] <> deleted.[UniqueAttchID]) OR (inserted.[UniqueAttchID] IS NULL AND deleted.[UniqueAttchID] IS NOT NULL) OR (inserted.[UniqueAttchID] IS NOT NULL AND deleted.[UniqueAttchID] IS NULL))



 END 

 IF UPDATE([OdoRead])
 BEGIN   INSERT dbo.HQMA (TableName, KeyString, Co, RecType, FieldName, OldValue, NewValue, DateTime, UserName)

   SELECT 'budMeterHis' , '<KeyString Equipment = "' + REPLACE(CAST(inserted.[Equipment] AS VARCHAR(MAX)),'"', '&quot;') + '" Date = "' + REPLACE(CAST(inserted.[Date] AS VARCHAR(MAX)),'"', '&quot;') + '" Sequence = "' + REPLACE(CAST(inserted.[Seq] AS VARCHAR(MAX)),'"', '&quot;') + '" />' , inserted.Co , 'C' , '[OdoRead]' ,  CONVERT(VARCHAR(MAX), deleted.[OdoRead]) ,  CONVERT(VARCHAR(MAX), inserted.[OdoRead]) , GETDATE() , SUSER_SNAME()
		FROM inserted
			INNER JOIN deleted
         ON  inserted.[KeyID] = deleted.[KeyID] 
         AND ((inserted.[OdoRead] <> deleted.[OdoRead]) OR (inserted.[OdoRead] IS NULL AND deleted.[OdoRead] IS NOT NULL) OR (inserted.[OdoRead] IS NOT NULL AND deleted.[OdoRead] IS NULL))



 END 

 END TRY 
 BEGIN CATCH 
   DECLARE	@ErrorMessage	NVARCHAR(4000), 
				@ErrorSeverity	INT; 

   SELECT	@ErrorMessage = 'Error '+ ISNULL(ERROR_MESSAGE(),'') +' in [dbo].[dbo.vtbudMeterHis_Audit_Update] trigger', 
				@ErrorSeverity = ERROR_SEVERITY(); 

   RAISERROR(@ErrorMessage, @ErrorSeverity, 1 ) 
 END CATCH 
GO
EXEC sp_settriggerorder N'[dbo].[vtbudMeterHis_Audit_Update]', 'last', 'update', null
GO
CREATE UNIQUE CLUSTERED INDEX [biudMeterHis] ON [dbo].[budMeterHis] ([Co], [Equipment], [Date], [Seq]) ON [PRIMARY]
GO
