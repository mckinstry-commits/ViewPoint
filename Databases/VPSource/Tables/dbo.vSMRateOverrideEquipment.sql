CREATE TABLE [dbo].[vSMRateOverrideEquipment]
(
[SMRateOverrideEquipID] [bigint] NOT NULL IDENTITY(1, 1),
[EMCo] [dbo].[bCompany] NOT NULL,
[Equipment] [dbo].[bEquip] NOT NULL,
[RevCode] [dbo].[bRevCode] NOT NULL,
[MarkupOrFlatRate] [char] (1) COLLATE Latin1_General_BIN NOT NULL,
[MarkupAmount] [dbo].[bUnitCost] NULL,
[FlatRateAmount] [dbo].[bUnitCost] NULL,
[SMCo] [dbo].[bCompany] NOT NULL,
[EntitySeq] [int] NOT NULL
) ON [PRIMARY]
ALTER TABLE [dbo].[vSMRateOverrideEquipment] ADD 
CONSTRAINT [PK_vSMRateOverrideEquipment] PRIMARY KEY CLUSTERED  ([SMRateOverrideEquipID]) ON [PRIMARY]
GO
ALTER TABLE [dbo].[vSMRateOverrideEquipment] ADD CONSTRAINT [IX_vSMRateOverrideEquipment_SMCo_EntitySeq_EMCo_Equipment_RevCode] UNIQUE NONCLUSTERED  ([SMCo], [EntitySeq], [EMCo], [Equipment], [RevCode]) ON [PRIMARY]

GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
CREATE TRIGGER dbo.vtvSMRateOverrideEquipment_Audit_Delete ON dbo.vSMRateOverrideEquipment
 AFTER DELETE
 NOT FOR REPLICATION AS
 SET NOCOUNT ON 
 -- generated by vspAuditCreateAuditTriggers

 BEGIN TRY 

							INSERT dbo.HQMA (
													TableName, 
													KeyString, 
													Co, 
													RecType, 
													FieldName, 
													OldValue, 
													NewValue, 
													DateTime, 
													UserName)
								
							SELECT
								'vSMRateOverrideEquipment' , 
								'<KeyString EMCo = "' + REPLACE(CAST(ISNULL(deleted.[EMCo],'') AS VARCHAR(MAX)),'"', '&quot;') + '" EntitySeq = "' + REPLACE(CAST(ISNULL(deleted.[EntitySeq],'') AS VARCHAR(MAX)),'"', '&quot;') + '" Equipment = "' + REPLACE(CAST(ISNULL(deleted.[Equipment],'') AS VARCHAR(MAX)),'"', '&quot;') + '" RevCode = "' + REPLACE(CAST(ISNULL(deleted.[RevCode],'') AS VARCHAR(MAX)),'"', '&quot;') + '" SMCo = "' + REPLACE(CAST(ISNULL(deleted.[SMCo],'') AS VARCHAR(MAX)),'"', '&quot;') + '" />' , 
								deleted.SMCo , 
								'D' , 
								'EMCo' , 
								CONVERT(VARCHAR(MAX), deleted.[EMCo]) , 								NULL , 
								GETDATE() , 
								SUSER_SNAME()
							FROM deleted
								JOIN dbo.vAuditFlagCompany AS afc ON deleted.SMCo = afc.AuditCo 
							WHERE afc.AuditFlagID = 7
							INSERT dbo.HQMA (
													TableName, 
													KeyString, 
													Co, 
													RecType, 
													FieldName, 
													OldValue, 
													NewValue, 
													DateTime, 
													UserName)
								
							SELECT
								'vSMRateOverrideEquipment' , 
								'<KeyString EMCo = "' + REPLACE(CAST(ISNULL(deleted.[EMCo],'') AS VARCHAR(MAX)),'"', '&quot;') + '" EntitySeq = "' + REPLACE(CAST(ISNULL(deleted.[EntitySeq],'') AS VARCHAR(MAX)),'"', '&quot;') + '" Equipment = "' + REPLACE(CAST(ISNULL(deleted.[Equipment],'') AS VARCHAR(MAX)),'"', '&quot;') + '" RevCode = "' + REPLACE(CAST(ISNULL(deleted.[RevCode],'') AS VARCHAR(MAX)),'"', '&quot;') + '" SMCo = "' + REPLACE(CAST(ISNULL(deleted.[SMCo],'') AS VARCHAR(MAX)),'"', '&quot;') + '" />' , 
								deleted.SMCo , 
								'D' , 
								'EntitySeq' , 
								CONVERT(VARCHAR(MAX), deleted.[EntitySeq]) , 								NULL , 
								GETDATE() , 
								SUSER_SNAME()
							FROM deleted
								JOIN dbo.vAuditFlagCompany AS afc ON deleted.SMCo = afc.AuditCo 
							WHERE afc.AuditFlagID = 7
							INSERT dbo.HQMA (
													TableName, 
													KeyString, 
													Co, 
													RecType, 
													FieldName, 
													OldValue, 
													NewValue, 
													DateTime, 
													UserName)
								
							SELECT
								'vSMRateOverrideEquipment' , 
								'<KeyString EMCo = "' + REPLACE(CAST(ISNULL(deleted.[EMCo],'') AS VARCHAR(MAX)),'"', '&quot;') + '" EntitySeq = "' + REPLACE(CAST(ISNULL(deleted.[EntitySeq],'') AS VARCHAR(MAX)),'"', '&quot;') + '" Equipment = "' + REPLACE(CAST(ISNULL(deleted.[Equipment],'') AS VARCHAR(MAX)),'"', '&quot;') + '" RevCode = "' + REPLACE(CAST(ISNULL(deleted.[RevCode],'') AS VARCHAR(MAX)),'"', '&quot;') + '" SMCo = "' + REPLACE(CAST(ISNULL(deleted.[SMCo],'') AS VARCHAR(MAX)),'"', '&quot;') + '" />' , 
								deleted.SMCo , 
								'D' , 
								'Equipment' , 
								CONVERT(VARCHAR(MAX), deleted.[Equipment]) , 								NULL , 
								GETDATE() , 
								SUSER_SNAME()
							FROM deleted
								JOIN dbo.vAuditFlagCompany AS afc ON deleted.SMCo = afc.AuditCo 
							WHERE afc.AuditFlagID = 7
							INSERT dbo.HQMA (
													TableName, 
													KeyString, 
													Co, 
													RecType, 
													FieldName, 
													OldValue, 
													NewValue, 
													DateTime, 
													UserName)
								
							SELECT
								'vSMRateOverrideEquipment' , 
								'<KeyString EMCo = "' + REPLACE(CAST(ISNULL(deleted.[EMCo],'') AS VARCHAR(MAX)),'"', '&quot;') + '" EntitySeq = "' + REPLACE(CAST(ISNULL(deleted.[EntitySeq],'') AS VARCHAR(MAX)),'"', '&quot;') + '" Equipment = "' + REPLACE(CAST(ISNULL(deleted.[Equipment],'') AS VARCHAR(MAX)),'"', '&quot;') + '" RevCode = "' + REPLACE(CAST(ISNULL(deleted.[RevCode],'') AS VARCHAR(MAX)),'"', '&quot;') + '" SMCo = "' + REPLACE(CAST(ISNULL(deleted.[SMCo],'') AS VARCHAR(MAX)),'"', '&quot;') + '" />' , 
								deleted.SMCo , 
								'D' , 
								'FlatRateAmount' , 
								CONVERT(VARCHAR(MAX), deleted.[FlatRateAmount]) , 								NULL , 
								GETDATE() , 
								SUSER_SNAME()
							FROM deleted
								JOIN dbo.vAuditFlagCompany AS afc ON deleted.SMCo = afc.AuditCo 
							WHERE afc.AuditFlagID = 7
							INSERT dbo.HQMA (
													TableName, 
													KeyString, 
													Co, 
													RecType, 
													FieldName, 
													OldValue, 
													NewValue, 
													DateTime, 
													UserName)
								
							SELECT
								'vSMRateOverrideEquipment' , 
								'<KeyString EMCo = "' + REPLACE(CAST(ISNULL(deleted.[EMCo],'') AS VARCHAR(MAX)),'"', '&quot;') + '" EntitySeq = "' + REPLACE(CAST(ISNULL(deleted.[EntitySeq],'') AS VARCHAR(MAX)),'"', '&quot;') + '" Equipment = "' + REPLACE(CAST(ISNULL(deleted.[Equipment],'') AS VARCHAR(MAX)),'"', '&quot;') + '" RevCode = "' + REPLACE(CAST(ISNULL(deleted.[RevCode],'') AS VARCHAR(MAX)),'"', '&quot;') + '" SMCo = "' + REPLACE(CAST(ISNULL(deleted.[SMCo],'') AS VARCHAR(MAX)),'"', '&quot;') + '" />' , 
								deleted.SMCo , 
								'D' , 
								'MarkupAmount' , 
								CONVERT(VARCHAR(MAX), deleted.[MarkupAmount]) , 								NULL , 
								GETDATE() , 
								SUSER_SNAME()
							FROM deleted
								JOIN dbo.vAuditFlagCompany AS afc ON deleted.SMCo = afc.AuditCo 
							WHERE afc.AuditFlagID = 7
							INSERT dbo.HQMA (
													TableName, 
													KeyString, 
													Co, 
													RecType, 
													FieldName, 
													OldValue, 
													NewValue, 
													DateTime, 
													UserName)
								
							SELECT
								'vSMRateOverrideEquipment' , 
								'<KeyString EMCo = "' + REPLACE(CAST(ISNULL(deleted.[EMCo],'') AS VARCHAR(MAX)),'"', '&quot;') + '" EntitySeq = "' + REPLACE(CAST(ISNULL(deleted.[EntitySeq],'') AS VARCHAR(MAX)),'"', '&quot;') + '" Equipment = "' + REPLACE(CAST(ISNULL(deleted.[Equipment],'') AS VARCHAR(MAX)),'"', '&quot;') + '" RevCode = "' + REPLACE(CAST(ISNULL(deleted.[RevCode],'') AS VARCHAR(MAX)),'"', '&quot;') + '" SMCo = "' + REPLACE(CAST(ISNULL(deleted.[SMCo],'') AS VARCHAR(MAX)),'"', '&quot;') + '" />' , 
								deleted.SMCo , 
								'D' , 
								'MarkupOrFlatRate' , 
								CONVERT(VARCHAR(MAX), deleted.[MarkupOrFlatRate]) , 								NULL , 
								GETDATE() , 
								SUSER_SNAME()
							FROM deleted
								JOIN dbo.vAuditFlagCompany AS afc ON deleted.SMCo = afc.AuditCo 
							WHERE afc.AuditFlagID = 7
							INSERT dbo.HQMA (
													TableName, 
													KeyString, 
													Co, 
													RecType, 
													FieldName, 
													OldValue, 
													NewValue, 
													DateTime, 
													UserName)
								
							SELECT
								'vSMRateOverrideEquipment' , 
								'<KeyString EMCo = "' + REPLACE(CAST(ISNULL(deleted.[EMCo],'') AS VARCHAR(MAX)),'"', '&quot;') + '" EntitySeq = "' + REPLACE(CAST(ISNULL(deleted.[EntitySeq],'') AS VARCHAR(MAX)),'"', '&quot;') + '" Equipment = "' + REPLACE(CAST(ISNULL(deleted.[Equipment],'') AS VARCHAR(MAX)),'"', '&quot;') + '" RevCode = "' + REPLACE(CAST(ISNULL(deleted.[RevCode],'') AS VARCHAR(MAX)),'"', '&quot;') + '" SMCo = "' + REPLACE(CAST(ISNULL(deleted.[SMCo],'') AS VARCHAR(MAX)),'"', '&quot;') + '" />' , 
								deleted.SMCo , 
								'D' , 
								'RevCode' , 
								CONVERT(VARCHAR(MAX), deleted.[RevCode]) , 								NULL , 
								GETDATE() , 
								SUSER_SNAME()
							FROM deleted
								JOIN dbo.vAuditFlagCompany AS afc ON deleted.SMCo = afc.AuditCo 
							WHERE afc.AuditFlagID = 7
							INSERT dbo.HQMA (
													TableName, 
													KeyString, 
													Co, 
													RecType, 
													FieldName, 
													OldValue, 
													NewValue, 
													DateTime, 
													UserName)
								
							SELECT
								'vSMRateOverrideEquipment' , 
								'<KeyString EMCo = "' + REPLACE(CAST(ISNULL(deleted.[EMCo],'') AS VARCHAR(MAX)),'"', '&quot;') + '" EntitySeq = "' + REPLACE(CAST(ISNULL(deleted.[EntitySeq],'') AS VARCHAR(MAX)),'"', '&quot;') + '" Equipment = "' + REPLACE(CAST(ISNULL(deleted.[Equipment],'') AS VARCHAR(MAX)),'"', '&quot;') + '" RevCode = "' + REPLACE(CAST(ISNULL(deleted.[RevCode],'') AS VARCHAR(MAX)),'"', '&quot;') + '" SMCo = "' + REPLACE(CAST(ISNULL(deleted.[SMCo],'') AS VARCHAR(MAX)),'"', '&quot;') + '" />' , 
								deleted.SMCo , 
								'D' , 
								'SMCo' , 
								CONVERT(VARCHAR(MAX), deleted.[SMCo]) , 								NULL , 
								GETDATE() , 
								SUSER_SNAME()
							FROM deleted
								JOIN dbo.vAuditFlagCompany AS afc ON deleted.SMCo = afc.AuditCo 
							WHERE afc.AuditFlagID = 7
							INSERT dbo.HQMA (
													TableName, 
													KeyString, 
													Co, 
													RecType, 
													FieldName, 
													OldValue, 
													NewValue, 
													DateTime, 
													UserName)
								
							SELECT
								'vSMRateOverrideEquipment' , 
								'<KeyString EMCo = "' + REPLACE(CAST(ISNULL(deleted.[EMCo],'') AS VARCHAR(MAX)),'"', '&quot;') + '" EntitySeq = "' + REPLACE(CAST(ISNULL(deleted.[EntitySeq],'') AS VARCHAR(MAX)),'"', '&quot;') + '" Equipment = "' + REPLACE(CAST(ISNULL(deleted.[Equipment],'') AS VARCHAR(MAX)),'"', '&quot;') + '" RevCode = "' + REPLACE(CAST(ISNULL(deleted.[RevCode],'') AS VARCHAR(MAX)),'"', '&quot;') + '" SMCo = "' + REPLACE(CAST(ISNULL(deleted.[SMCo],'') AS VARCHAR(MAX)),'"', '&quot;') + '" />' , 
								deleted.SMCo , 
								'D' , 
								'SMRateOverrideEquipID' , 
								CONVERT(VARCHAR(MAX), deleted.[SMRateOverrideEquipID]) , 								NULL , 
								GETDATE() , 
								SUSER_SNAME()
							FROM deleted
								JOIN dbo.vAuditFlagCompany AS afc ON deleted.SMCo = afc.AuditCo 
							WHERE afc.AuditFlagID = 7

							
 END TRY 
 BEGIN CATCH 
   DECLARE	@ErrorMessage	NVARCHAR(4000), 
				@ErrorSeverity	INT; 

   SELECT	@ErrorMessage = 'Error '+ ISNULL(ERROR_MESSAGE(),'') +' in [dbo].[dbo.vtvSMRateOverrideEquipment_Audit_Delete] trigger', 
				@ErrorSeverity = ERROR_SEVERITY(); 

   RAISERROR(@ErrorMessage, @ErrorSeverity, 1 ) 
 END CATCH 
GO
EXEC sp_settriggerorder N'[dbo].[vtvSMRateOverrideEquipment_Audit_Delete]', 'last', 'delete', null
GO

GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
CREATE TRIGGER dbo.vtvSMRateOverrideEquipment_Audit_Insert ON dbo.vSMRateOverrideEquipment
 AFTER INSERT
 NOT FOR REPLICATION AS
 SET NOCOUNT ON 
 -- generated by vspAuditTriggersCreate

 BEGIN TRY 

-- log additions to the EMCo column
							INSERT dbo.bHQMA (	
													TableName, 
													KeyString, 
													Co, 
													RecType, 
													FieldName, 
													OldValue, 
													NewValue, 
													DateTime, 
													UserName)
							
							SELECT 
								'vSMRateOverrideEquipment' , 
								'<KeyString EMCo = "' + REPLACE(CAST(ISNULL(inserted.[EMCo],'') AS VARCHAR(MAX)),'"', '&quot;') + '" EntitySeq = "' + REPLACE(CAST(ISNULL(inserted.[EntitySeq],'') AS VARCHAR(MAX)),'"', '&quot;') + '" Equipment = "' + REPLACE(CAST(ISNULL(inserted.[Equipment],'') AS VARCHAR(MAX)),'"', '&quot;') + '" RevCode = "' + REPLACE(CAST(ISNULL(inserted.[RevCode],'') AS VARCHAR(MAX)),'"', '&quot;') + '" SMCo = "' + REPLACE(CAST(ISNULL(inserted.[SMCo],'') AS VARCHAR(MAX)),'"', '&quot;') + '" />' , 
								ISNULL(inserted.SMCo, '') , 
								'A' , 
								'EMCo' , 
								NULL , 
								[EMCo] , 
								GETDATE() , 
								SUSER_SNAME()
							FROM inserted
								JOIN dbo.vAuditFlagCompany AS afc ON inserted.SMCo = afc.AuditCo 
							WHERE afc.AuditFlagID = 7

-- log additions to the EntitySeq column
							INSERT dbo.bHQMA (	
													TableName, 
													KeyString, 
													Co, 
													RecType, 
													FieldName, 
													OldValue, 
													NewValue, 
													DateTime, 
													UserName)
							
							SELECT 
								'vSMRateOverrideEquipment' , 
								'<KeyString EMCo = "' + REPLACE(CAST(ISNULL(inserted.[EMCo],'') AS VARCHAR(MAX)),'"', '&quot;') + '" EntitySeq = "' + REPLACE(CAST(ISNULL(inserted.[EntitySeq],'') AS VARCHAR(MAX)),'"', '&quot;') + '" Equipment = "' + REPLACE(CAST(ISNULL(inserted.[Equipment],'') AS VARCHAR(MAX)),'"', '&quot;') + '" RevCode = "' + REPLACE(CAST(ISNULL(inserted.[RevCode],'') AS VARCHAR(MAX)),'"', '&quot;') + '" SMCo = "' + REPLACE(CAST(ISNULL(inserted.[SMCo],'') AS VARCHAR(MAX)),'"', '&quot;') + '" />' , 
								ISNULL(inserted.SMCo, '') , 
								'A' , 
								'EntitySeq' , 
								NULL , 
								[EntitySeq] , 
								GETDATE() , 
								SUSER_SNAME()
							FROM inserted
								JOIN dbo.vAuditFlagCompany AS afc ON inserted.SMCo = afc.AuditCo 
							WHERE afc.AuditFlagID = 7

-- log additions to the Equipment column
							INSERT dbo.bHQMA (	
													TableName, 
													KeyString, 
													Co, 
													RecType, 
													FieldName, 
													OldValue, 
													NewValue, 
													DateTime, 
													UserName)
							
							SELECT 
								'vSMRateOverrideEquipment' , 
								'<KeyString EMCo = "' + REPLACE(CAST(ISNULL(inserted.[EMCo],'') AS VARCHAR(MAX)),'"', '&quot;') + '" EntitySeq = "' + REPLACE(CAST(ISNULL(inserted.[EntitySeq],'') AS VARCHAR(MAX)),'"', '&quot;') + '" Equipment = "' + REPLACE(CAST(ISNULL(inserted.[Equipment],'') AS VARCHAR(MAX)),'"', '&quot;') + '" RevCode = "' + REPLACE(CAST(ISNULL(inserted.[RevCode],'') AS VARCHAR(MAX)),'"', '&quot;') + '" SMCo = "' + REPLACE(CAST(ISNULL(inserted.[SMCo],'') AS VARCHAR(MAX)),'"', '&quot;') + '" />' , 
								ISNULL(inserted.SMCo, '') , 
								'A' , 
								'Equipment' , 
								NULL , 
								[Equipment] , 
								GETDATE() , 
								SUSER_SNAME()
							FROM inserted
								JOIN dbo.vAuditFlagCompany AS afc ON inserted.SMCo = afc.AuditCo 
							WHERE afc.AuditFlagID = 7

-- log additions to the FlatRateAmount column
							INSERT dbo.bHQMA (	
													TableName, 
													KeyString, 
													Co, 
													RecType, 
													FieldName, 
													OldValue, 
													NewValue, 
													DateTime, 
													UserName)
							
							SELECT 
								'vSMRateOverrideEquipment' , 
								'<KeyString EMCo = "' + REPLACE(CAST(ISNULL(inserted.[EMCo],'') AS VARCHAR(MAX)),'"', '&quot;') + '" EntitySeq = "' + REPLACE(CAST(ISNULL(inserted.[EntitySeq],'') AS VARCHAR(MAX)),'"', '&quot;') + '" Equipment = "' + REPLACE(CAST(ISNULL(inserted.[Equipment],'') AS VARCHAR(MAX)),'"', '&quot;') + '" RevCode = "' + REPLACE(CAST(ISNULL(inserted.[RevCode],'') AS VARCHAR(MAX)),'"', '&quot;') + '" SMCo = "' + REPLACE(CAST(ISNULL(inserted.[SMCo],'') AS VARCHAR(MAX)),'"', '&quot;') + '" />' , 
								ISNULL(inserted.SMCo, '') , 
								'A' , 
								'FlatRateAmount' , 
								NULL , 
								[FlatRateAmount] , 
								GETDATE() , 
								SUSER_SNAME()
							FROM inserted
								JOIN dbo.vAuditFlagCompany AS afc ON inserted.SMCo = afc.AuditCo 
							WHERE afc.AuditFlagID = 7

-- log additions to the MarkupAmount column
							INSERT dbo.bHQMA (	
													TableName, 
													KeyString, 
													Co, 
													RecType, 
													FieldName, 
													OldValue, 
													NewValue, 
													DateTime, 
													UserName)
							
							SELECT 
								'vSMRateOverrideEquipment' , 
								'<KeyString EMCo = "' + REPLACE(CAST(ISNULL(inserted.[EMCo],'') AS VARCHAR(MAX)),'"', '&quot;') + '" EntitySeq = "' + REPLACE(CAST(ISNULL(inserted.[EntitySeq],'') AS VARCHAR(MAX)),'"', '&quot;') + '" Equipment = "' + REPLACE(CAST(ISNULL(inserted.[Equipment],'') AS VARCHAR(MAX)),'"', '&quot;') + '" RevCode = "' + REPLACE(CAST(ISNULL(inserted.[RevCode],'') AS VARCHAR(MAX)),'"', '&quot;') + '" SMCo = "' + REPLACE(CAST(ISNULL(inserted.[SMCo],'') AS VARCHAR(MAX)),'"', '&quot;') + '" />' , 
								ISNULL(inserted.SMCo, '') , 
								'A' , 
								'MarkupAmount' , 
								NULL , 
								[MarkupAmount] , 
								GETDATE() , 
								SUSER_SNAME()
							FROM inserted
								JOIN dbo.vAuditFlagCompany AS afc ON inserted.SMCo = afc.AuditCo 
							WHERE afc.AuditFlagID = 7

-- log additions to the MarkupOrFlatRate column
							INSERT dbo.bHQMA (	
													TableName, 
													KeyString, 
													Co, 
													RecType, 
													FieldName, 
													OldValue, 
													NewValue, 
													DateTime, 
													UserName)
							
							SELECT 
								'vSMRateOverrideEquipment' , 
								'<KeyString EMCo = "' + REPLACE(CAST(ISNULL(inserted.[EMCo],'') AS VARCHAR(MAX)),'"', '&quot;') + '" EntitySeq = "' + REPLACE(CAST(ISNULL(inserted.[EntitySeq],'') AS VARCHAR(MAX)),'"', '&quot;') + '" Equipment = "' + REPLACE(CAST(ISNULL(inserted.[Equipment],'') AS VARCHAR(MAX)),'"', '&quot;') + '" RevCode = "' + REPLACE(CAST(ISNULL(inserted.[RevCode],'') AS VARCHAR(MAX)),'"', '&quot;') + '" SMCo = "' + REPLACE(CAST(ISNULL(inserted.[SMCo],'') AS VARCHAR(MAX)),'"', '&quot;') + '" />' , 
								ISNULL(inserted.SMCo, '') , 
								'A' , 
								'MarkupOrFlatRate' , 
								NULL , 
								[MarkupOrFlatRate] , 
								GETDATE() , 
								SUSER_SNAME()
							FROM inserted
								JOIN dbo.vAuditFlagCompany AS afc ON inserted.SMCo = afc.AuditCo 
							WHERE afc.AuditFlagID = 7

-- log additions to the RevCode column
							INSERT dbo.bHQMA (	
													TableName, 
													KeyString, 
													Co, 
													RecType, 
													FieldName, 
													OldValue, 
													NewValue, 
													DateTime, 
													UserName)
							
							SELECT 
								'vSMRateOverrideEquipment' , 
								'<KeyString EMCo = "' + REPLACE(CAST(ISNULL(inserted.[EMCo],'') AS VARCHAR(MAX)),'"', '&quot;') + '" EntitySeq = "' + REPLACE(CAST(ISNULL(inserted.[EntitySeq],'') AS VARCHAR(MAX)),'"', '&quot;') + '" Equipment = "' + REPLACE(CAST(ISNULL(inserted.[Equipment],'') AS VARCHAR(MAX)),'"', '&quot;') + '" RevCode = "' + REPLACE(CAST(ISNULL(inserted.[RevCode],'') AS VARCHAR(MAX)),'"', '&quot;') + '" SMCo = "' + REPLACE(CAST(ISNULL(inserted.[SMCo],'') AS VARCHAR(MAX)),'"', '&quot;') + '" />' , 
								ISNULL(inserted.SMCo, '') , 
								'A' , 
								'RevCode' , 
								NULL , 
								[RevCode] , 
								GETDATE() , 
								SUSER_SNAME()
							FROM inserted
								JOIN dbo.vAuditFlagCompany AS afc ON inserted.SMCo = afc.AuditCo 
							WHERE afc.AuditFlagID = 7

-- log additions to the SMCo column
							INSERT dbo.bHQMA (	
													TableName, 
													KeyString, 
													Co, 
													RecType, 
													FieldName, 
													OldValue, 
													NewValue, 
													DateTime, 
													UserName)
							
							SELECT 
								'vSMRateOverrideEquipment' , 
								'<KeyString EMCo = "' + REPLACE(CAST(ISNULL(inserted.[EMCo],'') AS VARCHAR(MAX)),'"', '&quot;') + '" EntitySeq = "' + REPLACE(CAST(ISNULL(inserted.[EntitySeq],'') AS VARCHAR(MAX)),'"', '&quot;') + '" Equipment = "' + REPLACE(CAST(ISNULL(inserted.[Equipment],'') AS VARCHAR(MAX)),'"', '&quot;') + '" RevCode = "' + REPLACE(CAST(ISNULL(inserted.[RevCode],'') AS VARCHAR(MAX)),'"', '&quot;') + '" SMCo = "' + REPLACE(CAST(ISNULL(inserted.[SMCo],'') AS VARCHAR(MAX)),'"', '&quot;') + '" />' , 
								ISNULL(inserted.SMCo, '') , 
								'A' , 
								'SMCo' , 
								NULL , 
								[SMCo] , 
								GETDATE() , 
								SUSER_SNAME()
							FROM inserted
								JOIN dbo.vAuditFlagCompany AS afc ON inserted.SMCo = afc.AuditCo 
							WHERE afc.AuditFlagID = 7

-- log additions to the SMRateOverrideEquipID column
							INSERT dbo.bHQMA (	
													TableName, 
													KeyString, 
													Co, 
													RecType, 
													FieldName, 
													OldValue, 
													NewValue, 
													DateTime, 
													UserName)
							
							SELECT 
								'vSMRateOverrideEquipment' , 
								'<KeyString EMCo = "' + REPLACE(CAST(ISNULL(inserted.[EMCo],'') AS VARCHAR(MAX)),'"', '&quot;') + '" EntitySeq = "' + REPLACE(CAST(ISNULL(inserted.[EntitySeq],'') AS VARCHAR(MAX)),'"', '&quot;') + '" Equipment = "' + REPLACE(CAST(ISNULL(inserted.[Equipment],'') AS VARCHAR(MAX)),'"', '&quot;') + '" RevCode = "' + REPLACE(CAST(ISNULL(inserted.[RevCode],'') AS VARCHAR(MAX)),'"', '&quot;') + '" SMCo = "' + REPLACE(CAST(ISNULL(inserted.[SMCo],'') AS VARCHAR(MAX)),'"', '&quot;') + '" />' , 
								ISNULL(inserted.SMCo, '') , 
								'A' , 
								'SMRateOverrideEquipID' , 
								NULL , 
								[SMRateOverrideEquipID] , 
								GETDATE() , 
								SUSER_SNAME()
							FROM inserted
								JOIN dbo.vAuditFlagCompany AS afc ON inserted.SMCo = afc.AuditCo 
							WHERE afc.AuditFlagID = 7


 END TRY 
 BEGIN CATCH 
   DECLARE	@ErrorMessage	NVARCHAR(4000), 
				@ErrorSeverity	INT; 

   SELECT	@ErrorMessage = 'Error '+ ISNULL(ERROR_MESSAGE(),'') +' in [dbo].[dbo.vtvSMRateOverrideEquipment_Audit_Insert] trigger', 
				@ErrorSeverity = ERROR_SEVERITY(); 

   RAISERROR(@ErrorMessage, @ErrorSeverity, 1 ) 
 END CATCH 
GO
EXEC sp_settriggerorder N'[dbo].[vtvSMRateOverrideEquipment_Audit_Insert]', 'last', 'insert', null
GO

SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
CREATE TRIGGER dbo.vtvSMRateOverrideEquipment_Audit_Update ON dbo.vSMRateOverrideEquipment
 AFTER UPDATE 
 NOT FOR REPLICATION AS 
 SET NOCOUNT ON 
 -- generated by vspAuditTriggersCreate

 BEGIN TRY 

							IF UPDATE([EMCo])
							BEGIN
							INSERT dbo.bHQMA (	TableName, 
																	KeyString, 
																	Co, 
																	RecType, 
																	FieldName, 
																	OldValue, 
																	NewValue, 
																	DateTime, 
																	UserName)
								
								SELECT 							'vSMRateOverrideEquipment' , 								'<KeyString EMCo = "' + REPLACE(CAST(ISNULL(inserted.[EMCo],'') AS VARCHAR(MAX)),'"', '&quot;') + '" EntitySeq = "' + REPLACE(CAST(ISNULL(inserted.[EntitySeq],'') AS VARCHAR(MAX)),'"', '&quot;') + '" Equipment = "' + REPLACE(CAST(ISNULL(inserted.[Equipment],'') AS VARCHAR(MAX)),'"', '&quot;') + '" RevCode = "' + REPLACE(CAST(ISNULL(inserted.[RevCode],'') AS VARCHAR(MAX)),'"', '&quot;') + '" SMCo = "' + REPLACE(CAST(ISNULL(inserted.[SMCo],'') AS VARCHAR(MAX)),'"', '&quot;') + '" />' , 								inserted.SMCo , 								'C' , 								'EMCo' , 								CONVERT(VARCHAR(MAX), deleted.[EMCo]) , 								CONVERT(VARCHAR(MAX), inserted.[EMCo]) , 								GETDATE() , 								SUSER_SNAME()
							FROM inserted
								INNER JOIN deleted
									ON  inserted.[SMRateOverrideEquipID] = deleted.[SMRateOverrideEquipID] 
									AND ((inserted.[EMCo] <> deleted.[EMCo]) OR (inserted.[EMCo] IS NULL AND deleted.[EMCo] IS NOT NULL) OR (inserted.[EMCo] IS NOT NULL AND deleted.[EMCo] IS NULL))
								JOIN dbo.vAuditFlagCompany AS afc ON inserted.SMCo = afc.AuditCo 
							WHERE afc.AuditFlagID = 7

							END 

							IF UPDATE([EntitySeq])
							BEGIN
							INSERT dbo.bHQMA (	TableName, 
																	KeyString, 
																	Co, 
																	RecType, 
																	FieldName, 
																	OldValue, 
																	NewValue, 
																	DateTime, 
																	UserName)
								
								SELECT 							'vSMRateOverrideEquipment' , 								'<KeyString EMCo = "' + REPLACE(CAST(ISNULL(inserted.[EMCo],'') AS VARCHAR(MAX)),'"', '&quot;') + '" EntitySeq = "' + REPLACE(CAST(ISNULL(inserted.[EntitySeq],'') AS VARCHAR(MAX)),'"', '&quot;') + '" Equipment = "' + REPLACE(CAST(ISNULL(inserted.[Equipment],'') AS VARCHAR(MAX)),'"', '&quot;') + '" RevCode = "' + REPLACE(CAST(ISNULL(inserted.[RevCode],'') AS VARCHAR(MAX)),'"', '&quot;') + '" SMCo = "' + REPLACE(CAST(ISNULL(inserted.[SMCo],'') AS VARCHAR(MAX)),'"', '&quot;') + '" />' , 								inserted.SMCo , 								'C' , 								'EntitySeq' , 								CONVERT(VARCHAR(MAX), deleted.[EntitySeq]) , 								CONVERT(VARCHAR(MAX), inserted.[EntitySeq]) , 								GETDATE() , 								SUSER_SNAME()
							FROM inserted
								INNER JOIN deleted
									ON  inserted.[SMRateOverrideEquipID] = deleted.[SMRateOverrideEquipID] 
									AND ((inserted.[EntitySeq] <> deleted.[EntitySeq]) OR (inserted.[EntitySeq] IS NULL AND deleted.[EntitySeq] IS NOT NULL) OR (inserted.[EntitySeq] IS NOT NULL AND deleted.[EntitySeq] IS NULL))
								JOIN dbo.vAuditFlagCompany AS afc ON inserted.SMCo = afc.AuditCo 
							WHERE afc.AuditFlagID = 7

							END 

							IF UPDATE([Equipment])
							BEGIN
							INSERT dbo.bHQMA (	TableName, 
																	KeyString, 
																	Co, 
																	RecType, 
																	FieldName, 
																	OldValue, 
																	NewValue, 
																	DateTime, 
																	UserName)
								
								SELECT 							'vSMRateOverrideEquipment' , 								'<KeyString EMCo = "' + REPLACE(CAST(ISNULL(inserted.[EMCo],'') AS VARCHAR(MAX)),'"', '&quot;') + '" EntitySeq = "' + REPLACE(CAST(ISNULL(inserted.[EntitySeq],'') AS VARCHAR(MAX)),'"', '&quot;') + '" Equipment = "' + REPLACE(CAST(ISNULL(inserted.[Equipment],'') AS VARCHAR(MAX)),'"', '&quot;') + '" RevCode = "' + REPLACE(CAST(ISNULL(inserted.[RevCode],'') AS VARCHAR(MAX)),'"', '&quot;') + '" SMCo = "' + REPLACE(CAST(ISNULL(inserted.[SMCo],'') AS VARCHAR(MAX)),'"', '&quot;') + '" />' , 								inserted.SMCo , 								'C' , 								'Equipment' , 								CONVERT(VARCHAR(MAX), deleted.[Equipment]) , 								CONVERT(VARCHAR(MAX), inserted.[Equipment]) , 								GETDATE() , 								SUSER_SNAME()
							FROM inserted
								INNER JOIN deleted
									ON  inserted.[SMRateOverrideEquipID] = deleted.[SMRateOverrideEquipID] 
									AND ((inserted.[Equipment] <> deleted.[Equipment]) OR (inserted.[Equipment] IS NULL AND deleted.[Equipment] IS NOT NULL) OR (inserted.[Equipment] IS NOT NULL AND deleted.[Equipment] IS NULL))
								JOIN dbo.vAuditFlagCompany AS afc ON inserted.SMCo = afc.AuditCo 
							WHERE afc.AuditFlagID = 7

							END 

							IF UPDATE([FlatRateAmount])
							BEGIN
							INSERT dbo.bHQMA (	TableName, 
																	KeyString, 
																	Co, 
																	RecType, 
																	FieldName, 
																	OldValue, 
																	NewValue, 
																	DateTime, 
																	UserName)
								
								SELECT 							'vSMRateOverrideEquipment' , 								'<KeyString EMCo = "' + REPLACE(CAST(ISNULL(inserted.[EMCo],'') AS VARCHAR(MAX)),'"', '&quot;') + '" EntitySeq = "' + REPLACE(CAST(ISNULL(inserted.[EntitySeq],'') AS VARCHAR(MAX)),'"', '&quot;') + '" Equipment = "' + REPLACE(CAST(ISNULL(inserted.[Equipment],'') AS VARCHAR(MAX)),'"', '&quot;') + '" RevCode = "' + REPLACE(CAST(ISNULL(inserted.[RevCode],'') AS VARCHAR(MAX)),'"', '&quot;') + '" SMCo = "' + REPLACE(CAST(ISNULL(inserted.[SMCo],'') AS VARCHAR(MAX)),'"', '&quot;') + '" />' , 								inserted.SMCo , 								'C' , 								'FlatRateAmount' , 								CONVERT(VARCHAR(MAX), deleted.[FlatRateAmount]) , 								CONVERT(VARCHAR(MAX), inserted.[FlatRateAmount]) , 								GETDATE() , 								SUSER_SNAME()
							FROM inserted
								INNER JOIN deleted
									ON  inserted.[SMRateOverrideEquipID] = deleted.[SMRateOverrideEquipID] 
									AND ((inserted.[FlatRateAmount] <> deleted.[FlatRateAmount]) OR (inserted.[FlatRateAmount] IS NULL AND deleted.[FlatRateAmount] IS NOT NULL) OR (inserted.[FlatRateAmount] IS NOT NULL AND deleted.[FlatRateAmount] IS NULL))
								JOIN dbo.vAuditFlagCompany AS afc ON inserted.SMCo = afc.AuditCo 
							WHERE afc.AuditFlagID = 7

							END 

							IF UPDATE([MarkupAmount])
							BEGIN
							INSERT dbo.bHQMA (	TableName, 
																	KeyString, 
																	Co, 
																	RecType, 
																	FieldName, 
																	OldValue, 
																	NewValue, 
																	DateTime, 
																	UserName)
								
								SELECT 							'vSMRateOverrideEquipment' , 								'<KeyString EMCo = "' + REPLACE(CAST(ISNULL(inserted.[EMCo],'') AS VARCHAR(MAX)),'"', '&quot;') + '" EntitySeq = "' + REPLACE(CAST(ISNULL(inserted.[EntitySeq],'') AS VARCHAR(MAX)),'"', '&quot;') + '" Equipment = "' + REPLACE(CAST(ISNULL(inserted.[Equipment],'') AS VARCHAR(MAX)),'"', '&quot;') + '" RevCode = "' + REPLACE(CAST(ISNULL(inserted.[RevCode],'') AS VARCHAR(MAX)),'"', '&quot;') + '" SMCo = "' + REPLACE(CAST(ISNULL(inserted.[SMCo],'') AS VARCHAR(MAX)),'"', '&quot;') + '" />' , 								inserted.SMCo , 								'C' , 								'MarkupAmount' , 								CONVERT(VARCHAR(MAX), deleted.[MarkupAmount]) , 								CONVERT(VARCHAR(MAX), inserted.[MarkupAmount]) , 								GETDATE() , 								SUSER_SNAME()
							FROM inserted
								INNER JOIN deleted
									ON  inserted.[SMRateOverrideEquipID] = deleted.[SMRateOverrideEquipID] 
									AND ((inserted.[MarkupAmount] <> deleted.[MarkupAmount]) OR (inserted.[MarkupAmount] IS NULL AND deleted.[MarkupAmount] IS NOT NULL) OR (inserted.[MarkupAmount] IS NOT NULL AND deleted.[MarkupAmount] IS NULL))
								JOIN dbo.vAuditFlagCompany AS afc ON inserted.SMCo = afc.AuditCo 
							WHERE afc.AuditFlagID = 7

							END 

							IF UPDATE([MarkupOrFlatRate])
							BEGIN
							INSERT dbo.bHQMA (	TableName, 
																	KeyString, 
																	Co, 
																	RecType, 
																	FieldName, 
																	OldValue, 
																	NewValue, 
																	DateTime, 
																	UserName)
								
								SELECT 							'vSMRateOverrideEquipment' , 								'<KeyString EMCo = "' + REPLACE(CAST(ISNULL(inserted.[EMCo],'') AS VARCHAR(MAX)),'"', '&quot;') + '" EntitySeq = "' + REPLACE(CAST(ISNULL(inserted.[EntitySeq],'') AS VARCHAR(MAX)),'"', '&quot;') + '" Equipment = "' + REPLACE(CAST(ISNULL(inserted.[Equipment],'') AS VARCHAR(MAX)),'"', '&quot;') + '" RevCode = "' + REPLACE(CAST(ISNULL(inserted.[RevCode],'') AS VARCHAR(MAX)),'"', '&quot;') + '" SMCo = "' + REPLACE(CAST(ISNULL(inserted.[SMCo],'') AS VARCHAR(MAX)),'"', '&quot;') + '" />' , 								inserted.SMCo , 								'C' , 								'MarkupOrFlatRate' , 								CONVERT(VARCHAR(MAX), deleted.[MarkupOrFlatRate]) , 								CONVERT(VARCHAR(MAX), inserted.[MarkupOrFlatRate]) , 								GETDATE() , 								SUSER_SNAME()
							FROM inserted
								INNER JOIN deleted
									ON  inserted.[SMRateOverrideEquipID] = deleted.[SMRateOverrideEquipID] 
									AND ((inserted.[MarkupOrFlatRate] <> deleted.[MarkupOrFlatRate]) OR (inserted.[MarkupOrFlatRate] IS NULL AND deleted.[MarkupOrFlatRate] IS NOT NULL) OR (inserted.[MarkupOrFlatRate] IS NOT NULL AND deleted.[MarkupOrFlatRate] IS NULL))
								JOIN dbo.vAuditFlagCompany AS afc ON inserted.SMCo = afc.AuditCo 
							WHERE afc.AuditFlagID = 7

							END 

							IF UPDATE([RevCode])
							BEGIN
							INSERT dbo.bHQMA (	TableName, 
																	KeyString, 
																	Co, 
																	RecType, 
																	FieldName, 
																	OldValue, 
																	NewValue, 
																	DateTime, 
																	UserName)
								
								SELECT 							'vSMRateOverrideEquipment' , 								'<KeyString EMCo = "' + REPLACE(CAST(ISNULL(inserted.[EMCo],'') AS VARCHAR(MAX)),'"', '&quot;') + '" EntitySeq = "' + REPLACE(CAST(ISNULL(inserted.[EntitySeq],'') AS VARCHAR(MAX)),'"', '&quot;') + '" Equipment = "' + REPLACE(CAST(ISNULL(inserted.[Equipment],'') AS VARCHAR(MAX)),'"', '&quot;') + '" RevCode = "' + REPLACE(CAST(ISNULL(inserted.[RevCode],'') AS VARCHAR(MAX)),'"', '&quot;') + '" SMCo = "' + REPLACE(CAST(ISNULL(inserted.[SMCo],'') AS VARCHAR(MAX)),'"', '&quot;') + '" />' , 								inserted.SMCo , 								'C' , 								'RevCode' , 								CONVERT(VARCHAR(MAX), deleted.[RevCode]) , 								CONVERT(VARCHAR(MAX), inserted.[RevCode]) , 								GETDATE() , 								SUSER_SNAME()
							FROM inserted
								INNER JOIN deleted
									ON  inserted.[SMRateOverrideEquipID] = deleted.[SMRateOverrideEquipID] 
									AND ((inserted.[RevCode] <> deleted.[RevCode]) OR (inserted.[RevCode] IS NULL AND deleted.[RevCode] IS NOT NULL) OR (inserted.[RevCode] IS NOT NULL AND deleted.[RevCode] IS NULL))
								JOIN dbo.vAuditFlagCompany AS afc ON inserted.SMCo = afc.AuditCo 
							WHERE afc.AuditFlagID = 7

							END 

							IF UPDATE([SMCo])
							BEGIN
							INSERT dbo.bHQMA (	TableName, 
																	KeyString, 
																	Co, 
																	RecType, 
																	FieldName, 
																	OldValue, 
																	NewValue, 
																	DateTime, 
																	UserName)
								
								SELECT 							'vSMRateOverrideEquipment' , 								'<KeyString EMCo = "' + REPLACE(CAST(ISNULL(inserted.[EMCo],'') AS VARCHAR(MAX)),'"', '&quot;') + '" EntitySeq = "' + REPLACE(CAST(ISNULL(inserted.[EntitySeq],'') AS VARCHAR(MAX)),'"', '&quot;') + '" Equipment = "' + REPLACE(CAST(ISNULL(inserted.[Equipment],'') AS VARCHAR(MAX)),'"', '&quot;') + '" RevCode = "' + REPLACE(CAST(ISNULL(inserted.[RevCode],'') AS VARCHAR(MAX)),'"', '&quot;') + '" SMCo = "' + REPLACE(CAST(ISNULL(inserted.[SMCo],'') AS VARCHAR(MAX)),'"', '&quot;') + '" />' , 								inserted.SMCo , 								'C' , 								'SMCo' , 								CONVERT(VARCHAR(MAX), deleted.[SMCo]) , 								CONVERT(VARCHAR(MAX), inserted.[SMCo]) , 								GETDATE() , 								SUSER_SNAME()
							FROM inserted
								INNER JOIN deleted
									ON  inserted.[SMRateOverrideEquipID] = deleted.[SMRateOverrideEquipID] 
									AND ((inserted.[SMCo] <> deleted.[SMCo]) OR (inserted.[SMCo] IS NULL AND deleted.[SMCo] IS NOT NULL) OR (inserted.[SMCo] IS NOT NULL AND deleted.[SMCo] IS NULL))
								JOIN dbo.vAuditFlagCompany AS afc ON inserted.SMCo = afc.AuditCo 
							WHERE afc.AuditFlagID = 7

							END 

							IF UPDATE([SMRateOverrideEquipID])
							BEGIN
							INSERT dbo.bHQMA (	TableName, 
																	KeyString, 
																	Co, 
																	RecType, 
																	FieldName, 
																	OldValue, 
																	NewValue, 
																	DateTime, 
																	UserName)
								
								SELECT 							'vSMRateOverrideEquipment' , 								'<KeyString EMCo = "' + REPLACE(CAST(ISNULL(inserted.[EMCo],'') AS VARCHAR(MAX)),'"', '&quot;') + '" EntitySeq = "' + REPLACE(CAST(ISNULL(inserted.[EntitySeq],'') AS VARCHAR(MAX)),'"', '&quot;') + '" Equipment = "' + REPLACE(CAST(ISNULL(inserted.[Equipment],'') AS VARCHAR(MAX)),'"', '&quot;') + '" RevCode = "' + REPLACE(CAST(ISNULL(inserted.[RevCode],'') AS VARCHAR(MAX)),'"', '&quot;') + '" SMCo = "' + REPLACE(CAST(ISNULL(inserted.[SMCo],'') AS VARCHAR(MAX)),'"', '&quot;') + '" />' , 								inserted.SMCo , 								'C' , 								'SMRateOverrideEquipID' , 								CONVERT(VARCHAR(MAX), deleted.[SMRateOverrideEquipID]) , 								CONVERT(VARCHAR(MAX), inserted.[SMRateOverrideEquipID]) , 								GETDATE() , 								SUSER_SNAME()
							FROM inserted
								INNER JOIN deleted
									ON  inserted.[SMRateOverrideEquipID] = deleted.[SMRateOverrideEquipID] 
									AND ((inserted.[SMRateOverrideEquipID] <> deleted.[SMRateOverrideEquipID]) OR (inserted.[SMRateOverrideEquipID] IS NULL AND deleted.[SMRateOverrideEquipID] IS NOT NULL) OR (inserted.[SMRateOverrideEquipID] IS NOT NULL AND deleted.[SMRateOverrideEquipID] IS NULL))
								JOIN dbo.vAuditFlagCompany AS afc ON inserted.SMCo = afc.AuditCo 
							WHERE afc.AuditFlagID = 7

							END 



 END TRY 
 BEGIN CATCH 
   DECLARE	@ErrorMessage	NVARCHAR(4000), 
				@ErrorSeverity	INT; 

   SELECT	@ErrorMessage = 'Error '+ ISNULL(ERROR_MESSAGE(),'') +' in [dbo].[dbo.vtvSMRateOverrideEquipment_Audit_Update] trigger', 
				@ErrorSeverity = ERROR_SEVERITY(); 

   RAISERROR(@ErrorMessage, @ErrorSeverity, 1 ) 
 END CATCH 
GO
EXEC sp_settriggerorder N'[dbo].[vtvSMRateOverrideEquipment_Audit_Update]', 'last', 'update', null
GO

ALTER TABLE [dbo].[vSMRateOverrideEquipment] ADD
CONSTRAINT [FK_vSMRateOverrideEquipment_bEMEM] FOREIGN KEY ([EMCo], [Equipment]) REFERENCES [dbo].[bEMEM] ([EMCo], [Equipment]) ON UPDATE CASCADE
ALTER TABLE [dbo].[vSMRateOverrideEquipment] ADD
CONSTRAINT [FK_vSMRateOverrideEquipment_vSMEntity] FOREIGN KEY ([SMCo], [EntitySeq]) REFERENCES [dbo].[vSMEntity] ([SMCo], [EntitySeq]) ON DELETE CASCADE
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO

CREATE TRIGGER [dbo].[vtvSMRateOverrideEquipment_AuditSM_Delete] ON [dbo].[vSMRateOverrideEquipment]
 AFTER DELETE
 NOT FOR REPLICATION AS
 SET NOCOUNT ON 

	BEGIN TRY 
		DECLARE @HQMAKeys TABLE
		(
			  AuditID		bigint
			, AuditCo		bCompany
		);
		
		DECLARE @TableName char(30), @AuditFlagID smallint

		SELECT @TableName = 'vSMRateOverrideEquipment'

		SELECT @AuditFlagID = KeyID
		FROM dbo.vAuditFlags
		WHERE FlagName = 'SMRates' AND Module = 'SM'

		DECLARE @RecordsToAudit TABLE (KeyID bigint, AuditCo bCompany)

		INSERT @RecordsToAudit
		SELECT DISTINCT deleted.SMRateOverrideID, vAuditFlagCompany.AuditCo
		FROM deleted
			  LEFT JOIN dbo.vSMRateTemplate ON vSMRateTemplate.SMRateOverrideID = deleted.SMRateOverrideID
			  LEFT JOIN dbo.vSMRateTemplateEffectiveDate ON vSMRateTemplateEffectiveDate.SMRateOverrideID = deleted.SMRateOverrideID
			  LEFT JOIN dbo.vSMCustomer ON vSMCustomer.SMRateOverrideID = deleted.SMRateOverrideID
			  LEFT JOIN dbo.vSMServiceSite ON vSMServiceSite.SMRateOverrideID = deleted.SMRateOverrideID
			  INNER JOIN dbo.vAuditFlagCompany ON vAuditFlagCompany.AuditCo IN (vSMRateTemplate.SMCo, vSMRateTemplateEffectiveDate.SMCo, vSMCustomer.SMCo, vSMServiceSite.SMCo)
		WHERE AuditFlagID = @AuditFlagID
		
		--Audit MarkupOrFlatRate----------------
		INSERT dbo.HQMA (
								TableName, 
								KeyString, 
								Co, 
								RecType, 
								FieldName, 
								OldValue, 
								NewValue, 
								DateTime, 
								UserName)
			OUTPUT inserted.AuditID, inserted.Co INTO @HQMAKeys (AuditID, AuditCo) 
		SELECT @TableName, '<KeyString SMRateOverrideID = "'+ dbo.vfToString(deleted.SMRateOverrideID) + '" EMCo = "' + dbo.vfToString(deleted.EMCo) + '" Equipment = "' + dbo.vfToString(deleted.Equipment) + '" RevCode = "' + dbo.vfToString(deleted.RevCode) + '" />', Audit.AuditCo, 'D', 'MarkupOrFlatRate', dbo.vfToString(deleted.[MarkupOrFlatRate]), NULL, GETDATE(), SUSER_SNAME()
		FROM deleted
			  CROSS APPLY (
					SELECT TOP 1 AuditCo
					FROM @RecordsToAudit
					WHERE KeyID = deleted.SMRateOverrideID) Audit
		----------------------------------------
		
		--Audit MarkupAmount--------------------
		INSERT dbo.HQMA (
								TableName, 
								KeyString, 
								Co, 
								RecType, 
								FieldName, 
								OldValue, 
								NewValue, 
								DateTime, 
								UserName)
			OUTPUT inserted.AuditID, inserted.Co INTO @HQMAKeys (AuditID, AuditCo) 
		SELECT @TableName, '<KeyString SMRateOverrideID = "'+ dbo.vfToString(deleted.SMRateOverrideID) + '" EMCo = "' + dbo.vfToString(deleted.EMCo) + '" Equipment = "' + dbo.vfToString(deleted.Equipment) + '" RevCode = "' + dbo.vfToString(deleted.RevCode) + '" />', Audit.AuditCo, 'D', 'MarkupAmount', dbo.vfToString(deleted.[MarkupAmount]), NULL, GETDATE(), SUSER_SNAME()
		FROM deleted
			  CROSS APPLY (
					SELECT TOP 1 AuditCo
					FROM @RecordsToAudit
					WHERE KeyID = deleted.SMRateOverrideID) Audit
		----------------------------------------
		
		--Audit FlatRateAmount--------------------
		INSERT dbo.HQMA (
								TableName, 
								KeyString, 
								Co, 
								RecType, 
								FieldName, 
								OldValue, 
								NewValue, 
								DateTime, 
								UserName)
			OUTPUT inserted.AuditID, inserted.Co INTO @HQMAKeys (AuditID, AuditCo) 
		SELECT @TableName, '<KeyString SMRateOverrideID = "'+ dbo.vfToString(deleted.SMRateOverrideID) + '" EMCo = "' + dbo.vfToString(deleted.EMCo) + '" Equipment = "' + dbo.vfToString(deleted.Equipment) + '" RevCode = "' + dbo.vfToString(deleted.RevCode) + '" />', Audit.AuditCo, 'D', 'FlatRateAmount', dbo.vfToString(deleted.[FlatRateAmount]), NULL, GETDATE(), SUSER_SNAME()
		FROM deleted
			  CROSS APPLY (
					SELECT TOP 1 AuditCo
					FROM @RecordsToAudit
					WHERE KeyID = deleted.SMRateOverrideID) Audit
		----------------------------------------


		INSERT INTO HQSA ( AuditID, Datatype, Qualifier, Instance, TableName)
		SELECT AuditID, 'bSMCo', AuditCo, dbo.vfToString(AuditCo), @TableName
		FROM @HQMAKeys
		
 END TRY 
 BEGIN CATCH 
   DECLARE	@ErrorMessage	NVARCHAR(4000), 
				@ErrorSeverity	INT; 

   SELECT	@ErrorMessage = 'Error '+ ISNULL(ERROR_MESSAGE(),'') +' in [dbo].[vtvSMRateOverrideEquipment_AuditSM_Delete] trigger', 
				@ErrorSeverity = ERROR_SEVERITY(); 

   RAISERROR(@ErrorMessage, @ErrorSeverity, 1 ) 
 END CATCH 
GO
EXEC sp_settriggerorder N'[dbo].[vtvSMRateOverrideEquipment_AuditSM_Delete]', 'last', 'delete', null
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO

CREATE TRIGGER [dbo].[vtvSMRateOverrideEquipment_AuditSM_Insert] ON [dbo].[vSMRateOverrideEquipment]
 AFTER INSERT
 NOT FOR REPLICATION AS
 SET NOCOUNT ON 

 BEGIN TRY 
		DECLARE @HQMAKeys TABLE
		(
			  AuditID		bigint
			, AuditCo		bCompany
		);
		
		DECLARE @TableName char(30), @AuditFlagID smallint

		SELECT @TableName = 'vSMRateOverrideEquipment'

		SELECT @AuditFlagID = KeyID
		FROM dbo.vAuditFlags
		WHERE FlagName = 'SMRates' AND Module = 'SM'

		DECLARE @RecordsToAudit TABLE (KeyID bigint, AuditCo bCompany)

		INSERT @RecordsToAudit
		SELECT DISTINCT inserted.SMRateOverrideID, vAuditFlagCompany.AuditCo
		FROM inserted
			  LEFT JOIN dbo.vSMRateTemplate ON vSMRateTemplate.SMRateOverrideID = inserted.SMRateOverrideID
			  LEFT JOIN dbo.vSMRateTemplateEffectiveDate ON vSMRateTemplateEffectiveDate.SMRateOverrideID = inserted.SMRateOverrideID
			  LEFT JOIN dbo.vSMCustomer ON vSMCustomer.SMRateOverrideID = inserted.SMRateOverrideID
			  LEFT JOIN dbo.vSMServiceSite ON vSMServiceSite.SMRateOverrideID = inserted.SMRateOverrideID
			  INNER JOIN dbo.vAuditFlagCompany ON vAuditFlagCompany.AuditCo IN (vSMRateTemplate.SMCo, vSMRateTemplateEffectiveDate.SMCo, vSMCustomer.SMCo, vSMServiceSite.SMCo)
		WHERE AuditFlagID = @AuditFlagID
		
		--Audit MarkupOrFlatRate----------------
		INSERT dbo.HQMA (
								TableName, 
								KeyString, 
								Co, 
								RecType, 
								FieldName, 
								OldValue, 
								NewValue, 
								DateTime, 
								UserName)
			OUTPUT inserted.AuditID, inserted.Co INTO @HQMAKeys (AuditID, AuditCo) 
		SELECT @TableName, '<KeyString SMRateOverrideID = "'+ dbo.vfToString(inserted.SMRateOverrideID) + '" EMCo = "' + dbo.vfToString(inserted.EMCo) + '" Equipment = "' + dbo.vfToString(inserted.Equipment) + '" RevCode = "' + dbo.vfToString(inserted.RevCode) + '" />', Audit.AuditCo, 'A', 'MarkupOrFlatRate', NULL, dbo.vfToString(inserted.[MarkupOrFlatRate]), GETDATE(), SUSER_SNAME()
		FROM inserted
			CROSS APPLY (
				SELECT TOP 1 AuditCo
				FROM @RecordsToAudit
				WHERE KeyID = inserted.SMRateOverrideID) Audit
		----------------------------------------
		
		--Audit MarkupAmount--------------------
		INSERT dbo.HQMA (
								TableName, 
								KeyString, 
								Co, 
								RecType, 
								FieldName, 
								OldValue, 
								NewValue, 
								DateTime, 
								UserName)
			OUTPUT inserted.AuditID, inserted.Co INTO @HQMAKeys (AuditID, AuditCo) 
		SELECT @TableName, '<KeyString SMRateOverrideID = "'+ dbo.vfToString(inserted.SMRateOverrideID) + '" EMCo = "' + dbo.vfToString(inserted.EMCo) + '" Equipment = "' + dbo.vfToString(inserted.Equipment) + '" RevCode = "' + dbo.vfToString(inserted.RevCode) + '" />', Audit.AuditCo, 'A', 'MarkupAmount', NULL, dbo.vfToString(inserted.[MarkupAmount]), GETDATE(), SUSER_SNAME()
		FROM inserted
			CROSS APPLY (
				SELECT TOP 1 AuditCo
				FROM @RecordsToAudit
				WHERE KeyID = inserted.SMRateOverrideID) Audit
		----------------------------------------
		
		--Audit FlatRateAmount------------------
		INSERT dbo.HQMA (
								TableName, 
								KeyString, 
								Co, 
								RecType, 
								FieldName, 
								OldValue, 
								NewValue, 
								DateTime, 
								UserName)
			OUTPUT inserted.AuditID, inserted.Co INTO @HQMAKeys (AuditID, AuditCo) 
		SELECT @TableName, '<KeyString SMRateOverrideID = "'+ dbo.vfToString(inserted.SMRateOverrideID) + '" EMCo = "' + dbo.vfToString(inserted.EMCo) + '" Equipment = "' + dbo.vfToString(inserted.Equipment) + '" RevCode = "' + dbo.vfToString(inserted.RevCode) + '" />', Audit.AuditCo, 'A', 'FlatRateAmount', NULL, dbo.vfToString(inserted.[FlatRateAmount]), GETDATE(), SUSER_SNAME()
		FROM inserted
			CROSS APPLY (
				SELECT TOP 1 AuditCo
				FROM @RecordsToAudit
				WHERE KeyID = inserted.SMRateOverrideID) Audit
		----------------------------------------
		
		
		INSERT INTO HQSA ( AuditID, Datatype, Qualifier, Instance, TableName)
		SELECT AuditID, 'bSMCo', AuditCo, dbo.vfToString(AuditCo), @TableName
		FROM @HQMAKeys

 END TRY 
 BEGIN CATCH 
   DECLARE	@ErrorMessage	NVARCHAR(4000), 
				@ErrorSeverity	INT; 

   SELECT	@ErrorMessage = 'Error '+ ISNULL(ERROR_MESSAGE(),'') +' in [dbo].[vtvSMRateOverrideEquipment_AuditSM_Insert] trigger', 
				@ErrorSeverity = ERROR_SEVERITY(); 

   RAISERROR(@ErrorMessage, @ErrorSeverity, 1 ) 
 END CATCH 
GO
EXEC sp_settriggerorder N'[dbo].[vtvSMRateOverrideEquipment_AuditSM_Insert]', 'last', 'insert', null
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO

CREATE TRIGGER [dbo].[vtvSMRateOverrideEquipment_AuditSM_Update] ON [dbo].[vSMRateOverrideEquipment]
 AFTER UPDATE
 NOT FOR REPLICATION AS
 SET NOCOUNT ON 

 BEGIN TRY 
		DECLARE @HQMAKeys TABLE
		(
			  AuditID		bigint
			, AuditCo		bCompany
		);
		
		DECLARE @TableName char(30), @AuditFlagID smallint

		SELECT @TableName = 'vSMRateOverrideEquipment'

		SELECT @AuditFlagID = KeyID
		FROM dbo.vAuditFlags
		WHERE FlagName = 'SMRates' AND Module = 'SM'

		DECLARE @RecordsToAudit TABLE (KeyID bigint, AuditCo bCompany)

		INSERT @RecordsToAudit
		SELECT DISTINCT inserted.SMRateOverrideID, vAuditFlagCompany.AuditCo
		FROM inserted
			  LEFT JOIN dbo.vSMRateTemplate ON vSMRateTemplate.SMRateOverrideID = inserted.SMRateOverrideID
			  LEFT JOIN dbo.vSMRateTemplateEffectiveDate ON vSMRateTemplateEffectiveDate.SMRateOverrideID = inserted.SMRateOverrideID
			  LEFT JOIN dbo.vSMCustomer ON vSMCustomer.SMRateOverrideID = inserted.SMRateOverrideID
			  LEFT JOIN dbo.vSMServiceSite ON vSMServiceSite.SMRateOverrideID = inserted.SMRateOverrideID
			  INNER JOIN dbo.vAuditFlagCompany ON vAuditFlagCompany.AuditCo IN (vSMRateTemplate.SMCo, vSMRateTemplateEffectiveDate.SMCo, vSMCustomer.SMCo, vSMServiceSite.SMCo)
		WHERE AuditFlagID = @AuditFlagID

		--Audit MarkupOrFlatRate----------------
		INSERT dbo.HQMA (
								TableName, 
								KeyString, 
								Co, 
								RecType, 
								FieldName, 
								OldValue, 
								NewValue, 
								DateTime, 
								UserName)
			OUTPUT inserted.AuditID, inserted.Co INTO @HQMAKeys (AuditID, AuditCo) 
		SELECT @TableName, '<KeyString SMRateOverrideID = "'+ dbo.vfToString(inserted.SMRateOverrideID) + '" EMCo = "' + dbo.vfToString(inserted.EMCo) + '" Equipment = "' + dbo.vfToString(inserted.Equipment) + '" RevCode = "' + dbo.vfToString(inserted.RevCode) + '" />', Audit.AuditCo, 'C', 'MarkupOrFlatRate', dbo.vfToString(deleted.[MarkupOrFlatRate]), dbo.vfToString(inserted.[MarkupOrFlatRate]), GETDATE(), SUSER_SNAME()
		FROM inserted
			JOIN deleted ON inserted.SMRateOverrideEquipID = deleted.SMRateOverrideEquipID
				AND dbo.vfIsEqual(inserted.MarkupOrFlatRate, deleted.MarkupOrFlatRate) = 0
			CROSS APPLY (
				SELECT TOP 1 AuditCo
				FROM @RecordsToAudit
				WHERE KeyID = inserted.SMRateOverrideID) Audit
		----------------------------------------
		
		--Audit MarkupAmount--------------------
		INSERT dbo.HQMA (
								TableName, 
								KeyString, 
								Co, 
								RecType, 
								FieldName, 
								OldValue, 
								NewValue, 
								DateTime, 
								UserName)
			OUTPUT inserted.AuditID, inserted.Co INTO @HQMAKeys (AuditID, AuditCo) 
		SELECT @TableName, '<KeyString SMRateOverrideID = "'+ dbo.vfToString(inserted.SMRateOverrideID) + '" EMCo = "' + dbo.vfToString(inserted.EMCo) + '" Equipment = "' + dbo.vfToString(inserted.Equipment) + '" RevCode = "' + dbo.vfToString(inserted.RevCode) + '" />', Audit.AuditCo, 'C', 'MarkupAmount', dbo.vfToString(deleted.[MarkupAmount]), dbo.vfToString(inserted.[MarkupAmount]), GETDATE(), SUSER_SNAME()
		FROM inserted
			JOIN deleted ON inserted.SMRateOverrideEquipID = deleted.SMRateOverrideEquipID
				AND dbo.vfIsEqual(inserted.MarkupAmount, deleted.MarkupAmount) = 0
			CROSS APPLY (
				SELECT TOP 1 AuditCo
				FROM @RecordsToAudit
				WHERE KeyID = inserted.SMRateOverrideID) Audit
		----------------------------------------
		
		--Audit FlatRateAmount------------------
		INSERT dbo.HQMA (
								TableName, 
								KeyString, 
								Co, 
								RecType, 
								FieldName, 
								OldValue, 
								NewValue, 
								DateTime, 
								UserName)
			OUTPUT inserted.AuditID, inserted.Co INTO @HQMAKeys (AuditID, AuditCo) 
		SELECT @TableName, '<KeyString SMRateOverrideID = "'+ dbo.vfToString(inserted.SMRateOverrideID) + '" EMCo = "' + dbo.vfToString(inserted.EMCo) + '" Equipment = "' + dbo.vfToString(inserted.Equipment) + '" RevCode = "' + dbo.vfToString(inserted.RevCode) + '" />', Audit.AuditCo, 'C', 'FlatRateAmount', dbo.vfToString(deleted.[FlatRateAmount]), dbo.vfToString(inserted.[FlatRateAmount]), GETDATE(), SUSER_SNAME()
		FROM inserted
			JOIN deleted ON inserted.SMRateOverrideEquipID = deleted.SMRateOverrideEquipID
				AND dbo.vfIsEqual(inserted.FlatRateAmount, deleted.FlatRateAmount) = 0
			CROSS APPLY (
				SELECT TOP 1 AuditCo
				FROM @RecordsToAudit
				WHERE KeyID = inserted.SMRateOverrideID) Audit
		----------------------------------------
		

		INSERT INTO HQSA ( AuditID, Datatype, Qualifier, Instance, TableName)
		SELECT AuditID, 'bSMCo', AuditCo, dbo.vfToString(AuditCo), @TableName
		FROM @HQMAKeys

 END TRY 
 BEGIN CATCH 
   DECLARE	@ErrorMessage	NVARCHAR(4000), 
				@ErrorSeverity	INT; 

   SELECT	@ErrorMessage = 'Error '+ ISNULL(ERROR_MESSAGE(),'') +' in [dbo].[vtvSMRateOverrideEquipment_AuditSM_Update] trigger', 
				@ErrorSeverity = ERROR_SEVERITY(); 

   RAISERROR(@ErrorMessage, @ErrorSeverity, 1 ) 
 END CATCH 
GO
EXEC sp_settriggerorder N'[dbo].[vtvSMRateOverrideEquipment_AuditSM_Update]', 'last', 'update', null
GO
