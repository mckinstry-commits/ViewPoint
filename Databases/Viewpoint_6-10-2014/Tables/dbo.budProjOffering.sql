CREATE TABLE [dbo].[budProjOffering]
(
[Co] [dbo].[bCompany] NOT NULL,
[Amount] [dbo].[bDollar] NULL,
[Offering] [dbo].[bDesc] NOT NULL,
[ProjHours] [dbo].[bHrs] NULL,
[ProjStart] [dbo].[bDate] NULL,
[Project] [dbo].[bProject] NOT NULL,
[Taxable] [dbo].[bYN] NOT NULL CONSTRAINT [DF_udProjOffering_Taxable] DEFAULT ('N'),
[Notes] [varchar] (max) COLLATE Latin1_General_BIN NULL,
[UniqueAttchID] [uniqueidentifier] NULL,
[KeyID] [bigint] NOT NULL IDENTITY(1, 1),
[SelfPerfYN] [dbo].[bYN] NOT NULL CONSTRAINT [DF_udProjOffering_SelfPerfYN] DEFAULT ('N'),
[SubcontractYN] [dbo].[bYN] NOT NULL CONSTRAINT [DF_udProjOffering_SubcontractYN] DEFAULT ('N')
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
CREATE TRIGGER dbo.vtbudProjOffering_Audit_Delete ON dbo.budProjOffering
 AFTER DELETE
 NOT FOR REPLICATION AS
 SET NOCOUNT ON 
 -- generated by vspHQCreateAuditTriggers on May 30 2014 10:13AM

 BEGIN TRY 

   INSERT dbo.HQMA (TableName, KeyString, Co, RecType, FieldName, OldValue, NewValue, DateTime, UserName)

   SELECT 'budProjOffering' , '<KeyString Project = "' + REPLACE(CAST(deleted.[Project] AS VARCHAR(MAX)),'"', '&quot;') + '" Scope = "' + REPLACE(CAST(deleted.[Offering] AS VARCHAR(MAX)),'"', '&quot;') + '" />' , deleted.Co , 'D' , NULL , NULL , NULL , GETDATE() , SUSER_SNAME()
	FROM deleted

 END TRY 
 BEGIN CATCH 
   DECLARE	@ErrorMessage	NVARCHAR(4000), 
				@ErrorSeverity	INT; 

   SELECT	@ErrorMessage = 'Error '+ ISNULL(ERROR_MESSAGE(),'') +' in [dbo].[dbo.vtbudProjOffering_Audit_Delete] trigger', 
				@ErrorSeverity = ERROR_SEVERITY(); 

   RAISERROR(@ErrorMessage, @ErrorSeverity, 1 ) 
 END CATCH 
GO
EXEC sp_settriggerorder N'[dbo].[vtbudProjOffering_Audit_Delete]', 'last', 'delete', null
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
CREATE TRIGGER dbo.vtbudProjOffering_Audit_Insert ON dbo.budProjOffering
 AFTER INSERT
 NOT FOR REPLICATION AS
 SET NOCOUNT ON 
 -- generated by vspHQCreateAuditTriggers on May 30 2014 10:13AM

 BEGIN TRY 

   INSERT dbo.HQMA (TableName, KeyString, Co, RecType, FieldName, OldValue, NewValue, DateTime, UserName)

   SELECT 'budProjOffering' , '<KeyString Project = "' + REPLACE(CAST(inserted.[Project] AS VARCHAR(MAX)),'"', '&quot;') + '" Scope = "' + REPLACE(CAST(inserted.[Offering] AS VARCHAR(MAX)),'"', '&quot;') + '" />' , ISNULL(inserted.Co, '') , 'A' , NULL , NULL , NULL , GETDATE() , SUSER_SNAME()
	FROM inserted

 END TRY 
 BEGIN CATCH 
   DECLARE	@ErrorMessage	NVARCHAR(4000), 
				@ErrorSeverity	INT; 

   SELECT	@ErrorMessage = 'Error '+ ISNULL(ERROR_MESSAGE(),'') +' in [dbo].[dbo.vtbudProjOffering_Audit_Insert] trigger', 
				@ErrorSeverity = ERROR_SEVERITY(); 

   RAISERROR(@ErrorMessage, @ErrorSeverity, 1 ) 
 END CATCH 
GO
EXEC sp_settriggerorder N'[dbo].[vtbudProjOffering_Audit_Insert]', 'last', 'insert', null
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
CREATE TRIGGER dbo.vtbudProjOffering_Audit_Update ON dbo.budProjOffering
 AFTER UPDATE 
 NOT FOR REPLICATION AS 
 SET NOCOUNT ON 
 -- generated by vspHQCreateAuditTriggers on May 30 2014 10:13AM

 BEGIN TRY 

 IF UPDATE([Co])
 BEGIN   INSERT dbo.HQMA (TableName, KeyString, Co, RecType, FieldName, OldValue, NewValue, DateTime, UserName)

   SELECT 'budProjOffering' , '<KeyString Project = "' + REPLACE(CAST(inserted.[Project] AS VARCHAR(MAX)),'"', '&quot;') + '" Scope = "' + REPLACE(CAST(inserted.[Offering] AS VARCHAR(MAX)),'"', '&quot;') + '" />' , inserted.Co , 'C' , '[Co]' ,  CONVERT(VARCHAR(MAX), deleted.[Co]) ,  CONVERT(VARCHAR(MAX), inserted.[Co]) , GETDATE() , SUSER_SNAME()
		FROM inserted
			INNER JOIN deleted
         ON  inserted.[KeyID] = deleted.[KeyID] 
         AND ((inserted.[Co] <> deleted.[Co]) OR (inserted.[Co] IS NULL AND deleted.[Co] IS NOT NULL) OR (inserted.[Co] IS NOT NULL AND deleted.[Co] IS NULL))



 END 

 IF UPDATE([Amount])
 BEGIN   INSERT dbo.HQMA (TableName, KeyString, Co, RecType, FieldName, OldValue, NewValue, DateTime, UserName)

   SELECT 'budProjOffering' , '<KeyString Project = "' + REPLACE(CAST(inserted.[Project] AS VARCHAR(MAX)),'"', '&quot;') + '" Scope = "' + REPLACE(CAST(inserted.[Offering] AS VARCHAR(MAX)),'"', '&quot;') + '" />' , inserted.Co , 'C' , '[Amount]' ,  CONVERT(VARCHAR(MAX), deleted.[Amount]) ,  CONVERT(VARCHAR(MAX), inserted.[Amount]) , GETDATE() , SUSER_SNAME()
		FROM inserted
			INNER JOIN deleted
         ON  inserted.[KeyID] = deleted.[KeyID] 
         AND ((inserted.[Amount] <> deleted.[Amount]) OR (inserted.[Amount] IS NULL AND deleted.[Amount] IS NOT NULL) OR (inserted.[Amount] IS NOT NULL AND deleted.[Amount] IS NULL))



 END 

 IF UPDATE([Offering])
 BEGIN   INSERT dbo.HQMA (TableName, KeyString, Co, RecType, FieldName, OldValue, NewValue, DateTime, UserName)

   SELECT 'budProjOffering' , '<KeyString Project = "' + REPLACE(CAST(inserted.[Project] AS VARCHAR(MAX)),'"', '&quot;') + '" Scope = "' + REPLACE(CAST(inserted.[Offering] AS VARCHAR(MAX)),'"', '&quot;') + '" />' , inserted.Co , 'C' , '[Offering]' ,  CONVERT(VARCHAR(MAX), deleted.[Offering]) ,  CONVERT(VARCHAR(MAX), inserted.[Offering]) , GETDATE() , SUSER_SNAME()
		FROM inserted
			INNER JOIN deleted
         ON  inserted.[KeyID] = deleted.[KeyID] 
         AND ((inserted.[Offering] <> deleted.[Offering]) OR (inserted.[Offering] IS NULL AND deleted.[Offering] IS NOT NULL) OR (inserted.[Offering] IS NOT NULL AND deleted.[Offering] IS NULL))



 END 

 IF UPDATE([ProjHours])
 BEGIN   INSERT dbo.HQMA (TableName, KeyString, Co, RecType, FieldName, OldValue, NewValue, DateTime, UserName)

   SELECT 'budProjOffering' , '<KeyString Project = "' + REPLACE(CAST(inserted.[Project] AS VARCHAR(MAX)),'"', '&quot;') + '" Scope = "' + REPLACE(CAST(inserted.[Offering] AS VARCHAR(MAX)),'"', '&quot;') + '" />' , inserted.Co , 'C' , '[ProjHours]' ,  CONVERT(VARCHAR(MAX), deleted.[ProjHours]) ,  CONVERT(VARCHAR(MAX), inserted.[ProjHours]) , GETDATE() , SUSER_SNAME()
		FROM inserted
			INNER JOIN deleted
         ON  inserted.[KeyID] = deleted.[KeyID] 
         AND ((inserted.[ProjHours] <> deleted.[ProjHours]) OR (inserted.[ProjHours] IS NULL AND deleted.[ProjHours] IS NOT NULL) OR (inserted.[ProjHours] IS NOT NULL AND deleted.[ProjHours] IS NULL))



 END 

 IF UPDATE([ProjStart])
 BEGIN   INSERT dbo.HQMA (TableName, KeyString, Co, RecType, FieldName, OldValue, NewValue, DateTime, UserName)

   SELECT 'budProjOffering' , '<KeyString Project = "' + REPLACE(CAST(inserted.[Project] AS VARCHAR(MAX)),'"', '&quot;') + '" Scope = "' + REPLACE(CAST(inserted.[Offering] AS VARCHAR(MAX)),'"', '&quot;') + '" />' , inserted.Co , 'C' , '[ProjStart]' ,  CONVERT(VARCHAR(MAX), deleted.[ProjStart]) ,  CONVERT(VARCHAR(MAX), inserted.[ProjStart]) , GETDATE() , SUSER_SNAME()
		FROM inserted
			INNER JOIN deleted
         ON  inserted.[KeyID] = deleted.[KeyID] 
         AND ((inserted.[ProjStart] <> deleted.[ProjStart]) OR (inserted.[ProjStart] IS NULL AND deleted.[ProjStart] IS NOT NULL) OR (inserted.[ProjStart] IS NOT NULL AND deleted.[ProjStart] IS NULL))



 END 

 IF UPDATE([Project])
 BEGIN   INSERT dbo.HQMA (TableName, KeyString, Co, RecType, FieldName, OldValue, NewValue, DateTime, UserName)

   SELECT 'budProjOffering' , '<KeyString Project = "' + REPLACE(CAST(inserted.[Project] AS VARCHAR(MAX)),'"', '&quot;') + '" Scope = "' + REPLACE(CAST(inserted.[Offering] AS VARCHAR(MAX)),'"', '&quot;') + '" />' , inserted.Co , 'C' , '[Project]' ,  CONVERT(VARCHAR(MAX), deleted.[Project]) ,  CONVERT(VARCHAR(MAX), inserted.[Project]) , GETDATE() , SUSER_SNAME()
		FROM inserted
			INNER JOIN deleted
         ON  inserted.[KeyID] = deleted.[KeyID] 
         AND ((inserted.[Project] <> deleted.[Project]) OR (inserted.[Project] IS NULL AND deleted.[Project] IS NOT NULL) OR (inserted.[Project] IS NOT NULL AND deleted.[Project] IS NULL))



 END 

 IF UPDATE([Taxable])
 BEGIN   INSERT dbo.HQMA (TableName, KeyString, Co, RecType, FieldName, OldValue, NewValue, DateTime, UserName)

   SELECT 'budProjOffering' , '<KeyString Project = "' + REPLACE(CAST(inserted.[Project] AS VARCHAR(MAX)),'"', '&quot;') + '" Scope = "' + REPLACE(CAST(inserted.[Offering] AS VARCHAR(MAX)),'"', '&quot;') + '" />' , inserted.Co , 'C' , '[Taxable]' ,  CONVERT(VARCHAR(MAX), deleted.[Taxable]) ,  CONVERT(VARCHAR(MAX), inserted.[Taxable]) , GETDATE() , SUSER_SNAME()
		FROM inserted
			INNER JOIN deleted
         ON  inserted.[KeyID] = deleted.[KeyID] 
         AND ((inserted.[Taxable] <> deleted.[Taxable]) OR (inserted.[Taxable] IS NULL AND deleted.[Taxable] IS NOT NULL) OR (inserted.[Taxable] IS NOT NULL AND deleted.[Taxable] IS NULL))



 END 

 IF UPDATE([Notes])
 BEGIN   INSERT dbo.HQMA (TableName, KeyString, Co, RecType, FieldName, OldValue, NewValue, DateTime, UserName)

   SELECT 'budProjOffering' , '<KeyString Project = "' + REPLACE(CAST(inserted.[Project] AS VARCHAR(MAX)),'"', '&quot;') + '" Scope = "' + REPLACE(CAST(inserted.[Offering] AS VARCHAR(MAX)),'"', '&quot;') + '" />' , inserted.Co , 'C' , '[Notes]' ,  CONVERT(VARCHAR(MAX), deleted.[Notes]) ,  CONVERT(VARCHAR(MAX), inserted.[Notes]) , GETDATE() , SUSER_SNAME()
		FROM inserted
			INNER JOIN deleted
         ON  inserted.[KeyID] = deleted.[KeyID] 
         AND ((inserted.[Notes] <> deleted.[Notes]) OR (inserted.[Notes] IS NULL AND deleted.[Notes] IS NOT NULL) OR (inserted.[Notes] IS NOT NULL AND deleted.[Notes] IS NULL))



 END 

 IF UPDATE([UniqueAttchID])
 BEGIN   INSERT dbo.HQMA (TableName, KeyString, Co, RecType, FieldName, OldValue, NewValue, DateTime, UserName)

   SELECT 'budProjOffering' , '<KeyString Project = "' + REPLACE(CAST(inserted.[Project] AS VARCHAR(MAX)),'"', '&quot;') + '" Scope = "' + REPLACE(CAST(inserted.[Offering] AS VARCHAR(MAX)),'"', '&quot;') + '" />' , inserted.Co , 'C' , '[UniqueAttchID]' ,  CONVERT(VARCHAR(MAX), deleted.[UniqueAttchID]) ,  CONVERT(VARCHAR(MAX), inserted.[UniqueAttchID]) , GETDATE() , SUSER_SNAME()
		FROM inserted
			INNER JOIN deleted
         ON  inserted.[KeyID] = deleted.[KeyID] 
         AND ((inserted.[UniqueAttchID] <> deleted.[UniqueAttchID]) OR (inserted.[UniqueAttchID] IS NULL AND deleted.[UniqueAttchID] IS NOT NULL) OR (inserted.[UniqueAttchID] IS NOT NULL AND deleted.[UniqueAttchID] IS NULL))



 END 

 IF UPDATE([SelfPerfYN])
 BEGIN   INSERT dbo.HQMA (TableName, KeyString, Co, RecType, FieldName, OldValue, NewValue, DateTime, UserName)

   SELECT 'budProjOffering' , '<KeyString Project = "' + REPLACE(CAST(inserted.[Project] AS VARCHAR(MAX)),'"', '&quot;') + '" Scope = "' + REPLACE(CAST(inserted.[Offering] AS VARCHAR(MAX)),'"', '&quot;') + '" />' , inserted.Co , 'C' , '[SelfPerfYN]' ,  CONVERT(VARCHAR(MAX), deleted.[SelfPerfYN]) ,  CONVERT(VARCHAR(MAX), inserted.[SelfPerfYN]) , GETDATE() , SUSER_SNAME()
		FROM inserted
			INNER JOIN deleted
         ON  inserted.[KeyID] = deleted.[KeyID] 
         AND ((inserted.[SelfPerfYN] <> deleted.[SelfPerfYN]) OR (inserted.[SelfPerfYN] IS NULL AND deleted.[SelfPerfYN] IS NOT NULL) OR (inserted.[SelfPerfYN] IS NOT NULL AND deleted.[SelfPerfYN] IS NULL))



 END 

 IF UPDATE([SubcontractYN])
 BEGIN   INSERT dbo.HQMA (TableName, KeyString, Co, RecType, FieldName, OldValue, NewValue, DateTime, UserName)

   SELECT 'budProjOffering' , '<KeyString Project = "' + REPLACE(CAST(inserted.[Project] AS VARCHAR(MAX)),'"', '&quot;') + '" Scope = "' + REPLACE(CAST(inserted.[Offering] AS VARCHAR(MAX)),'"', '&quot;') + '" />' , inserted.Co , 'C' , '[SubcontractYN]' ,  CONVERT(VARCHAR(MAX), deleted.[SubcontractYN]) ,  CONVERT(VARCHAR(MAX), inserted.[SubcontractYN]) , GETDATE() , SUSER_SNAME()
		FROM inserted
			INNER JOIN deleted
         ON  inserted.[KeyID] = deleted.[KeyID] 
         AND ((inserted.[SubcontractYN] <> deleted.[SubcontractYN]) OR (inserted.[SubcontractYN] IS NULL AND deleted.[SubcontractYN] IS NOT NULL) OR (inserted.[SubcontractYN] IS NOT NULL AND deleted.[SubcontractYN] IS NULL))



 END 

 END TRY 
 BEGIN CATCH 
   DECLARE	@ErrorMessage	NVARCHAR(4000), 
				@ErrorSeverity	INT; 

   SELECT	@ErrorMessage = 'Error '+ ISNULL(ERROR_MESSAGE(),'') +' in [dbo].[dbo.vtbudProjOffering_Audit_Update] trigger', 
				@ErrorSeverity = ERROR_SEVERITY(); 

   RAISERROR(@ErrorMessage, @ErrorSeverity, 1 ) 
 END CATCH 
GO
EXEC sp_settriggerorder N'[dbo].[vtbudProjOffering_Audit_Update]', 'last', 'update', null
GO
CREATE UNIQUE CLUSTERED INDEX [biudProjOffering] ON [dbo].[budProjOffering] ([Co], [Project], [Offering]) ON [PRIMARY]
GO
