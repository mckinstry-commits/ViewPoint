CREATE TABLE [dbo].[budEquipmentUpfitting]
(
[Co] [dbo].[bCompany] NOT NULL,
[Equipment] [dbo].[bEquip] NOT NULL,
[UpfitPart] [dbo].[bDesc] NOT NULL,
[UserNotes] [varchar] (8000) COLLATE Latin1_General_BIN NULL,
[UniqueAttchID] [uniqueidentifier] NULL,
[KeyID] [bigint] NOT NULL IDENTITY(1, 1)
) ON [PRIMARY]
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
CREATE TRIGGER dbo.vtbudEquipmentUpfitting_Audit_Delete ON dbo.budEquipmentUpfitting
 AFTER DELETE
 NOT FOR REPLICATION AS
 SET NOCOUNT ON 
 -- generated by vspHQCreateAuditTriggers on Jan 16 2014  1:01PM

 BEGIN TRY 

   INSERT dbo.HQMA (TableName, KeyString, Co, RecType, FieldName, OldValue, NewValue, DateTime, UserName)

   SELECT 'budEquipmentUpfitting' , '<KeyString Equipment = "' + REPLACE(CAST(deleted.[Equipment] AS VARCHAR(MAX)),'"', '&quot;') + '" Upfitting Part = "' + REPLACE(CAST(deleted.[UpfitPart] AS VARCHAR(MAX)),'"', '&quot;') + '" />' , deleted.Co , 'D' , NULL , NULL , NULL , GETDATE() , SUSER_SNAME()
	FROM deleted

 END TRY 
 BEGIN CATCH 
   DECLARE	@ErrorMessage	NVARCHAR(4000), 
				@ErrorSeverity	INT; 

   SELECT	@ErrorMessage = 'Error '+ ISNULL(ERROR_MESSAGE(),'') +' in [dbo].[dbo.vtbudEquipmentUpfitting_Audit_Delete] trigger', 
				@ErrorSeverity = ERROR_SEVERITY(); 

   RAISERROR(@ErrorMessage, @ErrorSeverity, 1 ) 
 END CATCH 
GO
EXEC sp_settriggerorder N'[dbo].[vtbudEquipmentUpfitting_Audit_Delete]', 'last', 'delete', null
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
CREATE TRIGGER dbo.vtbudEquipmentUpfitting_Audit_Insert ON dbo.budEquipmentUpfitting
 AFTER INSERT
 NOT FOR REPLICATION AS
 SET NOCOUNT ON 
 -- generated by vspHQCreateAuditTriggers on Jan 16 2014  1:01PM

 BEGIN TRY 

   INSERT dbo.HQMA (TableName, KeyString, Co, RecType, FieldName, OldValue, NewValue, DateTime, UserName)

   SELECT 'budEquipmentUpfitting' , '<KeyString Equipment = "' + REPLACE(CAST(inserted.[Equipment] AS VARCHAR(MAX)),'"', '&quot;') + '" Upfitting Part = "' + REPLACE(CAST(inserted.[UpfitPart] AS VARCHAR(MAX)),'"', '&quot;') + '" />' , ISNULL(inserted.Co, '') , 'A' , NULL , NULL , NULL , GETDATE() , SUSER_SNAME()
	FROM inserted

 END TRY 
 BEGIN CATCH 
   DECLARE	@ErrorMessage	NVARCHAR(4000), 
				@ErrorSeverity	INT; 

   SELECT	@ErrorMessage = 'Error '+ ISNULL(ERROR_MESSAGE(),'') +' in [dbo].[dbo.vtbudEquipmentUpfitting_Audit_Insert] trigger', 
				@ErrorSeverity = ERROR_SEVERITY(); 

   RAISERROR(@ErrorMessage, @ErrorSeverity, 1 ) 
 END CATCH 
GO
EXEC sp_settriggerorder N'[dbo].[vtbudEquipmentUpfitting_Audit_Insert]', 'last', 'insert', null
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
CREATE TRIGGER dbo.vtbudEquipmentUpfitting_Audit_Update ON dbo.budEquipmentUpfitting
 AFTER UPDATE 
 NOT FOR REPLICATION AS 
 SET NOCOUNT ON 
 -- generated by vspHQCreateAuditTriggers on Jan 16 2014  1:01PM

 BEGIN TRY 

 IF UPDATE([Co])
 BEGIN   INSERT dbo.HQMA (TableName, KeyString, Co, RecType, FieldName, OldValue, NewValue, DateTime, UserName)

   SELECT 'budEquipmentUpfitting' , '<KeyString Equipment = "' + REPLACE(CAST(inserted.[Equipment] AS VARCHAR(MAX)),'"', '&quot;') + '" Upfitting Part = "' + REPLACE(CAST(inserted.[UpfitPart] AS VARCHAR(MAX)),'"', '&quot;') + '" />' , inserted.Co , 'C' , '[Co]' ,  CONVERT(VARCHAR(MAX), deleted.[Co]) ,  CONVERT(VARCHAR(MAX), inserted.[Co]) , GETDATE() , SUSER_SNAME()
		FROM inserted
			INNER JOIN deleted
         ON  inserted.[KeyID] = deleted.[KeyID] 
         AND ((inserted.[Co] <> deleted.[Co]) OR (inserted.[Co] IS NULL AND deleted.[Co] IS NOT NULL) OR (inserted.[Co] IS NOT NULL AND deleted.[Co] IS NULL))



 END 

 IF UPDATE([Equipment])
 BEGIN   INSERT dbo.HQMA (TableName, KeyString, Co, RecType, FieldName, OldValue, NewValue, DateTime, UserName)

   SELECT 'budEquipmentUpfitting' , '<KeyString Equipment = "' + REPLACE(CAST(inserted.[Equipment] AS VARCHAR(MAX)),'"', '&quot;') + '" Upfitting Part = "' + REPLACE(CAST(inserted.[UpfitPart] AS VARCHAR(MAX)),'"', '&quot;') + '" />' , inserted.Co , 'C' , '[Equipment]' ,  CONVERT(VARCHAR(MAX), deleted.[Equipment]) ,  CONVERT(VARCHAR(MAX), inserted.[Equipment]) , GETDATE() , SUSER_SNAME()
		FROM inserted
			INNER JOIN deleted
         ON  inserted.[KeyID] = deleted.[KeyID] 
         AND ((inserted.[Equipment] <> deleted.[Equipment]) OR (inserted.[Equipment] IS NULL AND deleted.[Equipment] IS NOT NULL) OR (inserted.[Equipment] IS NOT NULL AND deleted.[Equipment] IS NULL))



 END 

 IF UPDATE([UpfitPart])
 BEGIN   INSERT dbo.HQMA (TableName, KeyString, Co, RecType, FieldName, OldValue, NewValue, DateTime, UserName)

   SELECT 'budEquipmentUpfitting' , '<KeyString Equipment = "' + REPLACE(CAST(inserted.[Equipment] AS VARCHAR(MAX)),'"', '&quot;') + '" Upfitting Part = "' + REPLACE(CAST(inserted.[UpfitPart] AS VARCHAR(MAX)),'"', '&quot;') + '" />' , inserted.Co , 'C' , '[UpfitPart]' ,  CONVERT(VARCHAR(MAX), deleted.[UpfitPart]) ,  CONVERT(VARCHAR(MAX), inserted.[UpfitPart]) , GETDATE() , SUSER_SNAME()
		FROM inserted
			INNER JOIN deleted
         ON  inserted.[KeyID] = deleted.[KeyID] 
         AND ((inserted.[UpfitPart] <> deleted.[UpfitPart]) OR (inserted.[UpfitPart] IS NULL AND deleted.[UpfitPart] IS NOT NULL) OR (inserted.[UpfitPart] IS NOT NULL AND deleted.[UpfitPart] IS NULL))



 END 

 IF UPDATE([UserNotes])
 BEGIN   INSERT dbo.HQMA (TableName, KeyString, Co, RecType, FieldName, OldValue, NewValue, DateTime, UserName)

   SELECT 'budEquipmentUpfitting' , '<KeyString Equipment = "' + REPLACE(CAST(inserted.[Equipment] AS VARCHAR(MAX)),'"', '&quot;') + '" Upfitting Part = "' + REPLACE(CAST(inserted.[UpfitPart] AS VARCHAR(MAX)),'"', '&quot;') + '" />' , inserted.Co , 'C' , '[UserNotes]' ,  CONVERT(VARCHAR(MAX), deleted.[UserNotes]) ,  CONVERT(VARCHAR(MAX), inserted.[UserNotes]) , GETDATE() , SUSER_SNAME()
		FROM inserted
			INNER JOIN deleted
         ON  inserted.[KeyID] = deleted.[KeyID] 
         AND ((inserted.[UserNotes] <> deleted.[UserNotes]) OR (inserted.[UserNotes] IS NULL AND deleted.[UserNotes] IS NOT NULL) OR (inserted.[UserNotes] IS NOT NULL AND deleted.[UserNotes] IS NULL))



 END 

 IF UPDATE([UniqueAttchID])
 BEGIN   INSERT dbo.HQMA (TableName, KeyString, Co, RecType, FieldName, OldValue, NewValue, DateTime, UserName)

   SELECT 'budEquipmentUpfitting' , '<KeyString Equipment = "' + REPLACE(CAST(inserted.[Equipment] AS VARCHAR(MAX)),'"', '&quot;') + '" Upfitting Part = "' + REPLACE(CAST(inserted.[UpfitPart] AS VARCHAR(MAX)),'"', '&quot;') + '" />' , inserted.Co , 'C' , '[UniqueAttchID]' ,  CONVERT(VARCHAR(MAX), deleted.[UniqueAttchID]) ,  CONVERT(VARCHAR(MAX), inserted.[UniqueAttchID]) , GETDATE() , SUSER_SNAME()
		FROM inserted
			INNER JOIN deleted
         ON  inserted.[KeyID] = deleted.[KeyID] 
         AND ((inserted.[UniqueAttchID] <> deleted.[UniqueAttchID]) OR (inserted.[UniqueAttchID] IS NULL AND deleted.[UniqueAttchID] IS NOT NULL) OR (inserted.[UniqueAttchID] IS NOT NULL AND deleted.[UniqueAttchID] IS NULL))



 END 

 END TRY 
 BEGIN CATCH 
   DECLARE	@ErrorMessage	NVARCHAR(4000), 
				@ErrorSeverity	INT; 

   SELECT	@ErrorMessage = 'Error '+ ISNULL(ERROR_MESSAGE(),'') +' in [dbo].[dbo.vtbudEquipmentUpfitting_Audit_Update] trigger', 
				@ErrorSeverity = ERROR_SEVERITY(); 

   RAISERROR(@ErrorMessage, @ErrorSeverity, 1 ) 
 END CATCH 
GO
EXEC sp_settriggerorder N'[dbo].[vtbudEquipmentUpfitting_Audit_Update]', 'last', 'update', null
GO
CREATE UNIQUE CLUSTERED INDEX [biudEquipmentUpfitting] ON [dbo].[budEquipmentUpfitting] ([Co], [Equipment], [UpfitPart]) ON [PRIMARY]
GO
