CREATE TABLE [dbo].[budPhaseCategories]
(
[Category] [varchar] (1000) COLLATE Latin1_General_BIN NOT NULL,
[Comment] [varchar] (8000) COLLATE Latin1_General_BIN NULL,
[Phase] [dbo].[bPhase] NOT NULL,
[PhaseGroup] [dbo].[bGroup] NOT NULL,
[UniqueAttchID] [uniqueidentifier] NULL,
[KeyID] [bigint] NOT NULL IDENTITY(1, 1)
) ON [PRIMARY]
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
CREATE TRIGGER dbo.vtbudPhaseCategories_Audit_Delete ON dbo.budPhaseCategories
 AFTER DELETE
 NOT FOR REPLICATION AS
 SET NOCOUNT ON 
 -- generated by vspHQCreateAuditTriggers on Mar 26 2014  2:53PM

 BEGIN TRY 

   INSERT dbo.HQMA (TableName, KeyString, Co, RecType, FieldName, OldValue, NewValue, DateTime, UserName)

   SELECT 'budPhaseCategories' , '<KeyString PhaseGroup = "' + REPLACE(CAST(deleted.[PhaseGroup] AS VARCHAR(MAX)),'"', '&quot;') + '" Phase = "' + REPLACE(CAST(deleted.[Phase] AS VARCHAR(MAX)),'"', '&quot;') + '" Category = "' + REPLACE(CAST(deleted.[Category] AS VARCHAR(MAX)),'"', '&quot;') + '" />' , '' , 'D' , NULL , NULL , NULL , GETDATE() , SUSER_SNAME()
	FROM deleted

 END TRY 
 BEGIN CATCH 
   DECLARE	@ErrorMessage	NVARCHAR(4000), 
				@ErrorSeverity	INT; 

   SELECT	@ErrorMessage = 'Error '+ ISNULL(ERROR_MESSAGE(),'') +' in [dbo].[dbo.vtbudPhaseCategories_Audit_Delete] trigger', 
				@ErrorSeverity = ERROR_SEVERITY(); 

   RAISERROR(@ErrorMessage, @ErrorSeverity, 1 ) 
 END CATCH 
GO
EXEC sp_settriggerorder N'[dbo].[vtbudPhaseCategories_Audit_Delete]', 'last', 'delete', null
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
CREATE TRIGGER dbo.vtbudPhaseCategories_Audit_Insert ON dbo.budPhaseCategories
 AFTER INSERT
 NOT FOR REPLICATION AS
 SET NOCOUNT ON 
 -- generated by vspHQCreateAuditTriggers on Mar 26 2014  2:53PM

 BEGIN TRY 

   INSERT dbo.HQMA (TableName, KeyString, Co, RecType, FieldName, OldValue, NewValue, DateTime, UserName)

   SELECT 'budPhaseCategories' , '<KeyString PhaseGroup = "' + REPLACE(CAST(inserted.[PhaseGroup] AS VARCHAR(MAX)),'"', '&quot;') + '" Phase = "' + REPLACE(CAST(inserted.[Phase] AS VARCHAR(MAX)),'"', '&quot;') + '" Category = "' + REPLACE(CAST(inserted.[Category] AS VARCHAR(MAX)),'"', '&quot;') + '" />' , '' , 'A' , NULL , NULL , NULL , GETDATE() , SUSER_SNAME()
	FROM inserted

 END TRY 
 BEGIN CATCH 
   DECLARE	@ErrorMessage	NVARCHAR(4000), 
				@ErrorSeverity	INT; 

   SELECT	@ErrorMessage = 'Error '+ ISNULL(ERROR_MESSAGE(),'') +' in [dbo].[dbo.vtbudPhaseCategories_Audit_Insert] trigger', 
				@ErrorSeverity = ERROR_SEVERITY(); 

   RAISERROR(@ErrorMessage, @ErrorSeverity, 1 ) 
 END CATCH 
GO
EXEC sp_settriggerorder N'[dbo].[vtbudPhaseCategories_Audit_Insert]', 'last', 'insert', null
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
CREATE TRIGGER dbo.vtbudPhaseCategories_Audit_Update ON dbo.budPhaseCategories
 AFTER UPDATE 
 NOT FOR REPLICATION AS 
 SET NOCOUNT ON 
 -- generated by vspHQCreateAuditTriggers on Mar 26 2014  2:53PM

 BEGIN TRY 

 IF UPDATE([Category])
 BEGIN   INSERT dbo.HQMA (TableName, KeyString, Co, RecType, FieldName, OldValue, NewValue, DateTime, UserName)

   SELECT 'budPhaseCategories' , '<KeyString PhaseGroup = "' + REPLACE(CAST(inserted.[PhaseGroup] AS VARCHAR(MAX)),'"', '&quot;') + '" Phase = "' + REPLACE(CAST(inserted.[Phase] AS VARCHAR(MAX)),'"', '&quot;') + '" Category = "' + REPLACE(CAST(inserted.[Category] AS VARCHAR(MAX)),'"', '&quot;') + '" />' , '' , 'C' , '[Category]' ,  CONVERT(VARCHAR(MAX), deleted.[Category]) ,  CONVERT(VARCHAR(MAX), inserted.[Category]) , GETDATE() , SUSER_SNAME()
		FROM inserted
			INNER JOIN deleted
         ON  inserted.[KeyID] = deleted.[KeyID] 
         AND ((inserted.[Category] <> deleted.[Category]) OR (inserted.[Category] IS NULL AND deleted.[Category] IS NOT NULL) OR (inserted.[Category] IS NOT NULL AND deleted.[Category] IS NULL))



 END 

 IF UPDATE([Comment])
 BEGIN   INSERT dbo.HQMA (TableName, KeyString, Co, RecType, FieldName, OldValue, NewValue, DateTime, UserName)

   SELECT 'budPhaseCategories' , '<KeyString PhaseGroup = "' + REPLACE(CAST(inserted.[PhaseGroup] AS VARCHAR(MAX)),'"', '&quot;') + '" Phase = "' + REPLACE(CAST(inserted.[Phase] AS VARCHAR(MAX)),'"', '&quot;') + '" Category = "' + REPLACE(CAST(inserted.[Category] AS VARCHAR(MAX)),'"', '&quot;') + '" />' , '' , 'C' , '[Comment]' ,  CONVERT(VARCHAR(MAX), deleted.[Comment]) ,  CONVERT(VARCHAR(MAX), inserted.[Comment]) , GETDATE() , SUSER_SNAME()
		FROM inserted
			INNER JOIN deleted
         ON  inserted.[KeyID] = deleted.[KeyID] 
         AND ((inserted.[Comment] <> deleted.[Comment]) OR (inserted.[Comment] IS NULL AND deleted.[Comment] IS NOT NULL) OR (inserted.[Comment] IS NOT NULL AND deleted.[Comment] IS NULL))



 END 

 IF UPDATE([Phase])
 BEGIN   INSERT dbo.HQMA (TableName, KeyString, Co, RecType, FieldName, OldValue, NewValue, DateTime, UserName)

   SELECT 'budPhaseCategories' , '<KeyString PhaseGroup = "' + REPLACE(CAST(inserted.[PhaseGroup] AS VARCHAR(MAX)),'"', '&quot;') + '" Phase = "' + REPLACE(CAST(inserted.[Phase] AS VARCHAR(MAX)),'"', '&quot;') + '" Category = "' + REPLACE(CAST(inserted.[Category] AS VARCHAR(MAX)),'"', '&quot;') + '" />' , '' , 'C' , '[Phase]' ,  CONVERT(VARCHAR(MAX), deleted.[Phase]) ,  CONVERT(VARCHAR(MAX), inserted.[Phase]) , GETDATE() , SUSER_SNAME()
		FROM inserted
			INNER JOIN deleted
         ON  inserted.[KeyID] = deleted.[KeyID] 
         AND ((inserted.[Phase] <> deleted.[Phase]) OR (inserted.[Phase] IS NULL AND deleted.[Phase] IS NOT NULL) OR (inserted.[Phase] IS NOT NULL AND deleted.[Phase] IS NULL))



 END 

 IF UPDATE([PhaseGroup])
 BEGIN   INSERT dbo.HQMA (TableName, KeyString, Co, RecType, FieldName, OldValue, NewValue, DateTime, UserName)

   SELECT 'budPhaseCategories' , '<KeyString PhaseGroup = "' + REPLACE(CAST(inserted.[PhaseGroup] AS VARCHAR(MAX)),'"', '&quot;') + '" Phase = "' + REPLACE(CAST(inserted.[Phase] AS VARCHAR(MAX)),'"', '&quot;') + '" Category = "' + REPLACE(CAST(inserted.[Category] AS VARCHAR(MAX)),'"', '&quot;') + '" />' , '' , 'C' , '[PhaseGroup]' ,  CONVERT(VARCHAR(MAX), deleted.[PhaseGroup]) ,  CONVERT(VARCHAR(MAX), inserted.[PhaseGroup]) , GETDATE() , SUSER_SNAME()
		FROM inserted
			INNER JOIN deleted
         ON  inserted.[KeyID] = deleted.[KeyID] 
         AND ((inserted.[PhaseGroup] <> deleted.[PhaseGroup]) OR (inserted.[PhaseGroup] IS NULL AND deleted.[PhaseGroup] IS NOT NULL) OR (inserted.[PhaseGroup] IS NOT NULL AND deleted.[PhaseGroup] IS NULL))



 END 

 IF UPDATE([UniqueAttchID])
 BEGIN   INSERT dbo.HQMA (TableName, KeyString, Co, RecType, FieldName, OldValue, NewValue, DateTime, UserName)

   SELECT 'budPhaseCategories' , '<KeyString PhaseGroup = "' + REPLACE(CAST(inserted.[PhaseGroup] AS VARCHAR(MAX)),'"', '&quot;') + '" Phase = "' + REPLACE(CAST(inserted.[Phase] AS VARCHAR(MAX)),'"', '&quot;') + '" Category = "' + REPLACE(CAST(inserted.[Category] AS VARCHAR(MAX)),'"', '&quot;') + '" />' , '' , 'C' , '[UniqueAttchID]' ,  CONVERT(VARCHAR(MAX), deleted.[UniqueAttchID]) ,  CONVERT(VARCHAR(MAX), inserted.[UniqueAttchID]) , GETDATE() , SUSER_SNAME()
		FROM inserted
			INNER JOIN deleted
         ON  inserted.[KeyID] = deleted.[KeyID] 
         AND ((inserted.[UniqueAttchID] <> deleted.[UniqueAttchID]) OR (inserted.[UniqueAttchID] IS NULL AND deleted.[UniqueAttchID] IS NOT NULL) OR (inserted.[UniqueAttchID] IS NOT NULL AND deleted.[UniqueAttchID] IS NULL))



 END 

 END TRY 
 BEGIN CATCH 
   DECLARE	@ErrorMessage	NVARCHAR(4000), 
				@ErrorSeverity	INT; 

   SELECT	@ErrorMessage = 'Error '+ ISNULL(ERROR_MESSAGE(),'') +' in [dbo].[dbo.vtbudPhaseCategories_Audit_Update] trigger', 
				@ErrorSeverity = ERROR_SEVERITY(); 

   RAISERROR(@ErrorMessage, @ErrorSeverity, 1 ) 
 END CATCH 
GO
EXEC sp_settriggerorder N'[dbo].[vtbudPhaseCategories_Audit_Update]', 'last', 'update', null
GO
CREATE UNIQUE CLUSTERED INDEX [biudPhaseCategories] ON [dbo].[budPhaseCategories] ([PhaseGroup], [Phase], [Category]) ON [PRIMARY]
GO
