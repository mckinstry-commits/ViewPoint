CREATE TABLE [dbo].[budProjMWBE]
(
[Co] [dbo].[bCompany] NOT NULL,
[ActualAmt] [dbo].[bDollar] NULL,
[ActualPct] [dbo].[bPct] NULL,
[Cert] [varchar] (20) COLLATE Latin1_General_BIN NOT NULL,
[GoalAmt] [dbo].[bDollar] NULL,
[GoalMet] [dbo].[bYN] NOT NULL CONSTRAINT [DF_udProjMWBE_GoalMet] DEFAULT ('N'),
[GoalPct] [dbo].[bPct] NULL,
[Project] [dbo].[bProject] NOT NULL,
[UniqueAttchID] [uniqueidentifier] NULL,
[KeyID] [bigint] NOT NULL IDENTITY(1, 1)
) ON [PRIMARY]
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
CREATE TRIGGER dbo.vtbudProjMWBE_Audit_Delete ON dbo.budProjMWBE
 AFTER DELETE
 NOT FOR REPLICATION AS
 SET NOCOUNT ON 
 -- generated by vspHQCreateAuditTriggers on Oct 29 2013  9:11AM

 BEGIN TRY 

   INSERT dbo.HQMA (TableName, KeyString, Co, RecType, FieldName, OldValue, NewValue, DateTime, UserName)

   SELECT 'budProjMWBE' , '<KeyString Project = "' + REPLACE(CAST(deleted.[Project] AS VARCHAR(MAX)),'"', '&quot;') + '" Certificate = "' + REPLACE(CAST(deleted.[Cert] AS VARCHAR(MAX)),'"', '&quot;') + '" />' , deleted.Co , 'D' , NULL , NULL , NULL , GETDATE() , SUSER_SNAME()
	FROM deleted

 END TRY 
 BEGIN CATCH 
   DECLARE	@ErrorMessage	NVARCHAR(4000), 
				@ErrorSeverity	INT; 

   SELECT	@ErrorMessage = 'Error '+ ISNULL(ERROR_MESSAGE(),'') +' in [dbo].[dbo.vtbudProjMWBE_Audit_Delete] trigger', 
				@ErrorSeverity = ERROR_SEVERITY(); 

   RAISERROR(@ErrorMessage, @ErrorSeverity, 1 ) 
 END CATCH 
GO
EXEC sp_settriggerorder N'[dbo].[vtbudProjMWBE_Audit_Delete]', 'last', 'delete', null
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
CREATE TRIGGER dbo.vtbudProjMWBE_Audit_Insert ON dbo.budProjMWBE
 AFTER INSERT
 NOT FOR REPLICATION AS
 SET NOCOUNT ON 
 -- generated by vspHQCreateAuditTriggers on Oct 29 2013  9:11AM

 BEGIN TRY 

   INSERT dbo.HQMA (TableName, KeyString, Co, RecType, FieldName, OldValue, NewValue, DateTime, UserName)

   SELECT 'budProjMWBE' , '<KeyString Project = "' + REPLACE(CAST(inserted.[Project] AS VARCHAR(MAX)),'"', '&quot;') + '" Certificate = "' + REPLACE(CAST(inserted.[Cert] AS VARCHAR(MAX)),'"', '&quot;') + '" />' , ISNULL(inserted.Co, '') , 'A' , NULL , NULL , NULL , GETDATE() , SUSER_SNAME()
	FROM inserted

 END TRY 
 BEGIN CATCH 
   DECLARE	@ErrorMessage	NVARCHAR(4000), 
				@ErrorSeverity	INT; 

   SELECT	@ErrorMessage = 'Error '+ ISNULL(ERROR_MESSAGE(),'') +' in [dbo].[dbo.vtbudProjMWBE_Audit_Insert] trigger', 
				@ErrorSeverity = ERROR_SEVERITY(); 

   RAISERROR(@ErrorMessage, @ErrorSeverity, 1 ) 
 END CATCH 
GO
EXEC sp_settriggerorder N'[dbo].[vtbudProjMWBE_Audit_Insert]', 'last', 'insert', null
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
CREATE TRIGGER dbo.vtbudProjMWBE_Audit_Update ON dbo.budProjMWBE
 AFTER UPDATE 
 NOT FOR REPLICATION AS 
 SET NOCOUNT ON 
 -- generated by vspHQCreateAuditTriggers on Oct 29 2013  9:11AM

 BEGIN TRY 

 IF UPDATE([Co])
 BEGIN   INSERT dbo.HQMA (TableName, KeyString, Co, RecType, FieldName, OldValue, NewValue, DateTime, UserName)

   SELECT 'budProjMWBE' , '<KeyString Project = "' + REPLACE(CAST(inserted.[Project] AS VARCHAR(MAX)),'"', '&quot;') + '" Certificate = "' + REPLACE(CAST(inserted.[Cert] AS VARCHAR(MAX)),'"', '&quot;') + '" />' , inserted.Co , 'C' , '[Co]' ,  CONVERT(VARCHAR(MAX), deleted.[Co]) ,  CONVERT(VARCHAR(MAX), inserted.[Co]) , GETDATE() , SUSER_SNAME()
		FROM inserted
			INNER JOIN deleted
         ON  inserted.[KeyID] = deleted.[KeyID] 
         AND ((inserted.[Co] <> deleted.[Co]) OR (inserted.[Co] IS NULL AND deleted.[Co] IS NOT NULL) OR (inserted.[Co] IS NOT NULL AND deleted.[Co] IS NULL))



 END 

 IF UPDATE([ActualAmt])
 BEGIN   INSERT dbo.HQMA (TableName, KeyString, Co, RecType, FieldName, OldValue, NewValue, DateTime, UserName)

   SELECT 'budProjMWBE' , '<KeyString Project = "' + REPLACE(CAST(inserted.[Project] AS VARCHAR(MAX)),'"', '&quot;') + '" Certificate = "' + REPLACE(CAST(inserted.[Cert] AS VARCHAR(MAX)),'"', '&quot;') + '" />' , inserted.Co , 'C' , '[ActualAmt]' ,  CONVERT(VARCHAR(MAX), deleted.[ActualAmt]) ,  CONVERT(VARCHAR(MAX), inserted.[ActualAmt]) , GETDATE() , SUSER_SNAME()
		FROM inserted
			INNER JOIN deleted
         ON  inserted.[KeyID] = deleted.[KeyID] 
         AND ((inserted.[ActualAmt] <> deleted.[ActualAmt]) OR (inserted.[ActualAmt] IS NULL AND deleted.[ActualAmt] IS NOT NULL) OR (inserted.[ActualAmt] IS NOT NULL AND deleted.[ActualAmt] IS NULL))



 END 

 IF UPDATE([ActualPct])
 BEGIN   INSERT dbo.HQMA (TableName, KeyString, Co, RecType, FieldName, OldValue, NewValue, DateTime, UserName)

   SELECT 'budProjMWBE' , '<KeyString Project = "' + REPLACE(CAST(inserted.[Project] AS VARCHAR(MAX)),'"', '&quot;') + '" Certificate = "' + REPLACE(CAST(inserted.[Cert] AS VARCHAR(MAX)),'"', '&quot;') + '" />' , inserted.Co , 'C' , '[ActualPct]' ,  CONVERT(VARCHAR(MAX), deleted.[ActualPct]) ,  CONVERT(VARCHAR(MAX), inserted.[ActualPct]) , GETDATE() , SUSER_SNAME()
		FROM inserted
			INNER JOIN deleted
         ON  inserted.[KeyID] = deleted.[KeyID] 
         AND ((inserted.[ActualPct] <> deleted.[ActualPct]) OR (inserted.[ActualPct] IS NULL AND deleted.[ActualPct] IS NOT NULL) OR (inserted.[ActualPct] IS NOT NULL AND deleted.[ActualPct] IS NULL))



 END 

 IF UPDATE([Cert])
 BEGIN   INSERT dbo.HQMA (TableName, KeyString, Co, RecType, FieldName, OldValue, NewValue, DateTime, UserName)

   SELECT 'budProjMWBE' , '<KeyString Project = "' + REPLACE(CAST(inserted.[Project] AS VARCHAR(MAX)),'"', '&quot;') + '" Certificate = "' + REPLACE(CAST(inserted.[Cert] AS VARCHAR(MAX)),'"', '&quot;') + '" />' , inserted.Co , 'C' , '[Cert]' ,  CONVERT(VARCHAR(MAX), deleted.[Cert]) ,  CONVERT(VARCHAR(MAX), inserted.[Cert]) , GETDATE() , SUSER_SNAME()
		FROM inserted
			INNER JOIN deleted
         ON  inserted.[KeyID] = deleted.[KeyID] 
         AND ((inserted.[Cert] <> deleted.[Cert]) OR (inserted.[Cert] IS NULL AND deleted.[Cert] IS NOT NULL) OR (inserted.[Cert] IS NOT NULL AND deleted.[Cert] IS NULL))



 END 

 IF UPDATE([GoalAmt])
 BEGIN   INSERT dbo.HQMA (TableName, KeyString, Co, RecType, FieldName, OldValue, NewValue, DateTime, UserName)

   SELECT 'budProjMWBE' , '<KeyString Project = "' + REPLACE(CAST(inserted.[Project] AS VARCHAR(MAX)),'"', '&quot;') + '" Certificate = "' + REPLACE(CAST(inserted.[Cert] AS VARCHAR(MAX)),'"', '&quot;') + '" />' , inserted.Co , 'C' , '[GoalAmt]' ,  CONVERT(VARCHAR(MAX), deleted.[GoalAmt]) ,  CONVERT(VARCHAR(MAX), inserted.[GoalAmt]) , GETDATE() , SUSER_SNAME()
		FROM inserted
			INNER JOIN deleted
         ON  inserted.[KeyID] = deleted.[KeyID] 
         AND ((inserted.[GoalAmt] <> deleted.[GoalAmt]) OR (inserted.[GoalAmt] IS NULL AND deleted.[GoalAmt] IS NOT NULL) OR (inserted.[GoalAmt] IS NOT NULL AND deleted.[GoalAmt] IS NULL))



 END 

 IF UPDATE([GoalMet])
 BEGIN   INSERT dbo.HQMA (TableName, KeyString, Co, RecType, FieldName, OldValue, NewValue, DateTime, UserName)

   SELECT 'budProjMWBE' , '<KeyString Project = "' + REPLACE(CAST(inserted.[Project] AS VARCHAR(MAX)),'"', '&quot;') + '" Certificate = "' + REPLACE(CAST(inserted.[Cert] AS VARCHAR(MAX)),'"', '&quot;') + '" />' , inserted.Co , 'C' , '[GoalMet]' ,  CONVERT(VARCHAR(MAX), deleted.[GoalMet]) ,  CONVERT(VARCHAR(MAX), inserted.[GoalMet]) , GETDATE() , SUSER_SNAME()
		FROM inserted
			INNER JOIN deleted
         ON  inserted.[KeyID] = deleted.[KeyID] 
         AND ((inserted.[GoalMet] <> deleted.[GoalMet]) OR (inserted.[GoalMet] IS NULL AND deleted.[GoalMet] IS NOT NULL) OR (inserted.[GoalMet] IS NOT NULL AND deleted.[GoalMet] IS NULL))



 END 

 IF UPDATE([GoalPct])
 BEGIN   INSERT dbo.HQMA (TableName, KeyString, Co, RecType, FieldName, OldValue, NewValue, DateTime, UserName)

   SELECT 'budProjMWBE' , '<KeyString Project = "' + REPLACE(CAST(inserted.[Project] AS VARCHAR(MAX)),'"', '&quot;') + '" Certificate = "' + REPLACE(CAST(inserted.[Cert] AS VARCHAR(MAX)),'"', '&quot;') + '" />' , inserted.Co , 'C' , '[GoalPct]' ,  CONVERT(VARCHAR(MAX), deleted.[GoalPct]) ,  CONVERT(VARCHAR(MAX), inserted.[GoalPct]) , GETDATE() , SUSER_SNAME()
		FROM inserted
			INNER JOIN deleted
         ON  inserted.[KeyID] = deleted.[KeyID] 
         AND ((inserted.[GoalPct] <> deleted.[GoalPct]) OR (inserted.[GoalPct] IS NULL AND deleted.[GoalPct] IS NOT NULL) OR (inserted.[GoalPct] IS NOT NULL AND deleted.[GoalPct] IS NULL))



 END 

 IF UPDATE([Project])
 BEGIN   INSERT dbo.HQMA (TableName, KeyString, Co, RecType, FieldName, OldValue, NewValue, DateTime, UserName)

   SELECT 'budProjMWBE' , '<KeyString Project = "' + REPLACE(CAST(inserted.[Project] AS VARCHAR(MAX)),'"', '&quot;') + '" Certificate = "' + REPLACE(CAST(inserted.[Cert] AS VARCHAR(MAX)),'"', '&quot;') + '" />' , inserted.Co , 'C' , '[Project]' ,  CONVERT(VARCHAR(MAX), deleted.[Project]) ,  CONVERT(VARCHAR(MAX), inserted.[Project]) , GETDATE() , SUSER_SNAME()
		FROM inserted
			INNER JOIN deleted
         ON  inserted.[KeyID] = deleted.[KeyID] 
         AND ((inserted.[Project] <> deleted.[Project]) OR (inserted.[Project] IS NULL AND deleted.[Project] IS NOT NULL) OR (inserted.[Project] IS NOT NULL AND deleted.[Project] IS NULL))



 END 

 IF UPDATE([UniqueAttchID])
 BEGIN   INSERT dbo.HQMA (TableName, KeyString, Co, RecType, FieldName, OldValue, NewValue, DateTime, UserName)

   SELECT 'budProjMWBE' , '<KeyString Project = "' + REPLACE(CAST(inserted.[Project] AS VARCHAR(MAX)),'"', '&quot;') + '" Certificate = "' + REPLACE(CAST(inserted.[Cert] AS VARCHAR(MAX)),'"', '&quot;') + '" />' , inserted.Co , 'C' , '[UniqueAttchID]' ,  CONVERT(VARCHAR(MAX), deleted.[UniqueAttchID]) ,  CONVERT(VARCHAR(MAX), inserted.[UniqueAttchID]) , GETDATE() , SUSER_SNAME()
		FROM inserted
			INNER JOIN deleted
         ON  inserted.[KeyID] = deleted.[KeyID] 
         AND ((inserted.[UniqueAttchID] <> deleted.[UniqueAttchID]) OR (inserted.[UniqueAttchID] IS NULL AND deleted.[UniqueAttchID] IS NOT NULL) OR (inserted.[UniqueAttchID] IS NOT NULL AND deleted.[UniqueAttchID] IS NULL))



 END 

 END TRY 
 BEGIN CATCH 
   DECLARE	@ErrorMessage	NVARCHAR(4000), 
				@ErrorSeverity	INT; 

   SELECT	@ErrorMessage = 'Error '+ ISNULL(ERROR_MESSAGE(),'') +' in [dbo].[dbo.vtbudProjMWBE_Audit_Update] trigger', 
				@ErrorSeverity = ERROR_SEVERITY(); 

   RAISERROR(@ErrorMessage, @ErrorSeverity, 1 ) 
 END CATCH 
GO
EXEC sp_settriggerorder N'[dbo].[vtbudProjMWBE_Audit_Update]', 'last', 'update', null
GO
CREATE UNIQUE CLUSTERED INDEX [biudProjMWBE] ON [dbo].[budProjMWBE] ([Co], [Project], [Cert]) ON [PRIMARY]
GO
