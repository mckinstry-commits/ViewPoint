CREATE TABLE [dbo].[vSMRateOverrideMatlBP]
(
[SMRateOverrideMatlBPID] [bigint] NOT NULL IDENTITY(1, 1),
[RateOverrideMaterialSeq] [int] NULL,
[BreakPoint] [int] NOT NULL,
[Percent] [dbo].[bUnitCost] NOT NULL,
[UniqueAttchID] [uniqueidentifier] NULL,
[SMCo] [dbo].[bCompany] NOT NULL,
[EntitySeq] [int] NOT NULL
) ON [PRIMARY]
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
CREATE TRIGGER dbo.vtvSMRateOverrideMatlBP_Audit_Delete ON dbo.vSMRateOverrideMatlBP
 AFTER DELETE
 NOT FOR REPLICATION AS
 SET NOCOUNT ON 
 -- generated by vspAuditCreateAuditTriggers

 BEGIN TRY 

							INSERT dbo.HQMA (
													TableName, 
													KeyString, 
													Co, 
													RecType, 
													FieldName, 
													OldValue, 
													NewValue, 
													DateTime, 
													UserName)
								
							SELECT
								'vSMRateOverrideMatlBP' , 
								'<KeyString BreakPoint = "' + REPLACE(CAST(ISNULL(deleted.[BreakPoint],'') AS VARCHAR(MAX)),'"', '&quot;') + '" EntitySeq = "' + REPLACE(CAST(ISNULL(deleted.[EntitySeq],'') AS VARCHAR(MAX)),'"', '&quot;') + '" RateOverrideMaterialSeq = "' + REPLACE(CAST(ISNULL(deleted.[RateOverrideMaterialSeq],'') AS VARCHAR(MAX)),'"', '&quot;') + '" SMCo = "' + REPLACE(CAST(ISNULL(deleted.[SMCo],'') AS VARCHAR(MAX)),'"', '&quot;') + '" />' , 
								deleted.SMCo , 
								'D' , 
								'BreakPoint' , 
								CONVERT(VARCHAR(MAX), deleted.[BreakPoint]) , 								NULL , 
								GETDATE() , 
								SUSER_SNAME()
							FROM deleted
								JOIN dbo.vAuditFlagCompany AS afc ON deleted.SMCo = afc.AuditCo 
							WHERE afc.AuditFlagID = 7
							INSERT dbo.HQMA (
													TableName, 
													KeyString, 
													Co, 
													RecType, 
													FieldName, 
													OldValue, 
													NewValue, 
													DateTime, 
													UserName)
								
							SELECT
								'vSMRateOverrideMatlBP' , 
								'<KeyString BreakPoint = "' + REPLACE(CAST(ISNULL(deleted.[BreakPoint],'') AS VARCHAR(MAX)),'"', '&quot;') + '" EntitySeq = "' + REPLACE(CAST(ISNULL(deleted.[EntitySeq],'') AS VARCHAR(MAX)),'"', '&quot;') + '" RateOverrideMaterialSeq = "' + REPLACE(CAST(ISNULL(deleted.[RateOverrideMaterialSeq],'') AS VARCHAR(MAX)),'"', '&quot;') + '" SMCo = "' + REPLACE(CAST(ISNULL(deleted.[SMCo],'') AS VARCHAR(MAX)),'"', '&quot;') + '" />' , 
								deleted.SMCo , 
								'D' , 
								'EntitySeq' , 
								CONVERT(VARCHAR(MAX), deleted.[EntitySeq]) , 								NULL , 
								GETDATE() , 
								SUSER_SNAME()
							FROM deleted
								JOIN dbo.vAuditFlagCompany AS afc ON deleted.SMCo = afc.AuditCo 
							WHERE afc.AuditFlagID = 7
							INSERT dbo.HQMA (
													TableName, 
													KeyString, 
													Co, 
													RecType, 
													FieldName, 
													OldValue, 
													NewValue, 
													DateTime, 
													UserName)
								
							SELECT
								'vSMRateOverrideMatlBP' , 
								'<KeyString BreakPoint = "' + REPLACE(CAST(ISNULL(deleted.[BreakPoint],'') AS VARCHAR(MAX)),'"', '&quot;') + '" EntitySeq = "' + REPLACE(CAST(ISNULL(deleted.[EntitySeq],'') AS VARCHAR(MAX)),'"', '&quot;') + '" RateOverrideMaterialSeq = "' + REPLACE(CAST(ISNULL(deleted.[RateOverrideMaterialSeq],'') AS VARCHAR(MAX)),'"', '&quot;') + '" SMCo = "' + REPLACE(CAST(ISNULL(deleted.[SMCo],'') AS VARCHAR(MAX)),'"', '&quot;') + '" />' , 
								deleted.SMCo , 
								'D' , 
								'Percent' , 
								CONVERT(VARCHAR(MAX), deleted.[Percent]) , 								NULL , 
								GETDATE() , 
								SUSER_SNAME()
							FROM deleted
								JOIN dbo.vAuditFlagCompany AS afc ON deleted.SMCo = afc.AuditCo 
							WHERE afc.AuditFlagID = 7
							INSERT dbo.HQMA (
													TableName, 
													KeyString, 
													Co, 
													RecType, 
													FieldName, 
													OldValue, 
													NewValue, 
													DateTime, 
													UserName)
								
							SELECT
								'vSMRateOverrideMatlBP' , 
								'<KeyString BreakPoint = "' + REPLACE(CAST(ISNULL(deleted.[BreakPoint],'') AS VARCHAR(MAX)),'"', '&quot;') + '" EntitySeq = "' + REPLACE(CAST(ISNULL(deleted.[EntitySeq],'') AS VARCHAR(MAX)),'"', '&quot;') + '" RateOverrideMaterialSeq = "' + REPLACE(CAST(ISNULL(deleted.[RateOverrideMaterialSeq],'') AS VARCHAR(MAX)),'"', '&quot;') + '" SMCo = "' + REPLACE(CAST(ISNULL(deleted.[SMCo],'') AS VARCHAR(MAX)),'"', '&quot;') + '" />' , 
								deleted.SMCo , 
								'D' , 
								'RateOverrideMaterialSeq' , 
								CONVERT(VARCHAR(MAX), deleted.[RateOverrideMaterialSeq]) , 								NULL , 
								GETDATE() , 
								SUSER_SNAME()
							FROM deleted
								JOIN dbo.vAuditFlagCompany AS afc ON deleted.SMCo = afc.AuditCo 
							WHERE afc.AuditFlagID = 7
							INSERT dbo.HQMA (
													TableName, 
													KeyString, 
													Co, 
													RecType, 
													FieldName, 
													OldValue, 
													NewValue, 
													DateTime, 
													UserName)
								
							SELECT
								'vSMRateOverrideMatlBP' , 
								'<KeyString BreakPoint = "' + REPLACE(CAST(ISNULL(deleted.[BreakPoint],'') AS VARCHAR(MAX)),'"', '&quot;') + '" EntitySeq = "' + REPLACE(CAST(ISNULL(deleted.[EntitySeq],'') AS VARCHAR(MAX)),'"', '&quot;') + '" RateOverrideMaterialSeq = "' + REPLACE(CAST(ISNULL(deleted.[RateOverrideMaterialSeq],'') AS VARCHAR(MAX)),'"', '&quot;') + '" SMCo = "' + REPLACE(CAST(ISNULL(deleted.[SMCo],'') AS VARCHAR(MAX)),'"', '&quot;') + '" />' , 
								deleted.SMCo , 
								'D' , 
								'SMCo' , 
								CONVERT(VARCHAR(MAX), deleted.[SMCo]) , 								NULL , 
								GETDATE() , 
								SUSER_SNAME()
							FROM deleted
								JOIN dbo.vAuditFlagCompany AS afc ON deleted.SMCo = afc.AuditCo 
							WHERE afc.AuditFlagID = 7
							INSERT dbo.HQMA (
													TableName, 
													KeyString, 
													Co, 
													RecType, 
													FieldName, 
													OldValue, 
													NewValue, 
													DateTime, 
													UserName)
								
							SELECT
								'vSMRateOverrideMatlBP' , 
								'<KeyString BreakPoint = "' + REPLACE(CAST(ISNULL(deleted.[BreakPoint],'') AS VARCHAR(MAX)),'"', '&quot;') + '" EntitySeq = "' + REPLACE(CAST(ISNULL(deleted.[EntitySeq],'') AS VARCHAR(MAX)),'"', '&quot;') + '" RateOverrideMaterialSeq = "' + REPLACE(CAST(ISNULL(deleted.[RateOverrideMaterialSeq],'') AS VARCHAR(MAX)),'"', '&quot;') + '" SMCo = "' + REPLACE(CAST(ISNULL(deleted.[SMCo],'') AS VARCHAR(MAX)),'"', '&quot;') + '" />' , 
								deleted.SMCo , 
								'D' , 
								'SMRateOverrideMatlBPID' , 
								CONVERT(VARCHAR(MAX), deleted.[SMRateOverrideMatlBPID]) , 								NULL , 
								GETDATE() , 
								SUSER_SNAME()
							FROM deleted
								JOIN dbo.vAuditFlagCompany AS afc ON deleted.SMCo = afc.AuditCo 
							WHERE afc.AuditFlagID = 7
							INSERT dbo.HQMA (
													TableName, 
													KeyString, 
													Co, 
													RecType, 
													FieldName, 
													OldValue, 
													NewValue, 
													DateTime, 
													UserName)
								
							SELECT
								'vSMRateOverrideMatlBP' , 
								'<KeyString BreakPoint = "' + REPLACE(CAST(ISNULL(deleted.[BreakPoint],'') AS VARCHAR(MAX)),'"', '&quot;') + '" EntitySeq = "' + REPLACE(CAST(ISNULL(deleted.[EntitySeq],'') AS VARCHAR(MAX)),'"', '&quot;') + '" RateOverrideMaterialSeq = "' + REPLACE(CAST(ISNULL(deleted.[RateOverrideMaterialSeq],'') AS VARCHAR(MAX)),'"', '&quot;') + '" SMCo = "' + REPLACE(CAST(ISNULL(deleted.[SMCo],'') AS VARCHAR(MAX)),'"', '&quot;') + '" />' , 
								deleted.SMCo , 
								'D' , 
								'UniqueAttchID' , 
								CONVERT(VARCHAR(MAX), deleted.[UniqueAttchID]) , 								NULL , 
								GETDATE() , 
								SUSER_SNAME()
							FROM deleted
								JOIN dbo.vAuditFlagCompany AS afc ON deleted.SMCo = afc.AuditCo 
							WHERE afc.AuditFlagID = 7

							
 END TRY 
 BEGIN CATCH 
   DECLARE	@ErrorMessage	NVARCHAR(4000), 
				@ErrorSeverity	INT; 

   SELECT	@ErrorMessage = 'Error '+ ISNULL(ERROR_MESSAGE(),'') +' in [dbo].[dbo.vtvSMRateOverrideMatlBP_Audit_Delete] trigger', 
				@ErrorSeverity = ERROR_SEVERITY(); 

   RAISERROR(@ErrorMessage, @ErrorSeverity, 1 ) 
 END CATCH 
GO
EXEC sp_settriggerorder N'[dbo].[vtvSMRateOverrideMatlBP_Audit_Delete]', 'last', 'delete', null
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
CREATE TRIGGER dbo.vtvSMRateOverrideMatlBP_Audit_Insert ON dbo.vSMRateOverrideMatlBP
 AFTER INSERT
 NOT FOR REPLICATION AS
 SET NOCOUNT ON 
 -- generated by vspAuditTriggersCreate

 BEGIN TRY 

-- log additions to the BreakPoint column
							INSERT dbo.bHQMA (	
													TableName, 
													KeyString, 
													Co, 
													RecType, 
													FieldName, 
													OldValue, 
													NewValue, 
													DateTime, 
													UserName)
							
							SELECT 
								'vSMRateOverrideMatlBP' , 
								'<KeyString BreakPoint = "' + REPLACE(CAST(ISNULL(inserted.[BreakPoint],'') AS VARCHAR(MAX)),'"', '&quot;') + '" EntitySeq = "' + REPLACE(CAST(ISNULL(inserted.[EntitySeq],'') AS VARCHAR(MAX)),'"', '&quot;') + '" RateOverrideMaterialSeq = "' + REPLACE(CAST(ISNULL(inserted.[RateOverrideMaterialSeq],'') AS VARCHAR(MAX)),'"', '&quot;') + '" SMCo = "' + REPLACE(CAST(ISNULL(inserted.[SMCo],'') AS VARCHAR(MAX)),'"', '&quot;') + '" />' , 
								ISNULL(inserted.SMCo, '') , 
								'A' , 
								'BreakPoint' , 
								NULL , 
								[BreakPoint] , 
								GETDATE() , 
								SUSER_SNAME()
							FROM inserted
								JOIN dbo.vAuditFlagCompany AS afc ON inserted.SMCo = afc.AuditCo 
							WHERE afc.AuditFlagID = 7

-- log additions to the EntitySeq column
							INSERT dbo.bHQMA (	
													TableName, 
													KeyString, 
													Co, 
													RecType, 
													FieldName, 
													OldValue, 
													NewValue, 
													DateTime, 
													UserName)
							
							SELECT 
								'vSMRateOverrideMatlBP' , 
								'<KeyString BreakPoint = "' + REPLACE(CAST(ISNULL(inserted.[BreakPoint],'') AS VARCHAR(MAX)),'"', '&quot;') + '" EntitySeq = "' + REPLACE(CAST(ISNULL(inserted.[EntitySeq],'') AS VARCHAR(MAX)),'"', '&quot;') + '" RateOverrideMaterialSeq = "' + REPLACE(CAST(ISNULL(inserted.[RateOverrideMaterialSeq],'') AS VARCHAR(MAX)),'"', '&quot;') + '" SMCo = "' + REPLACE(CAST(ISNULL(inserted.[SMCo],'') AS VARCHAR(MAX)),'"', '&quot;') + '" />' , 
								ISNULL(inserted.SMCo, '') , 
								'A' , 
								'EntitySeq' , 
								NULL , 
								[EntitySeq] , 
								GETDATE() , 
								SUSER_SNAME()
							FROM inserted
								JOIN dbo.vAuditFlagCompany AS afc ON inserted.SMCo = afc.AuditCo 
							WHERE afc.AuditFlagID = 7

-- log additions to the Percent column
							INSERT dbo.bHQMA (	
													TableName, 
													KeyString, 
													Co, 
													RecType, 
													FieldName, 
													OldValue, 
													NewValue, 
													DateTime, 
													UserName)
							
							SELECT 
								'vSMRateOverrideMatlBP' , 
								'<KeyString BreakPoint = "' + REPLACE(CAST(ISNULL(inserted.[BreakPoint],'') AS VARCHAR(MAX)),'"', '&quot;') + '" EntitySeq = "' + REPLACE(CAST(ISNULL(inserted.[EntitySeq],'') AS VARCHAR(MAX)),'"', '&quot;') + '" RateOverrideMaterialSeq = "' + REPLACE(CAST(ISNULL(inserted.[RateOverrideMaterialSeq],'') AS VARCHAR(MAX)),'"', '&quot;') + '" SMCo = "' + REPLACE(CAST(ISNULL(inserted.[SMCo],'') AS VARCHAR(MAX)),'"', '&quot;') + '" />' , 
								ISNULL(inserted.SMCo, '') , 
								'A' , 
								'Percent' , 
								NULL , 
								[Percent] , 
								GETDATE() , 
								SUSER_SNAME()
							FROM inserted
								JOIN dbo.vAuditFlagCompany AS afc ON inserted.SMCo = afc.AuditCo 
							WHERE afc.AuditFlagID = 7

-- log additions to the RateOverrideMaterialSeq column
							INSERT dbo.bHQMA (	
													TableName, 
													KeyString, 
													Co, 
													RecType, 
													FieldName, 
													OldValue, 
													NewValue, 
													DateTime, 
													UserName)
							
							SELECT 
								'vSMRateOverrideMatlBP' , 
								'<KeyString BreakPoint = "' + REPLACE(CAST(ISNULL(inserted.[BreakPoint],'') AS VARCHAR(MAX)),'"', '&quot;') + '" EntitySeq = "' + REPLACE(CAST(ISNULL(inserted.[EntitySeq],'') AS VARCHAR(MAX)),'"', '&quot;') + '" RateOverrideMaterialSeq = "' + REPLACE(CAST(ISNULL(inserted.[RateOverrideMaterialSeq],'') AS VARCHAR(MAX)),'"', '&quot;') + '" SMCo = "' + REPLACE(CAST(ISNULL(inserted.[SMCo],'') AS VARCHAR(MAX)),'"', '&quot;') + '" />' , 
								ISNULL(inserted.SMCo, '') , 
								'A' , 
								'RateOverrideMaterialSeq' , 
								NULL , 
								[RateOverrideMaterialSeq] , 
								GETDATE() , 
								SUSER_SNAME()
							FROM inserted
								JOIN dbo.vAuditFlagCompany AS afc ON inserted.SMCo = afc.AuditCo 
							WHERE afc.AuditFlagID = 7

-- log additions to the SMCo column
							INSERT dbo.bHQMA (	
													TableName, 
													KeyString, 
													Co, 
													RecType, 
													FieldName, 
													OldValue, 
													NewValue, 
													DateTime, 
													UserName)
							
							SELECT 
								'vSMRateOverrideMatlBP' , 
								'<KeyString BreakPoint = "' + REPLACE(CAST(ISNULL(inserted.[BreakPoint],'') AS VARCHAR(MAX)),'"', '&quot;') + '" EntitySeq = "' + REPLACE(CAST(ISNULL(inserted.[EntitySeq],'') AS VARCHAR(MAX)),'"', '&quot;') + '" RateOverrideMaterialSeq = "' + REPLACE(CAST(ISNULL(inserted.[RateOverrideMaterialSeq],'') AS VARCHAR(MAX)),'"', '&quot;') + '" SMCo = "' + REPLACE(CAST(ISNULL(inserted.[SMCo],'') AS VARCHAR(MAX)),'"', '&quot;') + '" />' , 
								ISNULL(inserted.SMCo, '') , 
								'A' , 
								'SMCo' , 
								NULL , 
								[SMCo] , 
								GETDATE() , 
								SUSER_SNAME()
							FROM inserted
								JOIN dbo.vAuditFlagCompany AS afc ON inserted.SMCo = afc.AuditCo 
							WHERE afc.AuditFlagID = 7

-- log additions to the SMRateOverrideMatlBPID column
							INSERT dbo.bHQMA (	
													TableName, 
													KeyString, 
													Co, 
													RecType, 
													FieldName, 
													OldValue, 
													NewValue, 
													DateTime, 
													UserName)
							
							SELECT 
								'vSMRateOverrideMatlBP' , 
								'<KeyString BreakPoint = "' + REPLACE(CAST(ISNULL(inserted.[BreakPoint],'') AS VARCHAR(MAX)),'"', '&quot;') + '" EntitySeq = "' + REPLACE(CAST(ISNULL(inserted.[EntitySeq],'') AS VARCHAR(MAX)),'"', '&quot;') + '" RateOverrideMaterialSeq = "' + REPLACE(CAST(ISNULL(inserted.[RateOverrideMaterialSeq],'') AS VARCHAR(MAX)),'"', '&quot;') + '" SMCo = "' + REPLACE(CAST(ISNULL(inserted.[SMCo],'') AS VARCHAR(MAX)),'"', '&quot;') + '" />' , 
								ISNULL(inserted.SMCo, '') , 
								'A' , 
								'SMRateOverrideMatlBPID' , 
								NULL , 
								[SMRateOverrideMatlBPID] , 
								GETDATE() , 
								SUSER_SNAME()
							FROM inserted
								JOIN dbo.vAuditFlagCompany AS afc ON inserted.SMCo = afc.AuditCo 
							WHERE afc.AuditFlagID = 7

-- log additions to the UniqueAttchID column
							INSERT dbo.bHQMA (	
													TableName, 
													KeyString, 
													Co, 
													RecType, 
													FieldName, 
													OldValue, 
													NewValue, 
													DateTime, 
													UserName)
							
							SELECT 
								'vSMRateOverrideMatlBP' , 
								'<KeyString BreakPoint = "' + REPLACE(CAST(ISNULL(inserted.[BreakPoint],'') AS VARCHAR(MAX)),'"', '&quot;') + '" EntitySeq = "' + REPLACE(CAST(ISNULL(inserted.[EntitySeq],'') AS VARCHAR(MAX)),'"', '&quot;') + '" RateOverrideMaterialSeq = "' + REPLACE(CAST(ISNULL(inserted.[RateOverrideMaterialSeq],'') AS VARCHAR(MAX)),'"', '&quot;') + '" SMCo = "' + REPLACE(CAST(ISNULL(inserted.[SMCo],'') AS VARCHAR(MAX)),'"', '&quot;') + '" />' , 
								ISNULL(inserted.SMCo, '') , 
								'A' , 
								'UniqueAttchID' , 
								NULL , 
								[UniqueAttchID] , 
								GETDATE() , 
								SUSER_SNAME()
							FROM inserted
								JOIN dbo.vAuditFlagCompany AS afc ON inserted.SMCo = afc.AuditCo 
							WHERE afc.AuditFlagID = 7


 END TRY 
 BEGIN CATCH 
   DECLARE	@ErrorMessage	NVARCHAR(4000), 
				@ErrorSeverity	INT; 

   SELECT	@ErrorMessage = 'Error '+ ISNULL(ERROR_MESSAGE(),'') +' in [dbo].[dbo.vtvSMRateOverrideMatlBP_Audit_Insert] trigger', 
				@ErrorSeverity = ERROR_SEVERITY(); 

   RAISERROR(@ErrorMessage, @ErrorSeverity, 1 ) 
 END CATCH 
GO
EXEC sp_settriggerorder N'[dbo].[vtvSMRateOverrideMatlBP_Audit_Insert]', 'last', 'insert', null
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
CREATE TRIGGER dbo.vtvSMRateOverrideMatlBP_Audit_Update ON dbo.vSMRateOverrideMatlBP
 AFTER UPDATE 
 NOT FOR REPLICATION AS 
 SET NOCOUNT ON 
 -- generated by vspAuditTriggersCreate

 BEGIN TRY 

							IF UPDATE([BreakPoint])
							BEGIN
							INSERT dbo.bHQMA (	TableName, 
																	KeyString, 
																	Co, 
																	RecType, 
																	FieldName, 
																	OldValue, 
																	NewValue, 
																	DateTime, 
																	UserName)
								
								SELECT 							'vSMRateOverrideMatlBP' , 								'<KeyString BreakPoint = "' + REPLACE(CAST(ISNULL(inserted.[BreakPoint],'') AS VARCHAR(MAX)),'"', '&quot;') + '" EntitySeq = "' + REPLACE(CAST(ISNULL(inserted.[EntitySeq],'') AS VARCHAR(MAX)),'"', '&quot;') + '" RateOverrideMaterialSeq = "' + REPLACE(CAST(ISNULL(inserted.[RateOverrideMaterialSeq],'') AS VARCHAR(MAX)),'"', '&quot;') + '" SMCo = "' + REPLACE(CAST(ISNULL(inserted.[SMCo],'') AS VARCHAR(MAX)),'"', '&quot;') + '" />' , 								inserted.SMCo , 								'C' , 								'BreakPoint' , 								CONVERT(VARCHAR(MAX), deleted.[BreakPoint]) , 								CONVERT(VARCHAR(MAX), inserted.[BreakPoint]) , 								GETDATE() , 								SUSER_SNAME()
							FROM inserted
								INNER JOIN deleted
									ON  inserted.[SMRateOverrideMatlBPID] = deleted.[SMRateOverrideMatlBPID] 
									AND ((inserted.[BreakPoint] <> deleted.[BreakPoint]) OR (inserted.[BreakPoint] IS NULL AND deleted.[BreakPoint] IS NOT NULL) OR (inserted.[BreakPoint] IS NOT NULL AND deleted.[BreakPoint] IS NULL))
								JOIN dbo.vAuditFlagCompany AS afc ON inserted.SMCo = afc.AuditCo 
							WHERE afc.AuditFlagID = 7

							END 

							IF UPDATE([EntitySeq])
							BEGIN
							INSERT dbo.bHQMA (	TableName, 
																	KeyString, 
																	Co, 
																	RecType, 
																	FieldName, 
																	OldValue, 
																	NewValue, 
																	DateTime, 
																	UserName)
								
								SELECT 							'vSMRateOverrideMatlBP' , 								'<KeyString BreakPoint = "' + REPLACE(CAST(ISNULL(inserted.[BreakPoint],'') AS VARCHAR(MAX)),'"', '&quot;') + '" EntitySeq = "' + REPLACE(CAST(ISNULL(inserted.[EntitySeq],'') AS VARCHAR(MAX)),'"', '&quot;') + '" RateOverrideMaterialSeq = "' + REPLACE(CAST(ISNULL(inserted.[RateOverrideMaterialSeq],'') AS VARCHAR(MAX)),'"', '&quot;') + '" SMCo = "' + REPLACE(CAST(ISNULL(inserted.[SMCo],'') AS VARCHAR(MAX)),'"', '&quot;') + '" />' , 								inserted.SMCo , 								'C' , 								'EntitySeq' , 								CONVERT(VARCHAR(MAX), deleted.[EntitySeq]) , 								CONVERT(VARCHAR(MAX), inserted.[EntitySeq]) , 								GETDATE() , 								SUSER_SNAME()
							FROM inserted
								INNER JOIN deleted
									ON  inserted.[SMRateOverrideMatlBPID] = deleted.[SMRateOverrideMatlBPID] 
									AND ((inserted.[EntitySeq] <> deleted.[EntitySeq]) OR (inserted.[EntitySeq] IS NULL AND deleted.[EntitySeq] IS NOT NULL) OR (inserted.[EntitySeq] IS NOT NULL AND deleted.[EntitySeq] IS NULL))
								JOIN dbo.vAuditFlagCompany AS afc ON inserted.SMCo = afc.AuditCo 
							WHERE afc.AuditFlagID = 7

							END 

							IF UPDATE([Percent])
							BEGIN
							INSERT dbo.bHQMA (	TableName, 
																	KeyString, 
																	Co, 
																	RecType, 
																	FieldName, 
																	OldValue, 
																	NewValue, 
																	DateTime, 
																	UserName)
								
								SELECT 							'vSMRateOverrideMatlBP' , 								'<KeyString BreakPoint = "' + REPLACE(CAST(ISNULL(inserted.[BreakPoint],'') AS VARCHAR(MAX)),'"', '&quot;') + '" EntitySeq = "' + REPLACE(CAST(ISNULL(inserted.[EntitySeq],'') AS VARCHAR(MAX)),'"', '&quot;') + '" RateOverrideMaterialSeq = "' + REPLACE(CAST(ISNULL(inserted.[RateOverrideMaterialSeq],'') AS VARCHAR(MAX)),'"', '&quot;') + '" SMCo = "' + REPLACE(CAST(ISNULL(inserted.[SMCo],'') AS VARCHAR(MAX)),'"', '&quot;') + '" />' , 								inserted.SMCo , 								'C' , 								'Percent' , 								CONVERT(VARCHAR(MAX), deleted.[Percent]) , 								CONVERT(VARCHAR(MAX), inserted.[Percent]) , 								GETDATE() , 								SUSER_SNAME()
							FROM inserted
								INNER JOIN deleted
									ON  inserted.[SMRateOverrideMatlBPID] = deleted.[SMRateOverrideMatlBPID] 
									AND ((inserted.[Percent] <> deleted.[Percent]) OR (inserted.[Percent] IS NULL AND deleted.[Percent] IS NOT NULL) OR (inserted.[Percent] IS NOT NULL AND deleted.[Percent] IS NULL))
								JOIN dbo.vAuditFlagCompany AS afc ON inserted.SMCo = afc.AuditCo 
							WHERE afc.AuditFlagID = 7

							END 

							IF UPDATE([RateOverrideMaterialSeq])
							BEGIN
							INSERT dbo.bHQMA (	TableName, 
																	KeyString, 
																	Co, 
																	RecType, 
																	FieldName, 
																	OldValue, 
																	NewValue, 
																	DateTime, 
																	UserName)
								
								SELECT 							'vSMRateOverrideMatlBP' , 								'<KeyString BreakPoint = "' + REPLACE(CAST(ISNULL(inserted.[BreakPoint],'') AS VARCHAR(MAX)),'"', '&quot;') + '" EntitySeq = "' + REPLACE(CAST(ISNULL(inserted.[EntitySeq],'') AS VARCHAR(MAX)),'"', '&quot;') + '" RateOverrideMaterialSeq = "' + REPLACE(CAST(ISNULL(inserted.[RateOverrideMaterialSeq],'') AS VARCHAR(MAX)),'"', '&quot;') + '" SMCo = "' + REPLACE(CAST(ISNULL(inserted.[SMCo],'') AS VARCHAR(MAX)),'"', '&quot;') + '" />' , 								inserted.SMCo , 								'C' , 								'RateOverrideMaterialSeq' , 								CONVERT(VARCHAR(MAX), deleted.[RateOverrideMaterialSeq]) , 								CONVERT(VARCHAR(MAX), inserted.[RateOverrideMaterialSeq]) , 								GETDATE() , 								SUSER_SNAME()
							FROM inserted
								INNER JOIN deleted
									ON  inserted.[SMRateOverrideMatlBPID] = deleted.[SMRateOverrideMatlBPID] 
									AND ((inserted.[RateOverrideMaterialSeq] <> deleted.[RateOverrideMaterialSeq]) OR (inserted.[RateOverrideMaterialSeq] IS NULL AND deleted.[RateOverrideMaterialSeq] IS NOT NULL) OR (inserted.[RateOverrideMaterialSeq] IS NOT NULL AND deleted.[RateOverrideMaterialSeq] IS NULL))
								JOIN dbo.vAuditFlagCompany AS afc ON inserted.SMCo = afc.AuditCo 
							WHERE afc.AuditFlagID = 7

							END 

							IF UPDATE([SMCo])
							BEGIN
							INSERT dbo.bHQMA (	TableName, 
																	KeyString, 
																	Co, 
																	RecType, 
																	FieldName, 
																	OldValue, 
																	NewValue, 
																	DateTime, 
																	UserName)
								
								SELECT 							'vSMRateOverrideMatlBP' , 								'<KeyString BreakPoint = "' + REPLACE(CAST(ISNULL(inserted.[BreakPoint],'') AS VARCHAR(MAX)),'"', '&quot;') + '" EntitySeq = "' + REPLACE(CAST(ISNULL(inserted.[EntitySeq],'') AS VARCHAR(MAX)),'"', '&quot;') + '" RateOverrideMaterialSeq = "' + REPLACE(CAST(ISNULL(inserted.[RateOverrideMaterialSeq],'') AS VARCHAR(MAX)),'"', '&quot;') + '" SMCo = "' + REPLACE(CAST(ISNULL(inserted.[SMCo],'') AS VARCHAR(MAX)),'"', '&quot;') + '" />' , 								inserted.SMCo , 								'C' , 								'SMCo' , 								CONVERT(VARCHAR(MAX), deleted.[SMCo]) , 								CONVERT(VARCHAR(MAX), inserted.[SMCo]) , 								GETDATE() , 								SUSER_SNAME()
							FROM inserted
								INNER JOIN deleted
									ON  inserted.[SMRateOverrideMatlBPID] = deleted.[SMRateOverrideMatlBPID] 
									AND ((inserted.[SMCo] <> deleted.[SMCo]) OR (inserted.[SMCo] IS NULL AND deleted.[SMCo] IS NOT NULL) OR (inserted.[SMCo] IS NOT NULL AND deleted.[SMCo] IS NULL))
								JOIN dbo.vAuditFlagCompany AS afc ON inserted.SMCo = afc.AuditCo 
							WHERE afc.AuditFlagID = 7

							END 

							IF UPDATE([SMRateOverrideMatlBPID])
							BEGIN
							INSERT dbo.bHQMA (	TableName, 
																	KeyString, 
																	Co, 
																	RecType, 
																	FieldName, 
																	OldValue, 
																	NewValue, 
																	DateTime, 
																	UserName)
								
								SELECT 							'vSMRateOverrideMatlBP' , 								'<KeyString BreakPoint = "' + REPLACE(CAST(ISNULL(inserted.[BreakPoint],'') AS VARCHAR(MAX)),'"', '&quot;') + '" EntitySeq = "' + REPLACE(CAST(ISNULL(inserted.[EntitySeq],'') AS VARCHAR(MAX)),'"', '&quot;') + '" RateOverrideMaterialSeq = "' + REPLACE(CAST(ISNULL(inserted.[RateOverrideMaterialSeq],'') AS VARCHAR(MAX)),'"', '&quot;') + '" SMCo = "' + REPLACE(CAST(ISNULL(inserted.[SMCo],'') AS VARCHAR(MAX)),'"', '&quot;') + '" />' , 								inserted.SMCo , 								'C' , 								'SMRateOverrideMatlBPID' , 								CONVERT(VARCHAR(MAX), deleted.[SMRateOverrideMatlBPID]) , 								CONVERT(VARCHAR(MAX), inserted.[SMRateOverrideMatlBPID]) , 								GETDATE() , 								SUSER_SNAME()
							FROM inserted
								INNER JOIN deleted
									ON  inserted.[SMRateOverrideMatlBPID] = deleted.[SMRateOverrideMatlBPID] 
									AND ((inserted.[SMRateOverrideMatlBPID] <> deleted.[SMRateOverrideMatlBPID]) OR (inserted.[SMRateOverrideMatlBPID] IS NULL AND deleted.[SMRateOverrideMatlBPID] IS NOT NULL) OR (inserted.[SMRateOverrideMatlBPID] IS NOT NULL AND deleted.[SMRateOverrideMatlBPID] IS NULL))
								JOIN dbo.vAuditFlagCompany AS afc ON inserted.SMCo = afc.AuditCo 
							WHERE afc.AuditFlagID = 7

							END 

							IF UPDATE([UniqueAttchID])
							BEGIN
							INSERT dbo.bHQMA (	TableName, 
																	KeyString, 
																	Co, 
																	RecType, 
																	FieldName, 
																	OldValue, 
																	NewValue, 
																	DateTime, 
																	UserName)
								
								SELECT 							'vSMRateOverrideMatlBP' , 								'<KeyString BreakPoint = "' + REPLACE(CAST(ISNULL(inserted.[BreakPoint],'') AS VARCHAR(MAX)),'"', '&quot;') + '" EntitySeq = "' + REPLACE(CAST(ISNULL(inserted.[EntitySeq],'') AS VARCHAR(MAX)),'"', '&quot;') + '" RateOverrideMaterialSeq = "' + REPLACE(CAST(ISNULL(inserted.[RateOverrideMaterialSeq],'') AS VARCHAR(MAX)),'"', '&quot;') + '" SMCo = "' + REPLACE(CAST(ISNULL(inserted.[SMCo],'') AS VARCHAR(MAX)),'"', '&quot;') + '" />' , 								inserted.SMCo , 								'C' , 								'UniqueAttchID' , 								CONVERT(VARCHAR(MAX), deleted.[UniqueAttchID]) , 								CONVERT(VARCHAR(MAX), inserted.[UniqueAttchID]) , 								GETDATE() , 								SUSER_SNAME()
							FROM inserted
								INNER JOIN deleted
									ON  inserted.[SMRateOverrideMatlBPID] = deleted.[SMRateOverrideMatlBPID] 
									AND ((inserted.[UniqueAttchID] <> deleted.[UniqueAttchID]) OR (inserted.[UniqueAttchID] IS NULL AND deleted.[UniqueAttchID] IS NOT NULL) OR (inserted.[UniqueAttchID] IS NOT NULL AND deleted.[UniqueAttchID] IS NULL))
								JOIN dbo.vAuditFlagCompany AS afc ON inserted.SMCo = afc.AuditCo 
							WHERE afc.AuditFlagID = 7

							END 



 END TRY 
 BEGIN CATCH 
   DECLARE	@ErrorMessage	NVARCHAR(4000), 
				@ErrorSeverity	INT; 

   SELECT	@ErrorMessage = 'Error '+ ISNULL(ERROR_MESSAGE(),'') +' in [dbo].[dbo.vtvSMRateOverrideMatlBP_Audit_Update] trigger', 
				@ErrorSeverity = ERROR_SEVERITY(); 

   RAISERROR(@ErrorMessage, @ErrorSeverity, 1 ) 
 END CATCH 
GO
EXEC sp_settriggerorder N'[dbo].[vtvSMRateOverrideMatlBP_Audit_Update]', 'last', 'update', null
GO
ALTER TABLE [dbo].[vSMRateOverrideMatlBP] ADD CONSTRAINT [PK_vSMRateOverrideMatlBP] PRIMARY KEY CLUSTERED  ([SMRateOverrideMatlBPID]) ON [PRIMARY]
GO
ALTER TABLE [dbo].[vSMRateOverrideMatlBP] ADD CONSTRAINT [IX_vSMRateOverrideMatlBP_SMCo_EntitySeq_RateOverrideMaterialSeq_BreakPoint] UNIQUE NONCLUSTERED  ([SMCo], [EntitySeq], [RateOverrideMaterialSeq], [BreakPoint]) ON [PRIMARY]
GO
ALTER TABLE [dbo].[vSMRateOverrideMatlBP] WITH NOCHECK ADD CONSTRAINT [FK_vSMRateOverrideMatlBP_vSMEntity] FOREIGN KEY ([SMCo], [EntitySeq]) REFERENCES [dbo].[vSMEntity] ([SMCo], [EntitySeq]) ON DELETE CASCADE
GO
ALTER TABLE [dbo].[vSMRateOverrideMatlBP] WITH NOCHECK ADD CONSTRAINT [FK_vSMRateOverrideMatlBP_vSMRateOverrideMaterial] FOREIGN KEY ([SMCo], [EntitySeq], [RateOverrideMaterialSeq]) REFERENCES [dbo].[vSMRateOverrideMaterial] ([SMCo], [EntitySeq], [Seq])
GO
ALTER TABLE [dbo].[vSMRateOverrideMatlBP] NOCHECK CONSTRAINT [FK_vSMRateOverrideMatlBP_vSMEntity]
GO
ALTER TABLE [dbo].[vSMRateOverrideMatlBP] NOCHECK CONSTRAINT [FK_vSMRateOverrideMatlBP_vSMRateOverrideMaterial]
GO
