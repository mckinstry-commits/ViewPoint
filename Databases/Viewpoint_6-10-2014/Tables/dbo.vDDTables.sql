CREATE TABLE [dbo].[vDDTables]
(
[KeyID] [int] NOT NULL IDENTITY(1, 2),
[TableName] [varchar] (128) COLLATE Latin1_General_BIN NOT NULL,
[Module] [char] (3) COLLATE Latin1_General_BIN NULL,
[CopyTable] [dbo].[bYN] NOT NULL,
[IsStaticTable] [dbo].[bYN] NOT NULL,
[CoColumn] [varchar] (128) COLLATE Latin1_General_BIN NULL,
[IsTransactionTable] [dbo].[bYN] NULL
) ON [PRIMARY]
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
CREATE TRIGGER [dbo].[vtDDTablesd_Audit] ON [dbo].[vDDTables]
 AFTER DELETE
 NOT FOR REPLICATION AS
 SET NOCOUNT ON 
 -- generated by vspHQCreateAuditTriggers on May 14 2009  9:56AM

 BEGIN TRY 
   INSERT dbo.vDDChangeLog (TableName, KeyString, Action, FieldName, OldValue, NewValue, DateTime, MachineName, CommandText)
   SELECT 'vDDTables' , '<KeyString TableName = "' + REPLACE(CAST(deleted.TableName AS VARCHAR(MAX)),'"', '&quot;') + '" />' , 'D' , NULL , NULL , NULL , GETDATE() , HOST_NAME() , 'DELETE FROM vDDTables WHERE TableName = ''' + CAST(deleted.TableName AS VARCHAR(MAX)) + ''''
	FROM deleted
 END TRY 
 BEGIN CATCH 
   RAISERROR('Error in [dbo].[dbo.vtDDTablesi_Audit] trigger', 16, 1 ) with log
 END CATCH 
GO
EXEC sp_settriggerorder N'[dbo].[vtDDTablesd_Audit]', 'last', 'delete', null
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
CREATE TRIGGER [dbo].[vtDDTablesi_Audit] ON [dbo].[vDDTables]
 AFTER INSERT
 NOT FOR REPLICATION AS
 SET NOCOUNT ON 
 -- generated by vspHQCreateAuditTriggers on May 14 2009  9:56AM

 BEGIN TRY 
   INSERT dbo.vDDChangeLog (TableName, KeyString, Action, FieldName, OldValue, NewValue, DateTime, MachineName, CommandText)
   SELECT 'vDDTables' , '<KeyString TableName = "' + REPLACE(CAST(inserted.TableName AS VARCHAR(MAX)),'"', '&quot;') + '" />' , 'A' , NULL , NULL , NULL , GETDATE() , HOST_NAME() , 'INSERT INTO dbo.[vDDTables] ([TableName], [Module], [CopyTable], [IsStaticTable], [CoColumn], [IsTransactionTable]) VALUES (' + ISNULL('''' + REPLACE(CAST(TableName AS NVARCHAR(MAX)), '''' , '''''') + '''', 'NULL') + ',' + ISNULL('''' + REPLACE(CAST(Module AS NVARCHAR(MAX)), '''' , '''''') + '''', 'NULL') + ',' + ISNULL('''' + REPLACE(CAST(CopyTable AS NVARCHAR(MAX)), '''' , '''''') + '''', 'NULL') + ',' + ISNULL('''' + REPLACE(CAST(IsStaticTable AS NVARCHAR(MAX)), '''' , '''''') + '''', 'NULL') + ',' + ISNULL('''' + REPLACE(CAST(CoColumn AS NVARCHAR(MAX)), '''' , '''''') + '''', 'NULL') + ',' + ISNULL('''' + REPLACE(CAST(IsTransactionTable AS NVARCHAR(MAX)), '''' , '''''') + '''', 'NULL')  + ')'
	FROM inserted
 END TRY 
 BEGIN CATCH 
   RAISERROR('Error in [dbo].[dbo.vtDDTablesi_Audit] trigger', 16, 1 ) with log
 END CATCH 
GO
EXEC sp_settriggerorder N'[dbo].[vtDDTablesi_Audit]', 'last', 'insert', null
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
CREATE TRIGGER [dbo].[vtDDTablesu_Audit] ON [dbo].[vDDTables]
 AFTER UPDATE 
 NOT FOR REPLICATION AS 
 SET NOCOUNT ON 
 -- generated by vspHQCreateAuditTriggers on May 14 2009  9:56AM

 BEGIN TRY 
 IF UPDATE([TableName])
   INSERT dbo.vDDChangeLog (TableName, KeyString, Action, FieldName, OldValue, NewValue, DateTime, MachineName, CommandText)
   SELECT 'vDDTables' , '<KeyString TableName = "' + REPLACE(CAST(inserted.TableName AS VARCHAR(MAX)),'"', '&quot;') + '" />' , 'U' , 'TableName' ,  CONVERT(VARCHAR(MAX), deleted.[TableName]) ,  Convert(VARCHAR(MAX), inserted.[TableName]) , GETDATE() , HOST_NAME() , 'UPDATE vDDTables SET TableName = ''' + ISNULL(REPLACE(Convert(VARCHAR(MAX), inserted.[TableName]), '''' , ''''''), 'NULL') + ''' WHERE TableName = ''' + CAST(inserted.TableName AS VARCHAR(MAX)) + ''''
		FROM inserted
			INNER JOIN deleted
         ON  inserted.[TableName] = deleted.[TableName] 
         AND ISNULL(inserted.[TableName],'') <> ISNULL(deleted.[TableName],'')

 IF UPDATE([Module])
   INSERT dbo.vDDChangeLog (TableName, KeyString, Action, FieldName, OldValue, NewValue, DateTime, MachineName, CommandText)
   SELECT 'vDDTables' , '<KeyString TableName = "' + REPLACE(CAST(inserted.TableName AS VARCHAR(MAX)),'"', '&quot;') + '" />' , 'U' , 'Module' ,  CONVERT(VARCHAR(MAX), deleted.[Module]) ,  Convert(VARCHAR(MAX), inserted.[Module]) , GETDATE() , HOST_NAME() , 'UPDATE vDDTables SET Module = ''' + ISNULL(REPLACE(Convert(VARCHAR(MAX), inserted.[Module]), '''' , ''''''), 'NULL') + ''' WHERE TableName = ''' + CAST(inserted.TableName AS VARCHAR(MAX)) + ''''
		FROM inserted
			INNER JOIN deleted
         ON  inserted.[TableName] = deleted.[TableName] 
         AND ISNULL(inserted.[Module],'') <> ISNULL(deleted.[Module],'')

 IF UPDATE([CopyTable])
   INSERT dbo.vDDChangeLog (TableName, KeyString, Action, FieldName, OldValue, NewValue, DateTime, MachineName, CommandText)
   SELECT 'vDDTables' , '<KeyString TableName = "' + REPLACE(CAST(inserted.TableName AS VARCHAR(MAX)),'"', '&quot;') + '" />' , 'U' , 'CopyTable' ,  CONVERT(VARCHAR(MAX), deleted.[CopyTable]) ,  Convert(VARCHAR(MAX), inserted.[CopyTable]) , GETDATE() , HOST_NAME() , 'UPDATE vDDTables SET CopyTable = ''' + ISNULL(REPLACE(Convert(VARCHAR(MAX), inserted.[CopyTable]), '''' , ''''''), 'NULL') + ''' WHERE TableName = ''' + CAST(inserted.TableName AS VARCHAR(MAX)) + ''''
		FROM inserted
			INNER JOIN deleted
         ON  inserted.[TableName] = deleted.[TableName] 
         AND ISNULL(inserted.[CopyTable],'') <> ISNULL(deleted.[CopyTable],'')

 IF UPDATE([IsStaticTable])
   INSERT dbo.vDDChangeLog (TableName, KeyString, Action, FieldName, OldValue, NewValue, DateTime, MachineName, CommandText)
   SELECT 'vDDTables' , '<KeyString TableName = "' + REPLACE(CAST(inserted.TableName AS VARCHAR(MAX)),'"', '&quot;') + '" />' , 'U' , 'IsStaticTable' ,  CONVERT(VARCHAR(MAX), deleted.[IsStaticTable]) ,  Convert(VARCHAR(MAX), inserted.[IsStaticTable]) , GETDATE() , HOST_NAME() , 'UPDATE vDDTables SET IsStaticTable = ''' + ISNULL(REPLACE(Convert(VARCHAR(MAX), inserted.[IsStaticTable]), '''' , ''''''), 'NULL') + ''' WHERE TableName = ''' + CAST(inserted.TableName AS VARCHAR(MAX)) + ''''
		FROM inserted
			INNER JOIN deleted
         ON  inserted.[TableName] = deleted.[TableName] 
         AND ISNULL(inserted.[IsStaticTable],'') <> ISNULL(deleted.[IsStaticTable],'')

 IF UPDATE([CoColumn])
   INSERT dbo.vDDChangeLog (TableName, KeyString, Action, FieldName, OldValue, NewValue, DateTime, MachineName, CommandText)
   SELECT 'vDDTables' , '<KeyString TableName = "' + REPLACE(CAST(inserted.TableName AS VARCHAR(MAX)),'"', '&quot;') + '" />' , 'U' , 'CoColumn' ,  CONVERT(VARCHAR(MAX), deleted.[CoColumn]) ,  Convert(VARCHAR(MAX), inserted.[CoColumn]) , GETDATE() , HOST_NAME() , 'UPDATE vDDTables SET CoColumn = ''' + ISNULL(REPLACE(Convert(VARCHAR(MAX), inserted.[CoColumn]), '''' , ''''''), 'NULL') + ''' WHERE TableName = ''' + CAST(inserted.TableName AS VARCHAR(MAX)) + ''''
		FROM inserted
			INNER JOIN deleted
         ON  inserted.[TableName] = deleted.[TableName] 
         AND ISNULL(inserted.[CoColumn],'') <> ISNULL(deleted.[CoColumn],'')

 IF UPDATE([IsTransactionTable])
   INSERT dbo.vDDChangeLog (TableName, KeyString, Action, FieldName, OldValue, NewValue, DateTime, MachineName, CommandText)
   SELECT 'vDDTables' , '<KeyString TableName = "' + REPLACE(CAST(inserted.TableName AS VARCHAR(MAX)),'"', '&quot;') + '" />' , 'U' , 'IsTransactionTable' ,  CONVERT(VARCHAR(MAX), deleted.[IsTransactionTable]) ,  Convert(VARCHAR(MAX), inserted.[IsTransactionTable]) , GETDATE() , HOST_NAME() , 'UPDATE vDDTables SET IsTransactionTable = ''' + ISNULL(REPLACE(Convert(VARCHAR(MAX), inserted.[IsTransactionTable]), '''' , ''''''), 'NULL') + ''' WHERE TableName = ''' + CAST(inserted.TableName AS VARCHAR(MAX)) + ''''
		FROM inserted
			INNER JOIN deleted
         ON  inserted.[TableName] = deleted.[TableName] 
         AND ISNULL(inserted.[IsTransactionTable],'') <> ISNULL(deleted.[IsTransactionTable],'')

 END TRY 
 BEGIN CATCH 
   RAISERROR('Error in [dbo].[dbo.vtDDTablesi_Audit] trigger', 16, 1 ) with log
 END CATCH 
GO
EXEC sp_settriggerorder N'[dbo].[vtDDTablesu_Audit]', 'last', 'update', null
GO
ALTER TABLE [dbo].[vDDTables] ADD CONSTRAINT [PK_vDDTables] PRIMARY KEY CLUSTERED  ([KeyID]) ON [PRIMARY]
GO
CREATE UNIQUE NONCLUSTERED INDEX [IX_vDDTables_TableName] ON [dbo].[vDDTables] ([TableName]) WITH (FILLFACTOR=80) ON [PRIMARY]
GO
