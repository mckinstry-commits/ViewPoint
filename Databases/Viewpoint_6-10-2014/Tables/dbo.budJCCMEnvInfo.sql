CREATE TABLE [dbo].[budJCCMEnvInfo]
(
[Co] [dbo].[bCompany] NOT NULL,
[BuildEnvType] [smallint] NULL,
[CConAmt] [dbo].[bDollar] NULL,
[CPctSqFt] [dbo].[bPct] NULL,
[Contract] [dbo].[bContract] NOT NULL,
[PTotConAmt] [dbo].[bPct] NULL,
[Seq] [tinyint] NOT NULL,
[SqFt] [numeric] (10, 0) NULL,
[Notes] [varchar] (max) COLLATE Latin1_General_BIN NULL,
[UniqueAttchID] [uniqueidentifier] NULL,
[KeyID] [bigint] NOT NULL IDENTITY(1, 1),
[BEDesc] [dbo].[bItemDesc] NULL
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
CREATE TRIGGER dbo.vtbudJCCMEnvInfo_Audit_Delete ON dbo.budJCCMEnvInfo
 AFTER DELETE
 NOT FOR REPLICATION AS
 SET NOCOUNT ON 
 -- generated by vspHQCreateAuditTriggers on May 30 2014 10:36AM

 BEGIN TRY 
DECLARE @HQMAKeys TABLE
	(
		  AuditID		bigint
		, KeyString		varchar(max)
	);
   INSERT dbo.HQMA (TableName, KeyString, Co, RecType, FieldName, OldValue, NewValue, DateTime, UserName)
		OUTPUT inserted.AuditID, inserted.KeyString INTO @HQMAKeys (AuditID, KeyString) 
   SELECT 'budJCCMEnvInfo' , '<KeyString Contract = "' + REPLACE(CAST(deleted.[Contract] AS VARCHAR(MAX)),'"', '&quot;') + '" Seq = "' + REPLACE(CAST(deleted.[Seq] AS VARCHAR(MAX)),'"', '&quot;') + '" />' , deleted.Co , 'D' , NULL , NULL , NULL , GETDATE() , SUSER_SNAME()
	FROM deleted
 INSERT INTO HQSA ( AuditID, Datatype, Qualifier, Instance, TableName)
				SELECT Keys.AuditID, 'bContract', d.Co, d.Contract, 'budJCCMEnvInfo'
				FROM deleted AS d
				INNER JOIN @HQMAKeys AS Keys ON Keys.KeyString = '<KeyString Contract = "' + REPLACE(CAST(d.[Contract] AS VARCHAR(MAX)),'"', '&quot;') + '" Seq = "' + REPLACE(CAST(d.[Seq] AS VARCHAR(MAX)),'"', '&quot;') + '" />'

 END TRY 
 BEGIN CATCH 
   DECLARE	@ErrorMessage	NVARCHAR(4000), 
				@ErrorSeverity	INT; 

   SELECT	@ErrorMessage = 'Error '+ ISNULL(ERROR_MESSAGE(),'') +' in [dbo].[dbo.vtbudJCCMEnvInfo_Audit_Delete] trigger', 
				@ErrorSeverity = ERROR_SEVERITY(); 

   RAISERROR(@ErrorMessage, @ErrorSeverity, 1 ) 
 END CATCH 
GO
EXEC sp_settriggerorder N'[dbo].[vtbudJCCMEnvInfo_Audit_Delete]', 'last', 'delete', null
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
CREATE TRIGGER dbo.vtbudJCCMEnvInfo_Audit_Insert ON dbo.budJCCMEnvInfo
 AFTER INSERT
 NOT FOR REPLICATION AS
 SET NOCOUNT ON 
 -- generated by vspHQCreateAuditTriggers on May 30 2014 10:36AM

 BEGIN TRY 
DECLARE @HQMAKeys TABLE
	(
		  AuditID		bigint
		, KeyString		varchar(max)
	);
   INSERT dbo.HQMA (TableName, KeyString, Co, RecType, FieldName, OldValue, NewValue, DateTime, UserName)
		OUTPUT inserted.AuditID, inserted.KeyString INTO @HQMAKeys (AuditID, KeyString) 
   SELECT 'budJCCMEnvInfo' , '<KeyString Contract = "' + REPLACE(CAST(inserted.[Contract] AS VARCHAR(MAX)),'"', '&quot;') + '" Seq = "' + REPLACE(CAST(inserted.[Seq] AS VARCHAR(MAX)),'"', '&quot;') + '" />' , ISNULL(inserted.Co, '') , 'A' , NULL , NULL , NULL , GETDATE() , SUSER_SNAME()
	FROM inserted
 INSERT INTO HQSA ( AuditID, Datatype, Qualifier, Instance, TableName)
				SELECT Keys.AuditID, 'bContract', i.Co, i.Contract, 'budJCCMEnvInfo'
				FROM inserted AS i
				INNER JOIN @HQMAKeys AS Keys ON Keys.KeyString = '<KeyString Contract = "' + REPLACE(CAST(i.[Contract] AS VARCHAR(MAX)),'"', '&quot;') + '" Seq = "' + REPLACE(CAST(i.[Seq] AS VARCHAR(MAX)),'"', '&quot;') + '" />'

 END TRY 
 BEGIN CATCH 
   DECLARE	@ErrorMessage	NVARCHAR(4000), 
				@ErrorSeverity	INT; 

   SELECT	@ErrorMessage = 'Error '+ ISNULL(ERROR_MESSAGE(),'') +' in [dbo].[dbo.vtbudJCCMEnvInfo_Audit_Insert] trigger', 
				@ErrorSeverity = ERROR_SEVERITY(); 

   RAISERROR(@ErrorMessage, @ErrorSeverity, 1 ) 
 END CATCH 
GO
EXEC sp_settriggerorder N'[dbo].[vtbudJCCMEnvInfo_Audit_Insert]', 'last', 'insert', null
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
CREATE TRIGGER dbo.vtbudJCCMEnvInfo_Audit_Update ON dbo.budJCCMEnvInfo
 AFTER UPDATE 
 NOT FOR REPLICATION AS 
 SET NOCOUNT ON 
 -- generated by vspHQCreateAuditTriggers on May 30 2014 10:36AM

 BEGIN TRY 
DECLARE @HQMAKeys TABLE
	(
		  AuditID		bigint
		, KeyString		varchar(max)
	);
 IF UPDATE([Co])
 BEGIN   INSERT dbo.HQMA (TableName, KeyString, Co, RecType, FieldName, OldValue, NewValue, DateTime, UserName)
		OUTPUT inserted.AuditID, inserted.KeyString INTO @HQMAKeys (AuditID, KeyString) 
   SELECT 'budJCCMEnvInfo' , '<KeyString Contract = "' + REPLACE(CAST(inserted.[Contract] AS VARCHAR(MAX)),'"', '&quot;') + '" Seq = "' + REPLACE(CAST(inserted.[Seq] AS VARCHAR(MAX)),'"', '&quot;') + '" />' , inserted.Co , 'C' , '[Co]' ,  CONVERT(VARCHAR(MAX), deleted.[Co]) ,  CONVERT(VARCHAR(MAX), inserted.[Co]) , GETDATE() , SUSER_SNAME()
		FROM inserted
			INNER JOIN deleted
         ON  inserted.[KeyID] = deleted.[KeyID] 
         AND ((inserted.[Co] <> deleted.[Co]) OR (inserted.[Co] IS NULL AND deleted.[Co] IS NOT NULL) OR (inserted.[Co] IS NOT NULL AND deleted.[Co] IS NULL))

 INSERT INTO HQSA ( AuditID, Datatype, Qualifier, Instance, TableName)
				SELECT Keys.AuditID, 'bContract', i.Co, i.Contract, 'budJCCMEnvInfo'
				FROM inserted AS i
				INNER JOIN @HQMAKeys AS Keys ON Keys.KeyString = '<KeyString Contract = "' + REPLACE(CAST(i.[Contract] AS VARCHAR(MAX)),'"', '&quot;') + '" Seq = "' + REPLACE(CAST(i.[Seq] AS VARCHAR(MAX)),'"', '&quot;') + '" />'

 DELETE FROM @HQMAKeys; 
 END 

 IF UPDATE([BuildEnvType])
 BEGIN   INSERT dbo.HQMA (TableName, KeyString, Co, RecType, FieldName, OldValue, NewValue, DateTime, UserName)
		OUTPUT inserted.AuditID, inserted.KeyString INTO @HQMAKeys (AuditID, KeyString) 
   SELECT 'budJCCMEnvInfo' , '<KeyString Contract = "' + REPLACE(CAST(inserted.[Contract] AS VARCHAR(MAX)),'"', '&quot;') + '" Seq = "' + REPLACE(CAST(inserted.[Seq] AS VARCHAR(MAX)),'"', '&quot;') + '" />' , inserted.Co , 'C' , '[BuildEnvType]' ,  CONVERT(VARCHAR(MAX), deleted.[BuildEnvType]) ,  CONVERT(VARCHAR(MAX), inserted.[BuildEnvType]) , GETDATE() , SUSER_SNAME()
		FROM inserted
			INNER JOIN deleted
         ON  inserted.[KeyID] = deleted.[KeyID] 
         AND ((inserted.[BuildEnvType] <> deleted.[BuildEnvType]) OR (inserted.[BuildEnvType] IS NULL AND deleted.[BuildEnvType] IS NOT NULL) OR (inserted.[BuildEnvType] IS NOT NULL AND deleted.[BuildEnvType] IS NULL))

 INSERT INTO HQSA ( AuditID, Datatype, Qualifier, Instance, TableName)
				SELECT Keys.AuditID, 'bContract', i.Co, i.Contract, 'budJCCMEnvInfo'
				FROM inserted AS i
				INNER JOIN @HQMAKeys AS Keys ON Keys.KeyString = '<KeyString Contract = "' + REPLACE(CAST(i.[Contract] AS VARCHAR(MAX)),'"', '&quot;') + '" Seq = "' + REPLACE(CAST(i.[Seq] AS VARCHAR(MAX)),'"', '&quot;') + '" />'

 DELETE FROM @HQMAKeys; 
 END 

 IF UPDATE([CConAmt])
 BEGIN   INSERT dbo.HQMA (TableName, KeyString, Co, RecType, FieldName, OldValue, NewValue, DateTime, UserName)
		OUTPUT inserted.AuditID, inserted.KeyString INTO @HQMAKeys (AuditID, KeyString) 
   SELECT 'budJCCMEnvInfo' , '<KeyString Contract = "' + REPLACE(CAST(inserted.[Contract] AS VARCHAR(MAX)),'"', '&quot;') + '" Seq = "' + REPLACE(CAST(inserted.[Seq] AS VARCHAR(MAX)),'"', '&quot;') + '" />' , inserted.Co , 'C' , '[CConAmt]' ,  CONVERT(VARCHAR(MAX), deleted.[CConAmt]) ,  CONVERT(VARCHAR(MAX), inserted.[CConAmt]) , GETDATE() , SUSER_SNAME()
		FROM inserted
			INNER JOIN deleted
         ON  inserted.[KeyID] = deleted.[KeyID] 
         AND ((inserted.[CConAmt] <> deleted.[CConAmt]) OR (inserted.[CConAmt] IS NULL AND deleted.[CConAmt] IS NOT NULL) OR (inserted.[CConAmt] IS NOT NULL AND deleted.[CConAmt] IS NULL))

 INSERT INTO HQSA ( AuditID, Datatype, Qualifier, Instance, TableName)
				SELECT Keys.AuditID, 'bContract', i.Co, i.Contract, 'budJCCMEnvInfo'
				FROM inserted AS i
				INNER JOIN @HQMAKeys AS Keys ON Keys.KeyString = '<KeyString Contract = "' + REPLACE(CAST(i.[Contract] AS VARCHAR(MAX)),'"', '&quot;') + '" Seq = "' + REPLACE(CAST(i.[Seq] AS VARCHAR(MAX)),'"', '&quot;') + '" />'

 DELETE FROM @HQMAKeys; 
 END 

 IF UPDATE([CPctSqFt])
 BEGIN   INSERT dbo.HQMA (TableName, KeyString, Co, RecType, FieldName, OldValue, NewValue, DateTime, UserName)
		OUTPUT inserted.AuditID, inserted.KeyString INTO @HQMAKeys (AuditID, KeyString) 
   SELECT 'budJCCMEnvInfo' , '<KeyString Contract = "' + REPLACE(CAST(inserted.[Contract] AS VARCHAR(MAX)),'"', '&quot;') + '" Seq = "' + REPLACE(CAST(inserted.[Seq] AS VARCHAR(MAX)),'"', '&quot;') + '" />' , inserted.Co , 'C' , '[CPctSqFt]' ,  CONVERT(VARCHAR(MAX), deleted.[CPctSqFt]) ,  CONVERT(VARCHAR(MAX), inserted.[CPctSqFt]) , GETDATE() , SUSER_SNAME()
		FROM inserted
			INNER JOIN deleted
         ON  inserted.[KeyID] = deleted.[KeyID] 
         AND ((inserted.[CPctSqFt] <> deleted.[CPctSqFt]) OR (inserted.[CPctSqFt] IS NULL AND deleted.[CPctSqFt] IS NOT NULL) OR (inserted.[CPctSqFt] IS NOT NULL AND deleted.[CPctSqFt] IS NULL))

 INSERT INTO HQSA ( AuditID, Datatype, Qualifier, Instance, TableName)
				SELECT Keys.AuditID, 'bContract', i.Co, i.Contract, 'budJCCMEnvInfo'
				FROM inserted AS i
				INNER JOIN @HQMAKeys AS Keys ON Keys.KeyString = '<KeyString Contract = "' + REPLACE(CAST(i.[Contract] AS VARCHAR(MAX)),'"', '&quot;') + '" Seq = "' + REPLACE(CAST(i.[Seq] AS VARCHAR(MAX)),'"', '&quot;') + '" />'

 DELETE FROM @HQMAKeys; 
 END 

 IF UPDATE([Contract])
 BEGIN   INSERT dbo.HQMA (TableName, KeyString, Co, RecType, FieldName, OldValue, NewValue, DateTime, UserName)
		OUTPUT inserted.AuditID, inserted.KeyString INTO @HQMAKeys (AuditID, KeyString) 
   SELECT 'budJCCMEnvInfo' , '<KeyString Contract = "' + REPLACE(CAST(inserted.[Contract] AS VARCHAR(MAX)),'"', '&quot;') + '" Seq = "' + REPLACE(CAST(inserted.[Seq] AS VARCHAR(MAX)),'"', '&quot;') + '" />' , inserted.Co , 'C' , '[Contract]' ,  CONVERT(VARCHAR(MAX), deleted.[Contract]) ,  CONVERT(VARCHAR(MAX), inserted.[Contract]) , GETDATE() , SUSER_SNAME()
		FROM inserted
			INNER JOIN deleted
         ON  inserted.[KeyID] = deleted.[KeyID] 
         AND ((inserted.[Contract] <> deleted.[Contract]) OR (inserted.[Contract] IS NULL AND deleted.[Contract] IS NOT NULL) OR (inserted.[Contract] IS NOT NULL AND deleted.[Contract] IS NULL))

 INSERT INTO HQSA ( AuditID, Datatype, Qualifier, Instance, TableName)
				SELECT Keys.AuditID, 'bContract', i.Co, i.Contract, 'budJCCMEnvInfo'
				FROM inserted AS i
				INNER JOIN @HQMAKeys AS Keys ON Keys.KeyString = '<KeyString Contract = "' + REPLACE(CAST(i.[Contract] AS VARCHAR(MAX)),'"', '&quot;') + '" Seq = "' + REPLACE(CAST(i.[Seq] AS VARCHAR(MAX)),'"', '&quot;') + '" />'

 DELETE FROM @HQMAKeys; 
 END 

 IF UPDATE([PTotConAmt])
 BEGIN   INSERT dbo.HQMA (TableName, KeyString, Co, RecType, FieldName, OldValue, NewValue, DateTime, UserName)
		OUTPUT inserted.AuditID, inserted.KeyString INTO @HQMAKeys (AuditID, KeyString) 
   SELECT 'budJCCMEnvInfo' , '<KeyString Contract = "' + REPLACE(CAST(inserted.[Contract] AS VARCHAR(MAX)),'"', '&quot;') + '" Seq = "' + REPLACE(CAST(inserted.[Seq] AS VARCHAR(MAX)),'"', '&quot;') + '" />' , inserted.Co , 'C' , '[PTotConAmt]' ,  CONVERT(VARCHAR(MAX), deleted.[PTotConAmt]) ,  CONVERT(VARCHAR(MAX), inserted.[PTotConAmt]) , GETDATE() , SUSER_SNAME()
		FROM inserted
			INNER JOIN deleted
         ON  inserted.[KeyID] = deleted.[KeyID] 
         AND ((inserted.[PTotConAmt] <> deleted.[PTotConAmt]) OR (inserted.[PTotConAmt] IS NULL AND deleted.[PTotConAmt] IS NOT NULL) OR (inserted.[PTotConAmt] IS NOT NULL AND deleted.[PTotConAmt] IS NULL))

 INSERT INTO HQSA ( AuditID, Datatype, Qualifier, Instance, TableName)
				SELECT Keys.AuditID, 'bContract', i.Co, i.Contract, 'budJCCMEnvInfo'
				FROM inserted AS i
				INNER JOIN @HQMAKeys AS Keys ON Keys.KeyString = '<KeyString Contract = "' + REPLACE(CAST(i.[Contract] AS VARCHAR(MAX)),'"', '&quot;') + '" Seq = "' + REPLACE(CAST(i.[Seq] AS VARCHAR(MAX)),'"', '&quot;') + '" />'

 DELETE FROM @HQMAKeys; 
 END 

 IF UPDATE([Seq])
 BEGIN   INSERT dbo.HQMA (TableName, KeyString, Co, RecType, FieldName, OldValue, NewValue, DateTime, UserName)
		OUTPUT inserted.AuditID, inserted.KeyString INTO @HQMAKeys (AuditID, KeyString) 
   SELECT 'budJCCMEnvInfo' , '<KeyString Contract = "' + REPLACE(CAST(inserted.[Contract] AS VARCHAR(MAX)),'"', '&quot;') + '" Seq = "' + REPLACE(CAST(inserted.[Seq] AS VARCHAR(MAX)),'"', '&quot;') + '" />' , inserted.Co , 'C' , '[Seq]' ,  CONVERT(VARCHAR(MAX), deleted.[Seq]) ,  CONVERT(VARCHAR(MAX), inserted.[Seq]) , GETDATE() , SUSER_SNAME()
		FROM inserted
			INNER JOIN deleted
         ON  inserted.[KeyID] = deleted.[KeyID] 
         AND ((inserted.[Seq] <> deleted.[Seq]) OR (inserted.[Seq] IS NULL AND deleted.[Seq] IS NOT NULL) OR (inserted.[Seq] IS NOT NULL AND deleted.[Seq] IS NULL))

 INSERT INTO HQSA ( AuditID, Datatype, Qualifier, Instance, TableName)
				SELECT Keys.AuditID, 'bContract', i.Co, i.Contract, 'budJCCMEnvInfo'
				FROM inserted AS i
				INNER JOIN @HQMAKeys AS Keys ON Keys.KeyString = '<KeyString Contract = "' + REPLACE(CAST(i.[Contract] AS VARCHAR(MAX)),'"', '&quot;') + '" Seq = "' + REPLACE(CAST(i.[Seq] AS VARCHAR(MAX)),'"', '&quot;') + '" />'

 DELETE FROM @HQMAKeys; 
 END 

 IF UPDATE([SqFt])
 BEGIN   INSERT dbo.HQMA (TableName, KeyString, Co, RecType, FieldName, OldValue, NewValue, DateTime, UserName)
		OUTPUT inserted.AuditID, inserted.KeyString INTO @HQMAKeys (AuditID, KeyString) 
   SELECT 'budJCCMEnvInfo' , '<KeyString Contract = "' + REPLACE(CAST(inserted.[Contract] AS VARCHAR(MAX)),'"', '&quot;') + '" Seq = "' + REPLACE(CAST(inserted.[Seq] AS VARCHAR(MAX)),'"', '&quot;') + '" />' , inserted.Co , 'C' , '[SqFt]' ,  CONVERT(VARCHAR(MAX), deleted.[SqFt]) ,  CONVERT(VARCHAR(MAX), inserted.[SqFt]) , GETDATE() , SUSER_SNAME()
		FROM inserted
			INNER JOIN deleted
         ON  inserted.[KeyID] = deleted.[KeyID] 
         AND ((inserted.[SqFt] <> deleted.[SqFt]) OR (inserted.[SqFt] IS NULL AND deleted.[SqFt] IS NOT NULL) OR (inserted.[SqFt] IS NOT NULL AND deleted.[SqFt] IS NULL))

 INSERT INTO HQSA ( AuditID, Datatype, Qualifier, Instance, TableName)
				SELECT Keys.AuditID, 'bContract', i.Co, i.Contract, 'budJCCMEnvInfo'
				FROM inserted AS i
				INNER JOIN @HQMAKeys AS Keys ON Keys.KeyString = '<KeyString Contract = "' + REPLACE(CAST(i.[Contract] AS VARCHAR(MAX)),'"', '&quot;') + '" Seq = "' + REPLACE(CAST(i.[Seq] AS VARCHAR(MAX)),'"', '&quot;') + '" />'

 DELETE FROM @HQMAKeys; 
 END 

 IF UPDATE([Notes])
 BEGIN   INSERT dbo.HQMA (TableName, KeyString, Co, RecType, FieldName, OldValue, NewValue, DateTime, UserName)
		OUTPUT inserted.AuditID, inserted.KeyString INTO @HQMAKeys (AuditID, KeyString) 
   SELECT 'budJCCMEnvInfo' , '<KeyString Contract = "' + REPLACE(CAST(inserted.[Contract] AS VARCHAR(MAX)),'"', '&quot;') + '" Seq = "' + REPLACE(CAST(inserted.[Seq] AS VARCHAR(MAX)),'"', '&quot;') + '" />' , inserted.Co , 'C' , '[Notes]' ,  CONVERT(VARCHAR(MAX), deleted.[Notes]) ,  CONVERT(VARCHAR(MAX), inserted.[Notes]) , GETDATE() , SUSER_SNAME()
		FROM inserted
			INNER JOIN deleted
         ON  inserted.[KeyID] = deleted.[KeyID] 
         AND ((inserted.[Notes] <> deleted.[Notes]) OR (inserted.[Notes] IS NULL AND deleted.[Notes] IS NOT NULL) OR (inserted.[Notes] IS NOT NULL AND deleted.[Notes] IS NULL))

 INSERT INTO HQSA ( AuditID, Datatype, Qualifier, Instance, TableName)
				SELECT Keys.AuditID, 'bContract', i.Co, i.Contract, 'budJCCMEnvInfo'
				FROM inserted AS i
				INNER JOIN @HQMAKeys AS Keys ON Keys.KeyString = '<KeyString Contract = "' + REPLACE(CAST(i.[Contract] AS VARCHAR(MAX)),'"', '&quot;') + '" Seq = "' + REPLACE(CAST(i.[Seq] AS VARCHAR(MAX)),'"', '&quot;') + '" />'

 DELETE FROM @HQMAKeys; 
 END 

 IF UPDATE([UniqueAttchID])
 BEGIN   INSERT dbo.HQMA (TableName, KeyString, Co, RecType, FieldName, OldValue, NewValue, DateTime, UserName)
		OUTPUT inserted.AuditID, inserted.KeyString INTO @HQMAKeys (AuditID, KeyString) 
   SELECT 'budJCCMEnvInfo' , '<KeyString Contract = "' + REPLACE(CAST(inserted.[Contract] AS VARCHAR(MAX)),'"', '&quot;') + '" Seq = "' + REPLACE(CAST(inserted.[Seq] AS VARCHAR(MAX)),'"', '&quot;') + '" />' , inserted.Co , 'C' , '[UniqueAttchID]' ,  CONVERT(VARCHAR(MAX), deleted.[UniqueAttchID]) ,  CONVERT(VARCHAR(MAX), inserted.[UniqueAttchID]) , GETDATE() , SUSER_SNAME()
		FROM inserted
			INNER JOIN deleted
         ON  inserted.[KeyID] = deleted.[KeyID] 
         AND ((inserted.[UniqueAttchID] <> deleted.[UniqueAttchID]) OR (inserted.[UniqueAttchID] IS NULL AND deleted.[UniqueAttchID] IS NOT NULL) OR (inserted.[UniqueAttchID] IS NOT NULL AND deleted.[UniqueAttchID] IS NULL))

 INSERT INTO HQSA ( AuditID, Datatype, Qualifier, Instance, TableName)
				SELECT Keys.AuditID, 'bContract', i.Co, i.Contract, 'budJCCMEnvInfo'
				FROM inserted AS i
				INNER JOIN @HQMAKeys AS Keys ON Keys.KeyString = '<KeyString Contract = "' + REPLACE(CAST(i.[Contract] AS VARCHAR(MAX)),'"', '&quot;') + '" Seq = "' + REPLACE(CAST(i.[Seq] AS VARCHAR(MAX)),'"', '&quot;') + '" />'

 DELETE FROM @HQMAKeys; 
 END 

 IF UPDATE([BEDesc])
 BEGIN   INSERT dbo.HQMA (TableName, KeyString, Co, RecType, FieldName, OldValue, NewValue, DateTime, UserName)
		OUTPUT inserted.AuditID, inserted.KeyString INTO @HQMAKeys (AuditID, KeyString) 
   SELECT 'budJCCMEnvInfo' , '<KeyString Contract = "' + REPLACE(CAST(inserted.[Contract] AS VARCHAR(MAX)),'"', '&quot;') + '" Seq = "' + REPLACE(CAST(inserted.[Seq] AS VARCHAR(MAX)),'"', '&quot;') + '" />' , inserted.Co , 'C' , '[BEDesc]' ,  CONVERT(VARCHAR(MAX), deleted.[BEDesc]) ,  CONVERT(VARCHAR(MAX), inserted.[BEDesc]) , GETDATE() , SUSER_SNAME()
		FROM inserted
			INNER JOIN deleted
         ON  inserted.[KeyID] = deleted.[KeyID] 
         AND ((inserted.[BEDesc] <> deleted.[BEDesc]) OR (inserted.[BEDesc] IS NULL AND deleted.[BEDesc] IS NOT NULL) OR (inserted.[BEDesc] IS NOT NULL AND deleted.[BEDesc] IS NULL))

 INSERT INTO HQSA ( AuditID, Datatype, Qualifier, Instance, TableName)
				SELECT Keys.AuditID, 'bContract', i.Co, i.Contract, 'budJCCMEnvInfo'
				FROM inserted AS i
				INNER JOIN @HQMAKeys AS Keys ON Keys.KeyString = '<KeyString Contract = "' + REPLACE(CAST(i.[Contract] AS VARCHAR(MAX)),'"', '&quot;') + '" Seq = "' + REPLACE(CAST(i.[Seq] AS VARCHAR(MAX)),'"', '&quot;') + '" />'

 DELETE FROM @HQMAKeys; 
 END 

 END TRY 
 BEGIN CATCH 
   DECLARE	@ErrorMessage	NVARCHAR(4000), 
				@ErrorSeverity	INT; 

   SELECT	@ErrorMessage = 'Error '+ ISNULL(ERROR_MESSAGE(),'') +' in [dbo].[dbo.vtbudJCCMEnvInfo_Audit_Update] trigger', 
				@ErrorSeverity = ERROR_SEVERITY(); 

   RAISERROR(@ErrorMessage, @ErrorSeverity, 1 ) 
 END CATCH 
GO
EXEC sp_settriggerorder N'[dbo].[vtbudJCCMEnvInfo_Audit_Update]', 'last', 'update', null
GO
CREATE UNIQUE CLUSTERED INDEX [biudJCCMEnvInfo] ON [dbo].[budJCCMEnvInfo] ([Co], [Contract], [Seq]) ON [PRIMARY]
GO
